<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AugmentWebviewStateStore">
    <option name="stateMap">
      <map>
        <entry key="CHAT_STATE" value="eyJjdXJyZW50Q29udmVyc2F0aW9uSWQiOiI4MWQxNzdlNy04MzRkLTQ5YzYtODYwYS1jMzUyODYyZjA1YjQiLCJjb252ZXJzYXRpb25zIjp7IjlkOGVkNTM0LTAxYzMtNDZhMS05ZmE3LTMwZWJkMzcxYjU1OCI6eyJpZCI6IjlkOGVkNTM0LTAxYzMtNDZhMS05ZmE3LTMwZWJkMzcxYjU1OCIsIm5hbWUiOiJXZWxjb21lIHRvIEF1Z21lbnQiLCJjcmVhdGVkQXRJc28iOiIyMDI1LTAyLTI1VDExOjQzOjI2LjI1MVoiLCJjaGF0SGlzdG9yeSI6W3siY2hhdEl0ZW1UeXBlIjoiZWR1Y2F0ZS1mZWF0dXJlcyIsInJlcXVlc3RfaWQiOiJkMzYyNzY5MC03NGJkLTRhZWEtODljZi1lMjA5NmNiYWFjOTUiLCJzZWVuX3N0YXRlIjoic2VlbiJ9LHsic3RhdHVzIjoic3VjY2VzcyIsInJlcXVlc3RfaWQiOiJjZTRhMGViNi00ZDkyLTRmMmEtOWZjOS1hNTJmNzFkYmQzZjciLCJyZXF1ZXN0X21lc3NhZ2UiOiJBbmFseXplIHRoaXMgcHJvamVjdCIsInJpY2hfdGV4dF9qc29uX3JlcHIiOnsidHlwZSI6ImRvYyIsImNvbnRlbnQiOlt7InR5cGUiOiJwYXJhZ3JhcGgiLCJjb250ZW50IjpbeyJ0eXBlIjoidGV4dCIsInRleHQiOiJBbmFseXplIHRoaXMgcHJvamVjdCJ9XX1dfSwibWVudGlvbmVkX2l0ZW1zIjpbXSwic3RydWN0dXJlZF9vdXRwdXRfbm9kZXMiOlt7ImlkIjowLCJ0eXBlIjowLCJjb250ZW50IjoiIyBQcm9qZWN0IEFuYWx5c2lzOiBCb2IgU3RvdXRlIFdlYnNpdGVcblxuQmFzZWQgb24gdGhlIHByb3ZpZGVkIGZpbGVzLCB0aGlzIGFwcGVhcnMgdG8gYmUgYSBwZXJzb25hbCB3ZWJzaXRlL3BvcnRmb2xpbyBmb3IgQm9iIFN0b3V0ZSwgYSBmcm9udGVuZCBkZXZlbG9wZXIgd2l0aCBvdmVyIDI1IHllYXJzIG9mIGV4cGVyaWVuY2UuIFRoZSBwcm9qZWN0IGlzIGJ1aWx0IHVzaW5nIG1vZGVybiB3ZWIgdGVjaG5vbG9naWVzIHdpdGggQXN0cm8gYXMgdGhlIGNvcmUgZnJhbWV3b3JrLlxuXG4jIyBUZWNoIFN0YWNrXG5cbi0gKipGcmFtZXdvcmsqKjogQXN0cm8gNS4zLjAgKHN0YXRpYyBzaXRlIGdlbmVyYXRpb24pXG4tICoqVUkgTGlicmFyaWVzKio6IFxuICAtIFJlYWN0IDE5LjAuMFxuICAtIFNvbGlkSlNcbiAgLSBUYWlsd2luZCBDU1Ncbi0gKipDb250ZW50Kio6IE1EWC9NYXJrZG93biBmb3IgYmxvZyBwb3N0cywgcHJvamVjdHMsIGFuZCBDVlxuLSAqKlN0YXRlIE1hbmFnZW1lbnQqKjogTmFub3N0b3JlcyB3aXRoIHBlcnNpc3RlbnQgc3RvcmFnZVxuLSAqKkRlcGxveW1lbnQgT3B0aW9ucyoqOiBcbiAgLSBGaXJlYmFzZVxuICAtIFZlcmNlbFxuXG4jIyBQcm9qZWN0IFN0cnVjdHVyZVxuXG5UaGUgcHJvamVjdCBmb2xsb3dzIGEgdHlwaWNhbCBBc3RybyBzdHJ1Y3R1cmUgd2l0aDpcbi0gYC9zcmMvcGFnZXNgIC0gUm91dGUgZGVmaW5pdGlvbnNcbi0gYC9zcmMvY29tcG9uZW50c2AgLSBVSSBjb21wb25lbnRzIChSZWFjdCBhbmQgQXN0cm8pXG4tIGAvc3JjL2NvbnRlbnRgIC0gQ29udGVudCBjb2xsZWN0aW9ucyAoYmxvZywgcHJvamVjdHMsIHdvcmspXG4tIGAvc3JjL2xheW91dHNgIC0gUGFnZSBsYXlvdXQgdGVtcGxhdGVzXG4tIGAvc3JjL2xpYmAgLSBVdGlsaXR5IGZ1bmN0aW9ucyBhbmQgc3RhdGUgbWFuYWdlbWVudFxuXG4jIyBLZXkgRmVhdHVyZXNcblxuMS4gKipQb3J0Zm9saW8gU2hvd2Nhc2UqKjogRGlzcGxheXMgQm9iJ3Mgd29yayBleHBlcmllbmNlLCBwcm9qZWN0cywgYW5kIHNraWxsc1xuMi4gKipCbG9nKio6IENvbnRlbnQgbWFuYWdlbWVudCBmb3IgYXJ0aWNsZXMvdHV0b3JpYWxzXG4zLiAqKlByb2plY3RzIEdhbGxlcnkqKjogU2hvd2Nhc2VzIGRldmVsb3BtZW50IHByb2plY3RzIHdpdGggZmlsdGVyaW5nIGJ5IHRhZ3NcbjQuICoqQ1YvUmVzdW1lKio6IERldGFpbGVkIHdvcmsgaGlzdG9yeSBhbmQgc2tpbGxzXG41LiAqKlRoZW1lIFN3aXRjaGluZyoqOiBMaWdodC9kYXJrIG1vZGUgc3VwcG9ydFxuNi4gKipSZXNwb25zaXZlIERlc2lnbioqOiBNb2JpbGUtZnJpZW5kbHkgd2l0aCBUYWlsd2luZFxuNy4gKipBSSBJbnRlZ3JhdGlvbioqOiBIYXMgY29tcG9uZW50cyBmb3IgQUktYXNzaXN0ZWQgY29udGVudCBnZW5lcmF0aW9uXG44LiAqKkRhdGFiYXNlIEludGVncmF0aW9uKio6IFVzZXMgQXN0cm8gREIgZm9yIHN0b3JpbmcgcHJvbXB0IHRlbXBsYXRlcyBhbmQgb3RoZXIgZGF0YVxuXG4jIyBEZXZlbG9wbWVudCBFbnZpcm9ubWVudFxuXG5UaGUgcHJvamVjdCBpbmNsdWRlcyB2YXJpb3VzIG5wbSBzY3JpcHRzIGZvciBkZXZlbG9wbWVudCwgYnVpbGRpbmcsIGFuZCBkZXBsb3ltZW50OlxuLSBMb2NhbCBkZXZlbG9wbWVudCBzZXJ2ZXJcbi0gTmV0d29yay1hY2Nlc3NpYmxlIGRldmVsb3BtZW50IHNlcnZlclxuLSBGaXJlYmFzZSBlbXVsYXRpb24gYW5kIGRlcGxveW1lbnRcbi0gVmVyY2VsIGRlcGxveW1lbnRcbi0gTGludGluZyB3aXRoIEVTTGludFxuXG4jIyBJbnRlcmVzdGluZyBDb21wb25lbnRzXG5cbjEuICoqUHJvbXB0VGVtcGxhdGVFZGl0b3IvTGlzdCoqOiBSZWFjdCBjb21wb25lbnRzIGZvciBtYW5hZ2luZyBBSSBwcm9tcHQgdGVtcGxhdGVzXG4yLiAqKlR3aW5rbGluZ1N0YXJzL01ldGVvclNob3dlcioqOiBWaXN1YWwgZWZmZWN0cyBmb3IgdGhlIHNpdGVcbjMuICoqTWlkZGxld2FyZSoqOiBDdXN0b20gcmVxdWVzdCBoYW5kbGluZyBmb3IgYXV0aGVudGljYXRpb24gYW5kIGNvbnRlbnQgdmFsaWRhdGlvblxuXG4jIyBEZXBsb3ltZW50XG5cblRoZSBzaXRlIGFwcGVhcnMgdG8gYmUgY29uZmlndXJlZCBmb3IgZGVwbG95bWVudCB0bzpcbi0gRmlyZWJhc2UgKHByaW1hcnkgaG9zdGluZylcbi0gVmVyY2VsIChhbHRlcm5hdGl2ZSBob3N0aW5nKVxuXG4jIyBPYnNlcnZhdGlvbnNcblxuMS4gVGhlIHByb2plY3Qgc2VlbXMgdG8gYmUgYmFzZWQgb24gb3IgaW5zcGlyZWQgYnkgYSB0aGVtZSBjYWxsZWQgXCJBc3RybyBTcGhlcmVcIlxuMi4gSXQncyBjdXJyZW50bHkgY29uZmlndXJlZCBmb3Igc3RhdGljIHNpdGUgZ2VuZXJhdGlvbiAoU1NHKSByYXRoZXIgdGhhbiBzZXJ2ZXItc2lkZSByZW5kZXJpbmcgKFNTUilcbjMuIFRoZXJlJ3MgYSBtaXggb2YgUmVhY3QgYW5kIFNvbGlkSlMgY29tcG9uZW50cywgd2l0aCBSZWFjdCBiZWluZyB0aGUgcHJpbWFyeSBjbGllbnQtc2lkZSBmcmFtZXdvcmtcbjQuIFRoZSBzaXRlIGluY2x1ZGVzIEJvYidzIHByb2Zlc3Npb25hbCBoaXN0b3J5LCBzaG93Y2FzaW5nIGhpcyBleHRlbnNpdmUgZXhwZXJpZW5jZSBpbiBmcm9udGVuZCBkZXZlbG9wbWVudFxuNS4gVGhlcmUgYXBwZWFycyB0byBiZSBzb21lIGV4cGVyaW1lbnRhbCBBSS1yZWxhdGVkIGZ1bmN0aW9uYWxpdHkgYmVpbmcgZGV2ZWxvcGVkXG5cblRoaXMgaXMgYSBtb2Rlcm4sIHdlbGwtc3RydWN0dXJlZCB3ZWIgYXBwbGljYXRpb24gdGhhdCBlZmZlY3RpdmVseSBzaG93Y2FzZXMgQm9iJ3MgcHJvZmVzc2lvbmFsIGV4cGVyaWVuY2Ugd2hpbGUgZGVtb25zdHJhdGluZyBoaXMgdGVjaG5pY2FsIHNraWxscyB0aHJvdWdoIGl0cyBpbXBsZW1lbnRhdGlvbi5cbiJ9LHsiaWQiOjIsInR5cGUiOjIsImNvbnRlbnQiOiIifSx7ImlkIjozLCJ0eXBlIjozLCJjb250ZW50IjoicGFja2FnZS5qc29uOjAtOTQyXG5wYWNrYWdlLmpzb246OTQyLTE4NDVcbmFzdHJvLmNvbmZpZy5tanM6MC03NzhcbmFzdHJvLmNvbmZpZy5tanM6Nzc4LTk4M1xuUkVBRE1FLm1kOjAtOTgzXG5SRUFETUUubWQ6OTgzLTE5NjVcblJFQURNRS5tZDoxOTY1LTI5NjJcbnNyYy9jb250ZW50L3Byb2plY3RzL3Byb2plY3QtMS9pbmRleC5tZDowLTkxM1xucHVibGljL3BhY2thZ2UuanNvbjowLTM3OVxuc3JjLWRlc2lnbi9jdi5tZHg6MC05MzhcbnNyYy1kZXNpZ24vY3YubWR4OjkzOC0xNzY5XG5zcmMtZGVzaWduL2N2Lm1keDoyNzczLTM3NTdcbnNyYy9taWRkbGV3YXJlLmpzOjAtMTAxMlxuc3JjLWRlc2lnbi9jdi1vdWQubWR4OjgxMy0xODI3XG5kYi9jb25maWcudHM6MC04ODBcbmRiL2NvbmZpZy50czo4ODAtMTEyMlxuc3JjL3BhZ2VzL2Rldi9pbmRleC5hc3RybzowLTk3Mlxuc3JjL3BhZ2VzL2Rldi9pbmRleC5hc3Rybzo5NzItMTc1M1xuc3JjL3BhZ2VzL3Byb2plY3RzL2luZGV4LmFzdHJvOjAtOTI3XG5zcmMvY29udGVudC9ibG9nLzAyLWFzdHJvLXNwaGVyZS1nZXR0aW5nLXN0YXJ0ZWQvaW5kZXgubWQ6MC02MzhcbnNyYy9jb250ZW50L2Jsb2cvMDEtYXN0cm8tc3BoZXJlLWZpbGUtc3RydWN0dXJlL2luZGV4Lm1kOjk5MC0xOTkxXG5zcmMvY29udGVudC9jb25maWcudHM6MC02NzVcbnNyYy9sYXlvdXRzL1BhZ2VMYXlvdXQuYXN0cm86MC04ODdcbnNyYy9wYWdlcy9wcm9qZWN0cy9bLi4uc2x1Z10uYXN0cm86MC05MDJcbnNyYy9saWIvYXBwU3RvcmUudHM6MC0zOTlcbnRhaWx3aW5kLmNvbmZpZy5tanM6MC05NjdcbnBucG0tbG9jay55YW1sOjAtMTAwNVxuLmZpcmViYXNlcmM6MC04M1xuc3JjL3BhZ2VzL2luZGV4LmFzdHJvOjAtOTg3XG5zcmMvY29udGVudC9ibG9nLzA1LWFzdHJvLXNwaGVyZS13cml0aW5nLW1keC9pbmRleC5tZHg6MC04MjZcbnB1YmxpYy9wYWNrYWdlLWxvY2suanNvbjowLTk5N1xudHNjb25maWcuanNvbjowLTM4NSJ9XSwic2Vlbl9zdGF0ZSI6InNlZW4iLCJyZXNwb25zZV90ZXh0IjoiIyBQcm9qZWN0IEFuYWx5c2lzOiBCb2IgU3RvdXRlIFdlYnNpdGVcblxuQmFzZWQgb24gdGhlIHByb3ZpZGVkIGZpbGVzLCB0aGlzIGFwcGVhcnMgdG8gYmUgYSBwZXJzb25hbCB3ZWJzaXRlL3BvcnRmb2xpbyBmb3IgQm9iIFN0b3V0ZSwgYSBmcm9udGVuZCBkZXZlbG9wZXIgd2l0aCBvdmVyIDI1IHllYXJzIG9mIGV4cGVyaWVuY2UuIFRoZSBwcm9qZWN0IGlzIGJ1aWx0IHVzaW5nIG1vZGVybiB3ZWIgdGVjaG5vbG9naWVzIHdpdGggQXN0cm8gYXMgdGhlIGNvcmUgZnJhbWV3b3JrLlxuXG4jIyBUZWNoIFN0YWNrXG5cbi0gKipGcmFtZXdvcmsqKjogQXN0cm8gNS4zLjAgKHN0YXRpYyBzaXRlIGdlbmVyYXRpb24pXG4tICoqVUkgTGlicmFyaWVzKio6IFxuICAtIFJlYWN0IDE5LjAuMFxuICAtIFNvbGlkSlNcbiAgLSBUYWlsd2luZCBDU1Ncbi0gKipDb250ZW50Kio6IE1EWC9NYXJrZG93biBmb3IgYmxvZyBwb3N0cywgcHJvamVjdHMsIGFuZCBDVlxuLSAqKlN0YXRlIE1hbmFnZW1lbnQqKjogTmFub3N0b3JlcyB3aXRoIHBlcnNpc3RlbnQgc3RvcmFnZVxuLSAqKkRlcGxveW1lbnQgT3B0aW9ucyoqOiBcbiAgLSBGaXJlYmFzZVxuICAtIFZlcmNlbFxuXG4jIyBQcm9qZWN0IFN0cnVjdHVyZVxuXG5UaGUgcHJvamVjdCBmb2xsb3dzIGEgdHlwaWNhbCBBc3RybyBzdHJ1Y3R1cmUgd2l0aDpcbi0gYC9zcmMvcGFnZXNgIC0gUm91dGUgZGVmaW5pdGlvbnNcbi0gYC9zcmMvY29tcG9uZW50c2AgLSBVSSBjb21wb25lbnRzIChSZWFjdCBhbmQgQXN0cm8pXG4tIGAvc3JjL2NvbnRlbnRgIC0gQ29udGVudCBjb2xsZWN0aW9ucyAoYmxvZywgcHJvamVjdHMsIHdvcmspXG4tIGAvc3JjL2xheW91dHNgIC0gUGFnZSBsYXlvdXQgdGVtcGxhdGVzXG4tIGAvc3JjL2xpYmAgLSBVdGlsaXR5IGZ1bmN0aW9ucyBhbmQgc3RhdGUgbWFuYWdlbWVudFxuXG4jIyBLZXkgRmVhdHVyZXNcblxuMS4gKipQb3J0Zm9saW8gU2hvd2Nhc2UqKjogRGlzcGxheXMgQm9iJ3Mgd29yayBleHBlcmllbmNlLCBwcm9qZWN0cywgYW5kIHNraWxsc1xuMi4gKipCbG9nKio6IENvbnRlbnQgbWFuYWdlbWVudCBmb3IgYXJ0aWNsZXMvdHV0b3JpYWxzXG4zLiAqKlByb2plY3RzIEdhbGxlcnkqKjogU2hvd2Nhc2VzIGRldmVsb3BtZW50IHByb2plY3RzIHdpdGggZmlsdGVyaW5nIGJ5IHRhZ3NcbjQuICoqQ1YvUmVzdW1lKio6IERldGFpbGVkIHdvcmsgaGlzdG9yeSBhbmQgc2tpbGxzXG41LiAqKlRoZW1lIFN3aXRjaGluZyoqOiBMaWdodC9kYXJrIG1vZGUgc3VwcG9ydFxuNi4gKipSZXNwb25zaXZlIERlc2lnbioqOiBNb2JpbGUtZnJpZW5kbHkgd2l0aCBUYWlsd2luZFxuNy4gKipBSSBJbnRlZ3JhdGlvbioqOiBIYXMgY29tcG9uZW50cyBmb3IgQUktYXNzaXN0ZWQgY29udGVudCBnZW5lcmF0aW9uXG44LiAqKkRhdGFiYXNlIEludGVncmF0aW9uKio6IFVzZXMgQXN0cm8gREIgZm9yIHN0b3JpbmcgcHJvbXB0IHRlbXBsYXRlcyBhbmQgb3RoZXIgZGF0YVxuXG4jIyBEZXZlbG9wbWVudCBFbnZpcm9ubWVudFxuXG5UaGUgcHJvamVjdCBpbmNsdWRlcyB2YXJpb3VzIG5wbSBzY3JpcHRzIGZvciBkZXZlbG9wbWVudCwgYnVpbGRpbmcsIGFuZCBkZXBsb3ltZW50OlxuLSBMb2NhbCBkZXZlbG9wbWVudCBzZXJ2ZXJcbi0gTmV0d29yay1hY2Nlc3NpYmxlIGRldmVsb3BtZW50IHNlcnZlclxuLSBGaXJlYmFzZSBlbXVsYXRpb24gYW5kIGRlcGxveW1lbnRcbi0gVmVyY2VsIGRlcGxveW1lbnRcbi0gTGludGluZyB3aXRoIEVTTGludFxuXG4jIyBJbnRlcmVzdGluZyBDb21wb25lbnRzXG5cbjEuICoqUHJvbXB0VGVtcGxhdGVFZGl0b3IvTGlzdCoqOiBSZWFjdCBjb21wb25lbnRzIGZvciBtYW5hZ2luZyBBSSBwcm9tcHQgdGVtcGxhdGVzXG4yLiAqKlR3aW5rbGluZ1N0YXJzL01ldGVvclNob3dlcioqOiBWaXN1YWwgZWZmZWN0cyBmb3IgdGhlIHNpdGVcbjMuICoqTWlkZGxld2FyZSoqOiBDdXN0b20gcmVxdWVzdCBoYW5kbGluZyBmb3IgYXV0aGVudGljYXRpb24gYW5kIGNvbnRlbnQgdmFsaWRhdGlvblxuXG4jIyBEZXBsb3ltZW50XG5cblRoZSBzaXRlIGFwcGVhcnMgdG8gYmUgY29uZmlndXJlZCBmb3IgZGVwbG95bWVudCB0bzpcbi0gRmlyZWJhc2UgKHByaW1hcnkgaG9zdGluZylcbi0gVmVyY2VsIChhbHRlcm5hdGl2ZSBob3N0aW5nKVxuXG4jIyBPYnNlcnZhdGlvbnNcblxuMS4gVGhlIHByb2plY3Qgc2VlbXMgdG8gYmUgYmFzZWQgb24gb3IgaW5zcGlyZWQgYnkgYSB0aGVtZSBjYWxsZWQgXCJBc3RybyBTcGhlcmVcIlxuMi4gSXQncyBjdXJyZW50bHkgY29uZmlndXJlZCBmb3Igc3RhdGljIHNpdGUgZ2VuZXJhdGlvbiAoU1NHKSByYXRoZXIgdGhhbiBzZXJ2ZXItc2lkZSByZW5kZXJpbmcgKFNTUilcbjMuIFRoZXJlJ3MgYSBtaXggb2YgUmVhY3QgYW5kIFNvbGlkSlMgY29tcG9uZW50cywgd2l0aCBSZWFjdCBiZWluZyB0aGUgcHJpbWFyeSBjbGllbnQtc2lkZSBmcmFtZXdvcmtcbjQuIFRoZSBzaXRlIGluY2x1ZGVzIEJvYidzIHByb2Zlc3Npb25hbCBoaXN0b3J5LCBzaG93Y2FzaW5nIGhpcyBleHRlbnNpdmUgZXhwZXJpZW5jZSBpbiBmcm9udGVuZCBkZXZlbG9wbWVudFxuNS4gVGhlcmUgYXBwZWFycyB0byBiZSBzb21lIGV4cGVyaW1lbnRhbCBBSS1yZWxhdGVkIGZ1bmN0aW9uYWxpdHkgYmVpbmcgZGV2ZWxvcGVkXG5cblRoaXMgaXMgYSBtb2Rlcm4sIHdlbGwtc3RydWN0dXJlZCB3ZWIgYXBwbGljYXRpb24gdGhhdCBlZmZlY3RpdmVseSBzaG93Y2FzZXMgQm9iJ3MgcHJvZmVzc2lvbmFsIGV4cGVyaWVuY2Ugd2hpbGUgZGVtb25zdHJhdGluZyBoaXMgdGVjaG5pY2FsIHNraWxscyB0aHJvdWdoIGl0cyBpbXBsZW1lbnRhdGlvbi5cbiIsIndvcmtzcGFjZV9maWxlX2NodW5rcyI6W3siY2hhcl9zdGFydCI6IjAiLCJjaGFyX2VuZCI6Ijk0MiIsImJsb2JfbmFtZSI6IjE1Mzg2NDgzYmQyYTQ0MjdkMzNkMjIzMzJiOTU2ZGU0Y2E1N2U5MjE0ZjA0ZjU1ODMzMjRlYjI4NmI0Zjk1ZWEiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJwYWNrYWdlLmpzb24ifX0seyJjaGFyX3N0YXJ0IjoiOTQyIiwiY2hhcl9lbmQiOiIxODQ1IiwiYmxvYl9uYW1lIjoiMTUzODY0ODNiZDJhNDQyN2QzM2QyMjMzMmI5NTZkZTRjYTU3ZTkyMTRmMDRmNTU4MzMyNGViMjg2YjRmOTVlYSIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6InBhY2thZ2UuanNvbiJ9fSx7ImNoYXJfc3RhcnQiOiIwIiwiY2hhcl9lbmQiOiI3NzgiLCJibG9iX25hbWUiOiIwYjQyODI4M2NiMzIxZGRkNDA2YjIxNDc4MTcwNzAyMDg1NjgyYzdkOTk2OTMxYmZmNmFlODg2ODdmYmZkMWMwIiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoiYXN0cm8uY29uZmlnLm1qcyJ9fSx7ImNoYXJfc3RhcnQiOiI3NzgiLCJjaGFyX2VuZCI6Ijk4MyIsImJsb2JfbmFtZSI6IjBiNDI4MjgzY2IzMjFkZGQ0MDZiMjE0NzgxNzA3MDIwODU2ODJjN2Q5OTY5MzFiZmY2YWU4ODY4N2ZiZmQxYzAiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJhc3Ryby5jb25maWcubWpzIn19LHsiY2hhcl9zdGFydCI6IjAiLCJjaGFyX2VuZCI6Ijk4MyIsImJsb2JfbmFtZSI6ImExM2MzYzYxNzdlMzY5YmJiMDIwZWU1NjRhZGFiZDNkNWQ5ODczZTVhZjkyYmZlZjYzNmRjOTliM2U5MTliYTkiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJSRUFETUUubWQifX0seyJjaGFyX3N0YXJ0IjoiOTgzIiwiY2hhcl9lbmQiOiIxOTY1IiwiYmxvYl9uYW1lIjoiYTEzYzNjNjE3N2UzNjliYmIwMjBlZTU2NGFkYWJkM2Q1ZDk4NzNlNWFmOTJiZmVmNjM2ZGM5OWIzZTkxOWJhOSIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6IlJFQURNRS5tZCJ9fSx7ImNoYXJfc3RhcnQiOiIxOTY1IiwiY2hhcl9lbmQiOiIyOTYyIiwiYmxvYl9uYW1lIjoiYTEzYzNjNjE3N2UzNjliYmIwMjBlZTU2NGFkYWJkM2Q1ZDk4NzNlNWFmOTJiZmVmNjM2ZGM5OWIzZTkxOWJhOSIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6IlJFQURNRS5tZCJ9fSx7ImNoYXJfc3RhcnQiOiIwIiwiY2hhcl9lbmQiOiI5MTMiLCJibG9iX25hbWUiOiJkOWFmMjY4YjQ2ZDg5Zjc0MjZlNTQ5OTkyNTI5OGEyMTNjMjYyYjVlMmEyNWE0ZjUzM2JmNzMyZDU5NjQ1YTgwIiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoic3JjL2NvbnRlbnQvcHJvamVjdHMvcHJvamVjdC0xL2luZGV4Lm1kIn19LHsiY2hhcl9zdGFydCI6IjAiLCJjaGFyX2VuZCI6IjM3OSIsImJsb2JfbmFtZSI6IjQ4ZTA4NmNhOGM4MGYwOWIwMDYxMTM4OWUwOWFkNGRlNDRlYjc2NTBhMmYzN2Q0NzY3N2JkNTliYTU5OTU2YTgiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJwdWJsaWMvcGFja2FnZS5qc29uIn19LHsiY2hhcl9zdGFydCI6IjAiLCJjaGFyX2VuZCI6IjkzOCIsImJsb2JfbmFtZSI6IjEyZDFkZWVhNWU3MWRhYWNiOWZhNzk2ZmViMmE4NjE3NzdjNzIwMjUxY2FiOTc3ZTllYjc0NWU3MDJkYzQxZmMiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJzcmMtZGVzaWduL2N2Lm1keCJ9fSx7ImNoYXJfc3RhcnQiOiI5MzgiLCJjaGFyX2VuZCI6IjE3NjkiLCJibG9iX25hbWUiOiIxMmQxZGVlYTVlNzFkYWFjYjlmYTc5NmZlYjJhODYxNzc3YzcyMDI1MWNhYjk3N2U5ZWI3NDVlNzAyZGM0MWZjIiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoic3JjLWRlc2lnbi9jdi5tZHgifX0seyJjaGFyX3N0YXJ0IjoiMjc3MyIsImNoYXJfZW5kIjoiMzc1NyIsImJsb2JfbmFtZSI6IjEyZDFkZWVhNWU3MWRhYWNiOWZhNzk2ZmViMmE4NjE3NzdjNzIwMjUxY2FiOTc3ZTllYjc0NWU3MDJkYzQxZmMiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJzcmMtZGVzaWduL2N2Lm1keCJ9fSx7ImNoYXJfc3RhcnQiOiIwIiwiY2hhcl9lbmQiOiIxMDEyIiwiYmxvYl9uYW1lIjoiMzEzY2NmOWQzY2JjZGEzYjY5YzkxYTQwYjQ0NjZkNTgxMTc4MGVkMTRiNjgzNDZjNmM0YzIyZDBkNDY5MTg5MyIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6InNyYy9taWRkbGV3YXJlLmpzIn19LHsiY2hhcl9zdGFydCI6IjgxMyIsImNoYXJfZW5kIjoiMTgyNyIsImJsb2JfbmFtZSI6ImUzYjVmYjY0ODRjNDE4Mzc5NjY5NWMxM2U3ZjRlZjZiZTg2N2I1MjExOWQ5MGQ0MzNiMzk0ZDgzM2NhYjJiZDUiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJzcmMtZGVzaWduL2N2LW91ZC5tZHgifX0seyJjaGFyX3N0YXJ0IjoiMCIsImNoYXJfZW5kIjoiODgwIiwiYmxvYl9uYW1lIjoiMjdmNzA2ZWI0OTI5NTE1ZGMyNjFhMWE1NzU1MGY5ZmJhNDMwNzAwMTk2NmZjMmVkZmNjYzVjYzEzOTcwMDcwYiIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6ImRiL2NvbmZpZy50cyJ9fSx7ImNoYXJfc3RhcnQiOiI4ODAiLCJjaGFyX2VuZCI6IjExMjIiLCJibG9iX25hbWUiOiIyN2Y3MDZlYjQ5Mjk1MTVkYzI2MWExYTU3NTUwZjlmYmE0MzA3MDAxOTY2ZmMyZWRmY2NjNWNjMTM5NzAwNzBiIiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoiZGIvY29uZmlnLnRzIn19LHsiY2hhcl9zdGFydCI6IjAiLCJjaGFyX2VuZCI6Ijk3MiIsImJsb2JfbmFtZSI6IjVjNTYwNTRlMzRiYWU5NmZmMWQyNTdmNjFmMzNkZjAwMzEyZDk3ODNkZDEyNjdmYzY0NjcwZGY4YjA3NWI3ZGQiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJzcmMvcGFnZXMvZGV2L2luZGV4LmFzdHJvIn19LHsiY2hhcl9zdGFydCI6Ijk3MiIsImNoYXJfZW5kIjoiMTc1MyIsImJsb2JfbmFtZSI6IjVjNTYwNTRlMzRiYWU5NmZmMWQyNTdmNjFmMzNkZjAwMzEyZDk3ODNkZDEyNjdmYzY0NjcwZGY4YjA3NWI3ZGQiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJzcmMvcGFnZXMvZGV2L2luZGV4LmFzdHJvIn19LHsiY2hhcl9zdGFydCI6IjAiLCJjaGFyX2VuZCI6IjkyNyIsImJsb2JfbmFtZSI6IjI5MWVlNTg5NDQ5YzZjOWM0YWExOWM0Y2I2Y2ZmYmM3MzBiYTFlYTAyNWM3ZWE1YzM4N2M1Mjg5ZWRlNjM1YzciLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJzcmMvcGFnZXMvcHJvamVjdHMvaW5kZXguYXN0cm8ifX0seyJjaGFyX3N0YXJ0IjoiMCIsImNoYXJfZW5kIjoiNjM4IiwiYmxvYl9uYW1lIjoiMTgxMTU0YzVjOTdjNjg3Njc0OWQxMGYxMTJjOGU5MzQzZDZlNDI3NjdiZGU5MTk2NDIyNzI0ODMzMDRiMmE5YSIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6InNyYy9jb250ZW50L2Jsb2cvMDItYXN0cm8tc3BoZXJlLWdldHRpbmctc3RhcnRlZC9pbmRleC5tZCJ9fSx7ImNoYXJfc3RhcnQiOiI5OTAiLCJjaGFyX2VuZCI6IjE5OTEiLCJibG9iX25hbWUiOiIxMjQ4OTZlMjZkZGI3YWZmMzhlYTMzNTQ4ODAwNmZmZDdiMTNkN2YwYjg3OTc1M2I3YTlmNDcxMGRmODg3MTk5IiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoic3JjL2NvbnRlbnQvYmxvZy8wMS1hc3Ryby1zcGhlcmUtZmlsZS1zdHJ1Y3R1cmUvaW5kZXgubWQifX0seyJjaGFyX3N0YXJ0IjoiMCIsImNoYXJfZW5kIjoiNjc1IiwiYmxvYl9uYW1lIjoiMGYzOGQwMTg4MTgxYmFmNDQ2MDZlODZmMjUwNWM2YWI1NmYzYTAxY2I2YzU3YTNkOGVjM2JjZmZjYzM1ODAyMiIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6InNyYy9jb250ZW50L2NvbmZpZy50cyJ9fSx7ImNoYXJfc3RhcnQiOiIwIiwiY2hhcl9lbmQiOiI4ODciLCJibG9iX25hbWUiOiIxMWI0YjY3NjMwY2U2OTVjYTVlYmE0MTAwOGM1Nzc2NDUyMjkwNzE3YTdjMDFhODc2MjlkOWMwNDdjMmU4NzNhIiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoic3JjL2xheW91dHMvUGFnZUxheW91dC5hc3RybyJ9fSx7ImNoYXJfc3RhcnQiOiIwIiwiY2hhcl9lbmQiOiI5MDIiLCJibG9iX25hbWUiOiJiZDc5NzUyMjgyNTM0ZjFiY2E4NjM3MjJmOWRmNTg4YjhiODY3MDU1OWFiZjJjMTViNDg5ZDk1ZWMzNmJiMDY3IiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoic3JjL3BhZ2VzL3Byb2plY3RzL1suLi5zbHVnXS5hc3RybyJ9fSx7ImNoYXJfc3RhcnQiOiIwIiwiY2hhcl9lbmQiOiIzOTkiLCJibG9iX25hbWUiOiJmZWU4ODVhM2ZlZGEwMWRhYzA2ZDk0ZTlhNDhiNTMxNzNhZTU3Y2U3MTRkNmY4MWQzM2NmZWQ2ZWE1YmNhODVlIiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoic3JjL2xpYi9hcHBTdG9yZS50cyJ9fSx7ImNoYXJfc3RhcnQiOiIwIiwiY2hhcl9lbmQiOiI5NjciLCJibG9iX25hbWUiOiJiNTZkYTZmOGU0ODBjNzhkZWZiNDQ1OTg0ODJlNTZlNGNlMTAxOGI0YWVmYTgwYmQzZmU1YzhkZDUyZThhMTMwIiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoidGFpbHdpbmQuY29uZmlnLm1qcyJ9fSx7ImNoYXJfc3RhcnQiOiIwIiwiY2hhcl9lbmQiOiIxMDA1IiwiYmxvYl9uYW1lIjoiNGM4NjY5ZmI0N2U1Y2E4MDU0OWQzYmQ1NTE1ZjM3Mjg1Y2ViNzZlYmRiYTBmNjE3ODgyMjg3ZmI2ODI2MWEyMSIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6InBucG0tbG9jay55YW1sIn19LHsiY2hhcl9zdGFydCI6IjAiLCJjaGFyX2VuZCI6IjgzIiwiYmxvYl9uYW1lIjoiOWQ3OWQ5ZTc2ZGVjYzExMjYwMmJlNTViMDVjZTY1M2I4NmMxOGNhZThmNGVlN2RjZmMwMTkzNjVkMTEwNTUzZCIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6Ii5maXJlYmFzZXJjIn19LHsiY2hhcl9zdGFydCI6IjAiLCJjaGFyX2VuZCI6Ijk4NyIsImJsb2JfbmFtZSI6IjJmNWM4YTRiMzFhNDMxZTM3MmRjMWI5NzliNTQ3MjMyZDI0OTM5MWQwN2UyMWZlZWUyMDdmMzY5M2ZkN2E0NjciLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJzcmMvcGFnZXMvaW5kZXguYXN0cm8ifX0seyJjaGFyX3N0YXJ0IjoiMCIsImNoYXJfZW5kIjoiODI2IiwiYmxvYl9uYW1lIjoiYzcyMzdjYmMzYTMzNTllMzA5NGNhY2ZkMzc2ODY0NDliN2Y4MWRjOGJjZGZiZjIwNDE4ZTA0Yjc1NDkzOTk3YyIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6InNyYy9jb250ZW50L2Jsb2cvMDUtYXN0cm8tc3BoZXJlLXdyaXRpbmctbWR4L2luZGV4Lm1keCJ9fSx7ImNoYXJfc3RhcnQiOiIwIiwiY2hhcl9lbmQiOiI5OTciLCJibG9iX25hbWUiOiI5MDdjZTEyZGYyM2Q3MTc3NThmOGQ3MjYxNWI1OGM3YjY3NTBlMDNiMGQ3MjVmMTlmMzBmZWYyOWFkYjExYzAzIiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoicHVibGljL3BhY2thZ2UtbG9jay5qc29uIn19LHsiY2hhcl9zdGFydCI6IjAiLCJjaGFyX2VuZCI6IjM4NSIsImJsb2JfbmFtZSI6ImVlOWE5ODZiZTkyNDU0MGQzZTQwM2VmNWRmOGY0OWQ4OTI1ZTFkOTM3YzBhZjIzYjJmY2Q4ZWE0ZTJiOGJiZTUiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJ0c2NvbmZpZy5qc29uIn19XX0seyJzdGF0dXMiOiJzdWNjZXNzIiwicmVxdWVzdF9pZCI6IjgyODVkNGQ1LWY5ZWItNDZhYi04NjUzLTZiZGIyYmM1MGI0MiIsInJlcXVlc3RfbWVzc2FnZSI6Ikluc3RhbGwgYWxsIG5lZWRlZCBzaGFkY24gY29tcG9uZW50cyIsInJpY2hfdGV4dF9qc29uX3JlcHIiOnsidHlwZSI6ImRvYyIsImNvbnRlbnQiOlt7InR5cGUiOiJwYXJhZ3JhcGgiLCJjb250ZW50IjpbeyJ0eXBlIjoidGV4dCIsInRleHQiOiJJbnN0YWxsIGFsbCBuZWVkZWQgc2hhZGNuIGNvbXBvbmVudHMifV19XX0sIm1lbnRpb25lZF9pdGVtcyI6W10sInN0cnVjdHVyZWRfb3V0cHV0X25vZGVzIjpbeyJpZCI6MCwidHlwZSI6MCwiY29udGVudCI6IkknbGwgaGVscCB5b3UgaW5zdGFsbCB0aGUgbmVjZXNzYXJ5IHNoYWRjbi91aSBjb21wb25lbnRzIGZvciB5b3VyIHByb2plY3QuIEJhc2VkIG9uIHlvdXIgcHJvamVjdCBmaWxlcywgSSBjYW4gc2VlIHlvdSdyZSBhbHJlYWR5IHVzaW5nIHNvbWUgc2hhZGNuIGNvbXBvbmVudHMgbGlrZSBCdXR0b24sIENhcmQsIGFuZCBJbnB1dC5cblxuTGV0J3MgaW5zdGFsbCB0aGUgZnVsbCBzZXQgb2Ygc2hhZGNuIGNvbXBvbmVudHMgeW91IG1pZ2h0IG5lZWQ6XG5cbjxhdWdtZW50X2NvZGVfc25pcHBldCBwYXRoPVwiaW5zdGFsbC1zaGFkY24uc2hcIiBtb2RlPVwiRURJVFwiPlxuYGBgYmFzaFxuIyBGaXJzdCwgbWFrZSBzdXJlIHNoYWRjbi91aSBDTEkgaXMgaW5zdGFsbGVkXG5ucG0gaW5zdGFsbCAtRCBAc2hhZGNuL3VpXG5cbiMgSW5pdGlhbGl6ZSBzaGFkY24vdWkgKHRoaXMgc2hvdWxkIGJlIHNraXBwZWQgYXMgeW91IGFscmVhZHkgaGF2ZSBjb21wb25lbnRzLmpzb24pXG4jIG5weCBzaGFkY24tdWkgaW5pdFxuXG4jIEluc3RhbGwgY29tbW9uIHNoYWRjbi91aSBjb21wb25lbnRzXG5ucHggc2hhZGNuLXVpIGFkZCBhbGVydFxubnB4IHNoYWRjbi11aSBhZGQgYXNwZWN0LXJhdGlvXG5ucHggc2hhZGNuLXVpIGFkZCBhdmF0YXJcbm5weCBzaGFkY24tdWkgYWRkIGJhZGdlXG5ucHggc2hhZGNuLXVpIGFkZCBicmVhZGNydW1iXG5ucHggc2hhZGNuLXVpIGFkZCBjYWxlbmRhclxubnB4IHNoYWRjbi11aSBhZGQgY2Fyb3VzZWxcbm5weCBzaGFkY24tdWkgYWRkIGNoZWNrYm94XG5ucHggc2hhZGNuLXVpIGFkZCBjb2xsYXBzaWJsZVxubnB4IHNoYWRjbi11aSBhZGQgY29tbWFuZFxubnB4IHNoYWRjbi11aSBhZGQgY29udGV4dC1tZW51XG5ucHggc2hhZGNuLXVpIGFkZCBkaWFsb2dcbm5weCBzaGFkY24tdWkgYWRkIGRyYXdlclxubnB4IHNoYWRjbi11aSBhZGQgZHJvcGRvd24tbWVudVxubnB4IHNoYWRjbi11aSBhZGQgZm9ybVxubnB4IHNoYWRjbi11aSBhZGQgaG92ZXItY2FyZFxubnB4IHNoYWRjbi11aSBhZGQgaW5wdXRcbm5weCBzaGFkY24tdWkgYWRkIGxhYmVsXG5ucHggc2hhZGNuLXVpIGFkZCBtZW51YmFyXG5ucHggc2hhZGNuLXVpIGFkZCBuYXZpZ2F0aW9uLW1lbnVcbm5weCBzaGFkY24tdWkgYWRkIHBhZ2luYXRpb25cbm5weCBzaGFkY24tdWkgYWRkIHBvcG92ZXJcbm5weCBzaGFkY24tdWkgYWRkIHByb2dyZXNzXG5ucHggc2hhZGNuLXVpIGFkZCByYWRpby1ncm91cFxubnB4IHNoYWRjbi11aSBhZGQgcmVzaXphYmxlXG5ucHggc2hhZGNuLXVpIGFkZCBzY3JvbGwtYXJlYVxubnB4IHNoYWRjbi11aSBhZGQgc2VsZWN0XG5ucHggc2hhZGNuLXVpIGFkZCBzZXBhcmF0b3Jcbm5weCBzaGFkY24tdWkgYWRkIHNoZWV0XG5ucHggc2hhZGNuLXVpIGFkZCBza2VsZXRvblxubnB4IHNoYWRjbi11aSBhZGQgc2xpZGVyXG5ucHggc2hhZGNuLXVpIGFkZCBzb25uZXJcbm5weCBzaGFkY24tdWkgYWRkIHN3aXRjaFxubnB4IHNoYWRjbi11aSBhZGQgdGFibGVcbm5weCBzaGFkY24tdWkgYWRkIHRhYnNcbm5weCBzaGFkY24tdWkgYWRkIHRleHRhcmVhXG5ucHggc2hhZGNuLXVpIGFkZCB0b2FzdFxubnB4IHNoYWRjbi11aSBhZGQgdG9nZ2xlXG5ucHggc2hhZGNuLXVpIGFkZCB0b2dnbGUtZ3JvdXBcbm5weCBzaGFkY24tdWkgYWRkIHRvb2x0aXBcbmBgYFxuPC9hdWdtZW50X2NvZGVfc25pcHBldD5cblxuWW91IGNhbiBydW4gdGhpcyBzY3JpcHQgdG8gaW5zdGFsbCBhbGwgdGhlIHNoYWRjbiBjb21wb25lbnRzLiBOb3RlIHRoYXQgc29tZSBjb21wb25lbnRzIGxpa2UgQnV0dG9uLCBDYXJkLCBJbnB1dCwgYW5kIFNjcm9sbEFyZWEgYXJlIGFscmVhZHkgaW4geW91ciBwcm9qZWN0IGJhc2VkIG9uIHRoZSBmaWxlcyB5b3Ugc2hhcmVkLlxuXG4jIyMgSW1wb3J0YW50IE5vdGVzOlxuXG4xLiBZb3VyIHByb2plY3QgaXMgdXNpbmcgUmVhY3QgMTksIHdoaWNoIGlzIGNvbXBhdGlibGUgd2l0aCBzaGFkY24vdWkgY29tcG9uZW50cy5cblxuMi4gWW91IGFscmVhZHkgaGF2ZSB0aGUgbmVjZXNzYXJ5IGRlcGVuZGVuY2llcyBsaWtlIGBAcmFkaXgtdWkvcmVhY3QtbGFiZWxgLCBgQHJhZGl4LXVpL3JlYWN0LXNlbGVjdGAsIGFuZCBgQHJhZGl4LXVpL3JlYWN0LXNsb3RgIGluc3RhbGxlZC5cblxuMy4gVGhlIGNvbXBvbmVudHMgd2lsbCBiZSBpbnN0YWxsZWQgYWNjb3JkaW5nIHRvIHlvdXIgYGNvbXBvbmVudHMuanNvbmAgY29uZmlndXJhdGlvbjpcbiAgIC0gU3R5bGU6IFwibmV3LXlvcmtcIlxuICAgLSBDb21wb25lbnRzIHBhdGg6IFwiQGNvbXBvbmVudHNcIlxuICAgLSBVdGlscyBwYXRoOiBcIkBsaWIvdXRpbHNcIlxuICAgLSBVSSBjb21wb25lbnRzIHBhdGg6IFwiQGNvbXBvbmVudHMvdWlcIlxuXG40LiBZb3UgbWF5IG5vdCBuZWVkIGFsbCB0aGVzZSBjb21wb25lbnRzIC0gZmVlbCBmcmVlIHRvIGluc3RhbGwgb25seSB0aGUgb25lcyB5b3UgbmVlZCBmb3IgeW91ciBwcm9qZWN0LlxuXG41LiBBZnRlciBpbnN0YWxsYXRpb24sIHlvdSBjYW4gaW1wb3J0IGFuZCB1c2UgdGhlbSBpbiB5b3VyIFJlYWN0IGNvbXBvbmVudHMgbGlrZTpcbiAgIGBgYHRzeFxuICAgaW1wb3J0IHsgQnV0dG9uIH0gZnJvbSBcIkBjb21wb25lbnRzL3VpL2J1dHRvblwiO1xuICAgaW1wb3J0IHsgQ2FyZCB9IGZyb20gXCJAY29tcG9uZW50cy91aS9jYXJkXCI7XG4gICBgYGBcblxuV291bGQgeW91IGxpa2UgbWUgdG8gZXhwbGFpbiBob3cgdG8gdXNlIGFueSBzcGVjaWZpYyBjb21wb25lbnQgZnJvbSB0aGlzIGxpc3Q/XG4ifSx7ImlkIjoyLCJ0eXBlIjoyLCJjb250ZW50IjoiIn0seyJpZCI6MywidHlwZSI6MywiY29udGVudCI6ImNvbXBvbmVudHMuanNvbjowLTQ1MFxuUkVBRE1FLm1kOjAtOTgzXG5SRUFETUUubWQ6OTgzLTE5NjVcblJFQURNRS5tZDoxOTY1LTI5NjJcblJFQURNRS5tZDoyOTYyLTMwMzhcbnBhY2thZ2UuanNvbjowLTk0MlxucGFja2FnZS5qc29uOjk0Mi0xODQ1XG5wYWNrYWdlLmpzb246MTg0NS0yMTA2XG5zcmMvY29udGVudC9ibG9nLzAxLWFzdHJvLXNwaGVyZS1maWxlLXN0cnVjdHVyZS9pbmRleC5tZDowLTk5MFxuc3JjL2NvbnRlbnQvYmxvZy8wMS1hc3Ryby1zcGhlcmUtZmlsZS1zdHJ1Y3R1cmUvaW5kZXgubWQ6OTkwLTE5OTFcbnNyYy9jb250ZW50L2Jsb2cvMDEtYXN0cm8tc3BoZXJlLWZpbGUtc3RydWN0dXJlL2luZGV4Lm1kOjE5OTEtMjI4OVxuc3JjL3N0eWxlcy9nbG9iYWwuY3NzOjAtNjY3XG5zcmMvc3R5bGVzL2dsb2JhbC5jc3M6NjY3LTEyMzVcbnNyYy9zdHlsZXMvZ2xvYmFsLmNzczoxMjM1LTE3NThcbnRhaWx3aW5kLmNvbmZpZy5tanM6MC05NjdcbnRhaWx3aW5kLmNvbmZpZy5tanM6ODE3OC04NjIwXG5wdWJsaWMvcGFja2FnZS5qc29uOjAtMzc5XG5zcmMvY29udGVudC9ibG9nLzAyLWFzdHJvLXNwaGVyZS1nZXR0aW5nLXN0YXJ0ZWQvaW5kZXgubWQ6MC02MzhcbmFzdHJvLmNvbmZpZy5tanM6MC03NzhcbmFzdHJvLmNvbmZpZy5tanM6Nzc4LTk4M1xucHVibGljL3BhY2thZ2UtbG9jay5qc29uOjAtOTk3XG5zcmMvY29tcG9uZW50cy91aS9idXR0b24udHN4OjAtOTg1XG5wbnBtLWxvY2sueWFtbDoxMDA1LTIwMDRcbnBucG0tbG9jay55YW1sOjM4MDQtNDU0MFxucG5wbS1sb2NrLnlhbWw6MTkxNTgyLTE5MjQwMVxucG5wbS1sb2NrLnlhbWw6MjM0MjE1LTIzNDk1NFxuc3JjL2NvbXBvbmVudHMvQmFzZUhlYWQuYXN0cm86MTU4Ni0yMzEzIn1dLCJzZWVuX3N0YXRlIjoic2VlbiIsInJlc3BvbnNlX3RleHQiOiJJJ2xsIGhlbHAgeW91IGluc3RhbGwgdGhlIG5lY2Vzc2FyeSBzaGFkY24vdWkgY29tcG9uZW50cyBmb3IgeW91ciBwcm9qZWN0LiBCYXNlZCBvbiB5b3VyIHByb2plY3QgZmlsZXMsIEkgY2FuIHNlZSB5b3UncmUgYWxyZWFkeSB1c2luZyBzb21lIHNoYWRjbiBjb21wb25lbnRzIGxpa2UgQnV0dG9uLCBDYXJkLCBhbmQgSW5wdXQuXG5cbkxldCdzIGluc3RhbGwgdGhlIGZ1bGwgc2V0IG9mIHNoYWRjbiBjb21wb25lbnRzIHlvdSBtaWdodCBuZWVkOlxuXG5gYGBgYmFzaCBwYXRoPWluc3RhbGwtc2hhZGNuLnNoIG1vZGU9RURJVFxuIyBGaXJzdCwgbWFrZSBzdXJlIHNoYWRjbi91aSBDTEkgaXMgaW5zdGFsbGVkXG5ucG0gaW5zdGFsbCAtRCBAc2hhZGNuL3VpXG5cbiMgSW5pdGlhbGl6ZSBzaGFkY24vdWkgKHRoaXMgc2hvdWxkIGJlIHNraXBwZWQgYXMgeW91IGFscmVhZHkgaGF2ZSBjb21wb25lbnRzLmpzb24pXG4jIG5weCBzaGFkY24tdWkgaW5pdFxuXG4jIEluc3RhbGwgY29tbW9uIHNoYWRjbi91aSBjb21wb25lbnRzXG5ucHggc2hhZGNuLXVpIGFkZCBhbGVydFxubnB4IHNoYWRjbi11aSBhZGQgYXNwZWN0LXJhdGlvXG5ucHggc2hhZGNuLXVpIGFkZCBhdmF0YXJcbm5weCBzaGFkY24tdWkgYWRkIGJhZGdlXG5ucHggc2hhZGNuLXVpIGFkZCBicmVhZGNydW1iXG5ucHggc2hhZGNuLXVpIGFkZCBjYWxlbmRhclxubnB4IHNoYWRjbi11aSBhZGQgY2Fyb3VzZWxcbm5weCBzaGFkY24tdWkgYWRkIGNoZWNrYm94XG5ucHggc2hhZGNuLXVpIGFkZCBjb2xsYXBzaWJsZVxubnB4IHNoYWRjbi11aSBhZGQgY29tbWFuZFxubnB4IHNoYWRjbi11aSBhZGQgY29udGV4dC1tZW51XG5ucHggc2hhZGNuLXVpIGFkZCBkaWFsb2dcbm5weCBzaGFkY24tdWkgYWRkIGRyYXdlclxubnB4IHNoYWRjbi11aSBhZGQgZHJvcGRvd24tbWVudVxubnB4IHNoYWRjbi11aSBhZGQgZm9ybVxubnB4IHNoYWRjbi11aSBhZGQgaG92ZXItY2FyZFxubnB4IHNoYWRjbi11aSBhZGQgaW5wdXRcbm5weCBzaGFkY24tdWkgYWRkIGxhYmVsXG5ucHggc2hhZGNuLXVpIGFkZCBtZW51YmFyXG5ucHggc2hhZGNuLXVpIGFkZCBuYXZpZ2F0aW9uLW1lbnVcbm5weCBzaGFkY24tdWkgYWRkIHBhZ2luYXRpb25cbm5weCBzaGFkY24tdWkgYWRkIHBvcG92ZXJcbm5weCBzaGFkY24tdWkgYWRkIHByb2dyZXNzXG5ucHggc2hhZGNuLXVpIGFkZCByYWRpby1ncm91cFxubnB4IHNoYWRjbi11aSBhZGQgcmVzaXphYmxlXG5ucHggc2hhZGNuLXVpIGFkZCBzY3JvbGwtYXJlYVxubnB4IHNoYWRjbi11aSBhZGQgc2VsZWN0XG5ucHggc2hhZGNuLXVpIGFkZCBzZXBhcmF0b3Jcbm5weCBzaGFkY24tdWkgYWRkIHNoZWV0XG5ucHggc2hhZGNuLXVpIGFkZCBza2VsZXRvblxubnB4IHNoYWRjbi11aSBhZGQgc2xpZGVyXG5ucHggc2hhZGNuLXVpIGFkZCBzb25uZXJcbm5weCBzaGFkY24tdWkgYWRkIHN3aXRjaFxubnB4IHNoYWRjbi11aSBhZGQgdGFibGVcbm5weCBzaGFkY24tdWkgYWRkIHRhYnNcbm5weCBzaGFkY24tdWkgYWRkIHRleHRhcmVhXG5ucHggc2hhZGNuLXVpIGFkZCB0b2FzdFxubnB4IHNoYWRjbi11aSBhZGQgdG9nZ2xlXG5ucHggc2hhZGNuLXVpIGFkZCB0b2dnbGUtZ3JvdXBcbm5weCBzaGFkY24tdWkgYWRkIHRvb2x0aXBcbmBgYGBcblxuWW91IGNhbiBydW4gdGhpcyBzY3JpcHQgdG8gaW5zdGFsbCBhbGwgdGhlIHNoYWRjbiBjb21wb25lbnRzLiBOb3RlIHRoYXQgc29tZSBjb21wb25lbnRzIGxpa2UgQnV0dG9uLCBDYXJkLCBJbnB1dCwgYW5kIFNjcm9sbEFyZWEgYXJlIGFscmVhZHkgaW4geW91ciBwcm9qZWN0IGJhc2VkIG9uIHRoZSBmaWxlcyB5b3Ugc2hhcmVkLlxuXG4jIyMgSW1wb3J0YW50IE5vdGVzOlxuXG4xLiBZb3VyIHByb2plY3QgaXMgdXNpbmcgUmVhY3QgMTksIHdoaWNoIGlzIGNvbXBhdGlibGUgd2l0aCBzaGFkY24vdWkgY29tcG9uZW50cy5cblxuMi4gWW91IGFscmVhZHkgaGF2ZSB0aGUgbmVjZXNzYXJ5IGRlcGVuZGVuY2llcyBsaWtlIGBAcmFkaXgtdWkvcmVhY3QtbGFiZWxgLCBgQHJhZGl4LXVpL3JlYWN0LXNlbGVjdGAsIGFuZCBgQHJhZGl4LXVpL3JlYWN0LXNsb3RgIGluc3RhbGxlZC5cblxuMy4gVGhlIGNvbXBvbmVudHMgd2lsbCBiZSBpbnN0YWxsZWQgYWNjb3JkaW5nIHRvIHlvdXIgYGNvbXBvbmVudHMuanNvbmAgY29uZmlndXJhdGlvbjpcbiAgIC0gU3R5bGU6IFwibmV3LXlvcmtcIlxuICAgLSBDb21wb25lbnRzIHBhdGg6IFwiQGNvbXBvbmVudHNcIlxuICAgLSBVdGlscyBwYXRoOiBcIkBsaWIvdXRpbHNcIlxuICAgLSBVSSBjb21wb25lbnRzIHBhdGg6IFwiQGNvbXBvbmVudHMvdWlcIlxuXG40LiBZb3UgbWF5IG5vdCBuZWVkIGFsbCB0aGVzZSBjb21wb25lbnRzIC0gZmVlbCBmcmVlIHRvIGluc3RhbGwgb25seSB0aGUgb25lcyB5b3UgbmVlZCBmb3IgeW91ciBwcm9qZWN0LlxuXG41LiBBZnRlciBpbnN0YWxsYXRpb24sIHlvdSBjYW4gaW1wb3J0IGFuZCB1c2UgdGhlbSBpbiB5b3VyIFJlYWN0IGNvbXBvbmVudHMgbGlrZTpcbiAgIGBgYHRzeFxuICAgaW1wb3J0IHsgQnV0dG9uIH0gZnJvbSBcIkBjb21wb25lbnRzL3VpL2J1dHRvblwiO1xuICAgaW1wb3J0IHsgQ2FyZCB9IGZyb20gXCJAY29tcG9uZW50cy91aS9jYXJkXCI7XG4gICBgYGBcblxuV291bGQgeW91IGxpa2UgbWUgdG8gZXhwbGFpbiBob3cgdG8gdXNlIGFueSBzcGVjaWZpYyBjb21wb25lbnQgZnJvbSB0aGlzIGxpc3Q/XG4iLCJ3b3Jrc3BhY2VfZmlsZV9jaHVua3MiOlt7ImNoYXJfc3RhcnQiOiIwIiwiY2hhcl9lbmQiOiI0NTAiLCJibG9iX25hbWUiOiIzZGFmZmYxZDA4YzgxZDc3YjkxODk4NWQyODA1NDIxNjgxYTVlNTliMjg5M2JjM2Y4Y2Q4MDdjNWM5OWU0OGJhIiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoiY29tcG9uZW50cy5qc29uIn19LHsiY2hhcl9zdGFydCI6IjAiLCJjaGFyX2VuZCI6Ijk4MyIsImJsb2JfbmFtZSI6ImExM2MzYzYxNzdlMzY5YmJiMDIwZWU1NjRhZGFiZDNkNWQ5ODczZTVhZjkyYmZlZjYzNmRjOTliM2U5MTliYTkiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJSRUFETUUubWQifX0seyJjaGFyX3N0YXJ0IjoiOTgzIiwiY2hhcl9lbmQiOiIxOTY1IiwiYmxvYl9uYW1lIjoiYTEzYzNjNjE3N2UzNjliYmIwMjBlZTU2NGFkYWJkM2Q1ZDk4NzNlNWFmOTJiZmVmNjM2ZGM5OWIzZTkxOWJhOSIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6IlJFQURNRS5tZCJ9fSx7ImNoYXJfc3RhcnQiOiIxOTY1IiwiY2hhcl9lbmQiOiIyOTYyIiwiYmxvYl9uYW1lIjoiYTEzYzNjNjE3N2UzNjliYmIwMjBlZTU2NGFkYWJkM2Q1ZDk4NzNlNWFmOTJiZmVmNjM2ZGM5OWIzZTkxOWJhOSIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6IlJFQURNRS5tZCJ9fSx7ImNoYXJfc3RhcnQiOiIyOTYyIiwiY2hhcl9lbmQiOiIzMDM4IiwiYmxvYl9uYW1lIjoiYTEzYzNjNjE3N2UzNjliYmIwMjBlZTU2NGFkYWJkM2Q1ZDk4NzNlNWFmOTJiZmVmNjM2ZGM5OWIzZTkxOWJhOSIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6IlJFQURNRS5tZCJ9fSx7ImNoYXJfc3RhcnQiOiIwIiwiY2hhcl9lbmQiOiI5NDIiLCJibG9iX25hbWUiOiIxNTM4NjQ4M2JkMmE0NDI3ZDMzZDIyMzMyYjk1NmRlNGNhNTdlOTIxNGYwNGY1NTgzMzI0ZWIyODZiNGY5NWVhIiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoicGFja2FnZS5qc29uIn19LHsiY2hhcl9zdGFydCI6Ijk0MiIsImNoYXJfZW5kIjoiMTg0NSIsImJsb2JfbmFtZSI6IjE1Mzg2NDgzYmQyYTQ0MjdkMzNkMjIzMzJiOTU2ZGU0Y2E1N2U5MjE0ZjA0ZjU1ODMzMjRlYjI4NmI0Zjk1ZWEiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJwYWNrYWdlLmpzb24ifX0seyJjaGFyX3N0YXJ0IjoiMTg0NSIsImNoYXJfZW5kIjoiMjEwNiIsImJsb2JfbmFtZSI6IjE1Mzg2NDgzYmQyYTQ0MjdkMzNkMjIzMzJiOTU2ZGU0Y2E1N2U5MjE0ZjA0ZjU1ODMzMjRlYjI4NmI0Zjk1ZWEiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJwYWNrYWdlLmpzb24ifX0seyJjaGFyX3N0YXJ0IjoiMCIsImNoYXJfZW5kIjoiOTkwIiwiYmxvYl9uYW1lIjoiMTI0ODk2ZTI2ZGRiN2FmZjM4ZWEzMzU0ODgwMDZmZmQ3YjEzZDdmMGI4Nzk3NTNiN2E5ZjQ3MTBkZjg4NzE5OSIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6InNyYy9jb250ZW50L2Jsb2cvMDEtYXN0cm8tc3BoZXJlLWZpbGUtc3RydWN0dXJlL2luZGV4Lm1kIn19LHsiY2hhcl9zdGFydCI6Ijk5MCIsImNoYXJfZW5kIjoiMTk5MSIsImJsb2JfbmFtZSI6IjEyNDg5NmUyNmRkYjdhZmYzOGVhMzM1NDg4MDA2ZmZkN2IxM2Q3ZjBiODc5NzUzYjdhOWY0NzEwZGY4ODcxOTkiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJzcmMvY29udGVudC9ibG9nLzAxLWFzdHJvLXNwaGVyZS1maWxlLXN0cnVjdHVyZS9pbmRleC5tZCJ9fSx7ImNoYXJfc3RhcnQiOiIxOTkxIiwiY2hhcl9lbmQiOiIyMjg5IiwiYmxvYl9uYW1lIjoiMTI0ODk2ZTI2ZGRiN2FmZjM4ZWEzMzU0ODgwMDZmZmQ3YjEzZDdmMGI4Nzk3NTNiN2E5ZjQ3MTBkZjg4NzE5OSIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6InNyYy9jb250ZW50L2Jsb2cvMDEtYXN0cm8tc3BoZXJlLWZpbGUtc3RydWN0dXJlL2luZGV4Lm1kIn19LHsiY2hhcl9zdGFydCI6IjAiLCJjaGFyX2VuZCI6IjY2NyIsImJsb2JfbmFtZSI6IjMyMjA4ZmM0N2U3NWU2MzJmZTA2N2I0Y2MzNGJjNWEzYWFkNTk4YjRiOTZjYjY1OTkzMDVjNWUyZGU5N2UwYTEiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJzcmMvc3R5bGVzL2dsb2JhbC5jc3MifX0seyJjaGFyX3N0YXJ0IjoiNjY3IiwiY2hhcl9lbmQiOiIxMjM1IiwiYmxvYl9uYW1lIjoiMzIyMDhmYzQ3ZTc1ZTYzMmZlMDY3YjRjYzM0YmM1YTNhYWQ1OThiNGI5NmNiNjU5OTMwNWM1ZTJkZTk3ZTBhMSIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6InNyYy9zdHlsZXMvZ2xvYmFsLmNzcyJ9fSx7ImNoYXJfc3RhcnQiOiIxMjM1IiwiY2hhcl9lbmQiOiIxNzU4IiwiYmxvYl9uYW1lIjoiMzIyMDhmYzQ3ZTc1ZTYzMmZlMDY3YjRjYzM0YmM1YTNhYWQ1OThiNGI5NmNiNjU5OTMwNWM1ZTJkZTk3ZTBhMSIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6InNyYy9zdHlsZXMvZ2xvYmFsLmNzcyJ9fSx7ImNoYXJfc3RhcnQiOiIwIiwiY2hhcl9lbmQiOiI5NjciLCJibG9iX25hbWUiOiJiNTZkYTZmOGU0ODBjNzhkZWZiNDQ1OTg0ODJlNTZlNGNlMTAxOGI0YWVmYTgwYmQzZmU1YzhkZDUyZThhMTMwIiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoidGFpbHdpbmQuY29uZmlnLm1qcyJ9fSx7ImNoYXJfc3RhcnQiOiI4MTc4IiwiY2hhcl9lbmQiOiI4NjIwIiwiYmxvYl9uYW1lIjoiYjU2ZGE2ZjhlNDgwYzc4ZGVmYjQ0NTk4NDgyZTU2ZTRjZTEwMThiNGFlZmE4MGJkM2ZlNWM4ZGQ1MmU4YTEzMCIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6InRhaWx3aW5kLmNvbmZpZy5tanMifX0seyJjaGFyX3N0YXJ0IjoiMCIsImNoYXJfZW5kIjoiMzc5IiwiYmxvYl9uYW1lIjoiNDhlMDg2Y2E4YzgwZjA5YjAwNjExMzg5ZTA5YWQ0ZGU0NGViNzY1MGEyZjM3ZDQ3Njc3YmQ1OWJhNTk5NTZhOCIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6InB1YmxpYy9wYWNrYWdlLmpzb24ifX0seyJjaGFyX3N0YXJ0IjoiMCIsImNoYXJfZW5kIjoiNjM4IiwiYmxvYl9uYW1lIjoiMTgxMTU0YzVjOTdjNjg3Njc0OWQxMGYxMTJjOGU5MzQzZDZlNDI3NjdiZGU5MTk2NDIyNzI0ODMzMDRiMmE5YSIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6InNyYy9jb250ZW50L2Jsb2cvMDItYXN0cm8tc3BoZXJlLWdldHRpbmctc3RhcnRlZC9pbmRleC5tZCJ9fSx7ImNoYXJfc3RhcnQiOiIwIiwiY2hhcl9lbmQiOiI3NzgiLCJibG9iX25hbWUiOiIwYjQyODI4M2NiMzIxZGRkNDA2YjIxNDc4MTcwNzAyMDg1NjgyYzdkOTk2OTMxYmZmNmFlODg2ODdmYmZkMWMwIiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoiYXN0cm8uY29uZmlnLm1qcyJ9fSx7ImNoYXJfc3RhcnQiOiI3NzgiLCJjaGFyX2VuZCI6Ijk4MyIsImJsb2JfbmFtZSI6IjBiNDI4MjgzY2IzMjFkZGQ0MDZiMjE0NzgxNzA3MDIwODU2ODJjN2Q5OTY5MzFiZmY2YWU4ODY4N2ZiZmQxYzAiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJhc3Ryby5jb25maWcubWpzIn19LHsiY2hhcl9zdGFydCI6IjAiLCJjaGFyX2VuZCI6Ijk5NyIsImJsb2JfbmFtZSI6IjkwN2NlMTJkZjIzZDcxNzc1OGY4ZDcyNjE1YjU4YzdiNjc1MGUwM2IwZDcyNWYxOWYzMGZlZjI5YWRiMTFjMDMiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJwdWJsaWMvcGFja2FnZS1sb2NrLmpzb24ifX0seyJjaGFyX3N0YXJ0IjoiMCIsImNoYXJfZW5kIjoiOTg1IiwiYmxvYl9uYW1lIjoiZGJjNzZkYmNkYjQ3MjI3MzQ2ZWQ2Y2Q2ZmQxZDcyMTQ0Mjc0ZTE2NGJjZWJiNzBmZDFmZWY0NDg3NWExNmE4YiIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6InNyYy9jb21wb25lbnRzL3VpL2J1dHRvbi50c3gifX0seyJjaGFyX3N0YXJ0IjoiMTAwNSIsImNoYXJfZW5kIjoiMjAwNCIsImJsb2JfbmFtZSI6IjRjODY2OWZiNDdlNWNhODA1NDlkM2JkNTUxNWYzNzI4NWNlYjc2ZWJkYmEwZjYxNzg4MjI4N2ZiNjgyNjFhMjEiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJwbnBtLWxvY2sueWFtbCJ9fSx7ImNoYXJfc3RhcnQiOiIzODA0IiwiY2hhcl9lbmQiOiI0NTQwIiwiYmxvYl9uYW1lIjoiNGM4NjY5ZmI0N2U1Y2E4MDU0OWQzYmQ1NTE1ZjM3Mjg1Y2ViNzZlYmRiYTBmNjE3ODgyMjg3ZmI2ODI2MWEyMSIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6InBucG0tbG9jay55YW1sIn19LHsiY2hhcl9zdGFydCI6IjE5MTU4MiIsImNoYXJfZW5kIjoiMTkyNDAxIiwiYmxvYl9uYW1lIjoiNGM4NjY5ZmI0N2U1Y2E4MDU0OWQzYmQ1NTE1ZjM3Mjg1Y2ViNzZlYmRiYTBmNjE3ODgyMjg3ZmI2ODI2MWEyMSIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6InBucG0tbG9jay55YW1sIn19LHsiY2hhcl9zdGFydCI6IjIzNDIxNSIsImNoYXJfZW5kIjoiMjM0OTU0IiwiYmxvYl9uYW1lIjoiNGM4NjY5ZmI0N2U1Y2E4MDU0OWQzYmQ1NTE1ZjM3Mjg1Y2ViNzZlYmRiYTBmNjE3ODgyMjg3ZmI2ODI2MWEyMSIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6InBucG0tbG9jay55YW1sIn19LHsiY2hhcl9zdGFydCI6IjE1ODYiLCJjaGFyX2VuZCI6IjIzMTMiLCJibG9iX25hbWUiOiIwNWFjMTBmNmNkOWJiZDA5ZDcyMzUzY2JiYjIzY2YwMjRiYWNiYTJiNjU0MDMzMjQzZTA2NDJjMzVmYWNkNmU1IiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoic3JjL2NvbXBvbmVudHMvQmFzZUhlYWQuYXN0cm8ifX1dfSx7InN0YXR1cyI6InN1Y2Nlc3MiLCJyZXF1ZXN0X2lkIjoiMGM4NWYyNjItMGI0MC00OWRlLTgxZmQtNDI0ODdmNWI0ODE5IiwicmVxdWVzdF9tZXNzYWdlIjoiT25seSB0aGUgY29tcG9uZW50cyByZWZlcmVuY2VkIGluIHRoZSBjb21wb25lbnRzIiwicmljaF90ZXh0X2pzb25fcmVwciI6eyJ0eXBlIjoiZG9jIiwiY29udGVudCI6W3sidHlwZSI6InBhcmFncmFwaCIsImNvbnRlbnQiOlt7InR5cGUiOiJ0ZXh0IiwidGV4dCI6Ik9ubHkgdGhlIGNvbXBvbmVudHMgcmVmZXJlbmNlZCBpbiB0aGUgY29tcG9uZW50cyJ9XX1dfSwibWVudGlvbmVkX2l0ZW1zIjpbXSwic3RydWN0dXJlZF9vdXRwdXRfbm9kZXMiOlt7ImlkIjowLCJ0eXBlIjowLCJjb250ZW50IjoiQmFzZWQgb24gdGhlIGZpbGVzIHlvdSd2ZSBzaGFyZWQsIEknbGwgaW5zdGFsbCBvbmx5IHRoZSBzaGFkY24gY29tcG9uZW50cyB0aGF0IGFyZSBhbHJlYWR5IHJlZmVyZW5jZWQgaW4geW91ciBwcm9qZWN0OlxuXG48YXVnbWVudF9jb2RlX3NuaXBwZXQgcGF0aD1cImluc3RhbGwtc2hhZGNuLnNoXCIgbW9kZT1cIkVESVRcIj5cbmBgYGJhc2hcbiMgSW5zdGFsbCBvbmx5IHRoZSBzaGFkY24gY29tcG9uZW50cyByZWZlcmVuY2VkIGluIHlvdXIgcHJvamVjdCBmaWxlc1xuXG4jIENvbXBvbmVudHMgYWxyZWFkeSBzZWVuIGluIHlvdXIgY29kZVxubnB4IHNoYWRjbi11aSBhZGQgYnV0dG9uXG5ucHggc2hhZGNuLXVpIGFkZCBjYXJkXG5ucHggc2hhZGNuLXVpIGFkZCBpbnB1dFxubnB4IHNoYWRjbi11aSBhZGQgbGFiZWxcbm5weCBzaGFkY24tdWkgYWRkIHNlbGVjdFxubnB4IHNoYWRjbi11aSBhZGQgZm9ybVxubnB4IHNoYWRjbi11aSBhZGQgc2Nyb2xsLWFyZWFcbm5weCBzaGFkY24tdWkgYWRkIHNlcGFyYXRvclxuXG4jIFRoZXNlIGNvbXBvbmVudHMgbWlnaHQgYmUgdXNlZCBieSBvdGhlciBjb21wb25lbnRzIG9yIGFyZSBjb21tb25seSBuZWVkZWRcbm5weCBzaGFkY24tdWkgYWRkIGRpYWxvZ1xubnB4IHNoYWRjbi11aSBhZGQgZHJvcGRvd24tbWVudVxuYGBgXG48L2F1Z21lbnRfY29kZV9zbmlwcGV0PlxuXG5UaGUgY29tcG9uZW50cyBJJ3ZlIGluY2x1ZGVkIGFyZTpcblxuMS4gKipCdXR0b24qKiAtIFVzZWQgaW4gbXVsdGlwbGUgY29tcG9uZW50cyBpbmNsdWRpbmcgYFByb21wdFRlbXBsYXRlTGlzdGBcbjIuICoqQ2FyZCoqIC0gVXNlZCBpbiBgUHJvbXB0VGVtcGxhdGVMaXN0YCBhbmQgb3RoZXIgY29tcG9uZW50c1xuMy4gKipJbnB1dCoqIC0gVXNlZCBmb3Igc2VhcmNoIGZpZWxkcyBhbmQgZm9ybXNcbjQuICoqTGFiZWwqKiAtIFVzZWQgaW4gZm9ybXMgZm9yIGFjY2Vzc2liaWxpdHlcbjUuICoqU2VsZWN0KiogLSBVc2VkIGZvciBkcm9wZG93biBzZWxlY3Rpb25zXG42LiAqKkZvcm0qKiAtIFVzZWQgZm9yIGZvcm0gaGFuZGxpbmcgd2l0aCByZWFjdC1ob29rLWZvcm1cbjcuICoqU2Nyb2xsQXJlYSoqIC0gVXNlZCBpbiBgUHJvbXB0VGVtcGxhdGVMaXN0YCBmb3Igc2Nyb2xsYWJsZSBjb250ZW50XG44LiAqKlNlcGFyYXRvcioqIC0gVXNlZCBpbiBgUHJvbXB0VGVtcGxhdGVMaXN0YCB0byBzZXBhcmF0ZSBpdGVtc1xuOS4gKipEaWFsb2cqKiAtIENvbW1vbiBjb21wb25lbnQgdGhhdCBtaWdodCBiZSBuZWVkZWQgZm9yIG1vZGFsc1xuMTAuICoqRHJvcGRvd24tbWVudSoqIC0gQ29tbW9uIGNvbXBvbmVudCBmb3IgZHJvcGRvd24gbWVudXNcblxuVGhlc2UgY29tcG9uZW50cyBzaG91bGQgY292ZXIgdGhlIGltbWVkaWF0ZSBuZWVkcyBiYXNlZCBvbiB3aGF0J3MgcmVmZXJlbmNlZCBpbiB5b3VyIGNvZGUuIElmIHlvdSBuZWVkIGFkZGl0aW9uYWwgY29tcG9uZW50cyBsYXRlciwgeW91IGNhbiBpbnN0YWxsIHRoZW0gaW5kaXZpZHVhbGx5IHVzaW5nIHRoZSBzYW1lIGBucHggc2hhZGNuLXVpIGFkZCBbY29tcG9uZW50LW5hbWVdYCBjb21tYW5kLlxuIn0seyJpZCI6MiwidHlwZSI6MiwiY29udGVudCI6IiJ9LHsiaWQiOjMsInR5cGUiOjMsImNvbnRlbnQiOiJjb21wb25lbnRzLmpzb246MC00NTBcbnNyYy9jb21wb25lbnRzL3VpL2J1dHRvbi50c3g6MC05ODVcbnNyYy9jb21wb25lbnRzL3VpL2J1dHRvbi50c3g6OTg1LTE4MDlcbnNyYy9jb21wb25lbnRzL3VpL2J1dHRvbi50c3g6MTgwOS0yMDI5XG5zcmMvY29tcG9uZW50cy9EcmF3ZXIuYXN0cm86MC02NDNcbnNyYy9jb21wb25lbnRzL0hlYWRlci5hc3RybzowLTEwMThcbnNyYy9jb250ZW50L2Jsb2cvMDEtYXN0cm8tc3BoZXJlLWZpbGUtc3RydWN0dXJlL2luZGV4Lm1kOjk5MC0xOTkxXG5SRUFETUUubWQ6MC05ODNcblJFQURNRS5tZDo5ODMtMTk2NVxuc3JjL2NvbXBvbmVudHMvdWkvc2VsZWN0LnRzeDowLTk5NVxuc3JjL2NvbXBvbmVudHMvdWkvc2VsZWN0LnRzeDo1MzkxLTU2NDVcbnNyYy9jb21wb25lbnRzL3VpL2xhYmVsLnRzeDowLTU5N1xuYXN0cm8uY29uZmlnLm1qczowLTc3OFxuc3JjL2NvbXBvbmVudHMvdWkvaW5wdXQudHN4OjAtNzc3XG5wYWNrYWdlLmpzb246MC05NDJcbnBhY2thZ2UuanNvbjo5NDItMTg0NVxuc3JjL2NvbXBvbmVudHMvdWkvZm9ybS50c3g6MC02ODNcbnNyYy9jb21wb25lbnRzL3VpL2Zvcm0udHN4OjM2MDQtMzc1NVxuc3JjL3BhZ2VzL2Rldi9pbmRleC5hc3RybzowLTk3MlxucG5wbS1sb2NrLnlhbWw6MjAyMDkwLTIwMjg3MlxucG5wbS1sb2NrLnlhbWw6MjEwOTY0LTIxMTg0OVxuc3JjL2NvbnRlbnQvYmxvZy8wNS1hc3Ryby1zcGhlcmUtd3JpdGluZy1tZHgvaW5kZXgubWR4OjAtODI2XG5zcmMvY29udGVudC9ibG9nLzA1LWFzdHJvLXNwaGVyZS13cml0aW5nLW1keC9pbmRleC5tZHg6ODI2LTExOTNcbnNyYy9jb21wb25lbnRzL3VpL2NhcmQudHN4OjAtNjU0XG5zcmMvY29tcG9uZW50cy9rb2tvbnV0dWkvcHJldmlldy1nZW5lcmF0aW9uLnRzeDowLTc2MiJ9XSwic2Vlbl9zdGF0ZSI6InNlZW4iLCJyZXNwb25zZV90ZXh0IjoiQmFzZWQgb24gdGhlIGZpbGVzIHlvdSd2ZSBzaGFyZWQsIEknbGwgaW5zdGFsbCBvbmx5IHRoZSBzaGFkY24gY29tcG9uZW50cyB0aGF0IGFyZSBhbHJlYWR5IHJlZmVyZW5jZWQgaW4geW91ciBwcm9qZWN0OlxuXG5gYGBgYmFzaCBwYXRoPWluc3RhbGwtc2hhZGNuLnNoIG1vZGU9RURJVFxuIyBJbnN0YWxsIG9ubHkgdGhlIHNoYWRjbiBjb21wb25lbnRzIHJlZmVyZW5jZWQgaW4geW91ciBwcm9qZWN0IGZpbGVzXG5cbiMgQ29tcG9uZW50cyBhbHJlYWR5IHNlZW4gaW4geW91ciBjb2RlXG5ucHggc2hhZGNuLXVpIGFkZCBidXR0b25cbm5weCBzaGFkY24tdWkgYWRkIGNhcmRcbm5weCBzaGFkY24tdWkgYWRkIGlucHV0XG5ucHggc2hhZGNuLXVpIGFkZCBsYWJlbFxubnB4IHNoYWRjbi11aSBhZGQgc2VsZWN0XG5ucHggc2hhZGNuLXVpIGFkZCBmb3JtXG5ucHggc2hhZGNuLXVpIGFkZCBzY3JvbGwtYXJlYVxubnB4IHNoYWRjbi11aSBhZGQgc2VwYXJhdG9yXG5cbiMgVGhlc2UgY29tcG9uZW50cyBtaWdodCBiZSB1c2VkIGJ5IG90aGVyIGNvbXBvbmVudHMgb3IgYXJlIGNvbW1vbmx5IG5lZWRlZFxubnB4IHNoYWRjbi11aSBhZGQgZGlhbG9nXG5ucHggc2hhZGNuLXVpIGFkZCBkcm9wZG93bi1tZW51XG5gYGBgXG5cblRoZSBjb21wb25lbnRzIEkndmUgaW5jbHVkZWQgYXJlOlxuXG4xLiAqKkJ1dHRvbioqIC0gVXNlZCBpbiBtdWx0aXBsZSBjb21wb25lbnRzIGluY2x1ZGluZyBgUHJvbXB0VGVtcGxhdGVMaXN0YFxuMi4gKipDYXJkKiogLSBVc2VkIGluIGBQcm9tcHRUZW1wbGF0ZUxpc3RgIGFuZCBvdGhlciBjb21wb25lbnRzXG4zLiAqKklucHV0KiogLSBVc2VkIGZvciBzZWFyY2ggZmllbGRzIGFuZCBmb3Jtc1xuNC4gKipMYWJlbCoqIC0gVXNlZCBpbiBmb3JtcyBmb3IgYWNjZXNzaWJpbGl0eVxuNS4gKipTZWxlY3QqKiAtIFVzZWQgZm9yIGRyb3Bkb3duIHNlbGVjdGlvbnNcbjYuICoqRm9ybSoqIC0gVXNlZCBmb3IgZm9ybSBoYW5kbGluZyB3aXRoIHJlYWN0LWhvb2stZm9ybVxuNy4gKipTY3JvbGxBcmVhKiogLSBVc2VkIGluIGBQcm9tcHRUZW1wbGF0ZUxpc3RgIGZvciBzY3JvbGxhYmxlIGNvbnRlbnRcbjguICoqU2VwYXJhdG9yKiogLSBVc2VkIGluIGBQcm9tcHRUZW1wbGF0ZUxpc3RgIHRvIHNlcGFyYXRlIGl0ZW1zXG45LiAqKkRpYWxvZyoqIC0gQ29tbW9uIGNvbXBvbmVudCB0aGF0IG1pZ2h0IGJlIG5lZWRlZCBmb3IgbW9kYWxzXG4xMC4gKipEcm9wZG93bi1tZW51KiogLSBDb21tb24gY29tcG9uZW50IGZvciBkcm9wZG93biBtZW51c1xuXG5UaGVzZSBjb21wb25lbnRzIHNob3VsZCBjb3ZlciB0aGUgaW1tZWRpYXRlIG5lZWRzIGJhc2VkIG9uIHdoYXQncyByZWZlcmVuY2VkIGluIHlvdXIgY29kZS4gSWYgeW91IG5lZWQgYWRkaXRpb25hbCBjb21wb25lbnRzIGxhdGVyLCB5b3UgY2FuIGluc3RhbGwgdGhlbSBpbmRpdmlkdWFsbHkgdXNpbmcgdGhlIHNhbWUgYG5weCBzaGFkY24tdWkgYWRkIFtjb21wb25lbnQtbmFtZV1gIGNvbW1hbmQuXG4iLCJ3b3Jrc3BhY2VfZmlsZV9jaHVua3MiOlt7ImNoYXJfc3RhcnQiOiIwIiwiY2hhcl9lbmQiOiI0NTAiLCJibG9iX25hbWUiOiIzZGFmZmYxZDA4YzgxZDc3YjkxODk4NWQyODA1NDIxNjgxYTVlNTliMjg5M2JjM2Y4Y2Q4MDdjNWM5OWU0OGJhIiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoiY29tcG9uZW50cy5qc29uIn19LHsiY2hhcl9zdGFydCI6IjAiLCJjaGFyX2VuZCI6Ijk4NSIsImJsb2JfbmFtZSI6ImRiYzc2ZGJjZGI0NzIyNzM0NmVkNmNkNmZkMWQ3MjE0NDI3NGUxNjRiY2ViYjcwZmQxZmVmNDQ4NzVhMTZhOGIiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJzcmMvY29tcG9uZW50cy91aS9idXR0b24udHN4In19LHsiY2hhcl9zdGFydCI6Ijk4NSIsImNoYXJfZW5kIjoiMTgwOSIsImJsb2JfbmFtZSI6ImRiYzc2ZGJjZGI0NzIyNzM0NmVkNmNkNmZkMWQ3MjE0NDI3NGUxNjRiY2ViYjcwZmQxZmVmNDQ4NzVhMTZhOGIiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJzcmMvY29tcG9uZW50cy91aS9idXR0b24udHN4In19LHsiY2hhcl9zdGFydCI6IjE4MDkiLCJjaGFyX2VuZCI6IjIwMjkiLCJibG9iX25hbWUiOiJkYmM3NmRiY2RiNDcyMjczNDZlZDZjZDZmZDFkNzIxNDQyNzRlMTY0YmNlYmI3MGZkMWZlZjQ0ODc1YTE2YThiIiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoic3JjL2NvbXBvbmVudHMvdWkvYnV0dG9uLnRzeCJ9fSx7ImNoYXJfc3RhcnQiOiIwIiwiY2hhcl9lbmQiOiI2NDMiLCJibG9iX25hbWUiOiIzNTQyNzI0YjhjZTE2MDY2MzJmOGJkZmNhNzMxYmNlZWM5ZThkNzBlYzU5YTdjZDQxZmE3M2RlMjBmNzYzOWIxIiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoic3JjL2NvbXBvbmVudHMvRHJhd2VyLmFzdHJvIn19LHsiY2hhcl9zdGFydCI6IjAiLCJjaGFyX2VuZCI6IjEwMTgiLCJibG9iX25hbWUiOiJiYTJjY2FmMmNhOTQ5YzUwMjI3ZWU5MDQyOTQ1ZTdmMjc3NmMzYWU2YjYyOTMwNTFmZjQ2NjlkMGY0NzFkZWVjIiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoic3JjL2NvbXBvbmVudHMvSGVhZGVyLmFzdHJvIn19LHsiY2hhcl9zdGFydCI6Ijk5MCIsImNoYXJfZW5kIjoiMTk5MSIsImJsb2JfbmFtZSI6IjEyNDg5NmUyNmRkYjdhZmYzOGVhMzM1NDg4MDA2ZmZkN2IxM2Q3ZjBiODc5NzUzYjdhOWY0NzEwZGY4ODcxOTkiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJzcmMvY29udGVudC9ibG9nLzAxLWFzdHJvLXNwaGVyZS1maWxlLXN0cnVjdHVyZS9pbmRleC5tZCJ9fSx7ImNoYXJfc3RhcnQiOiIwIiwiY2hhcl9lbmQiOiI5ODMiLCJibG9iX25hbWUiOiJhMTNjM2M2MTc3ZTM2OWJiYjAyMGVlNTY0YWRhYmQzZDVkOTg3M2U1YWY5MmJmZWY2MzZkYzk5YjNlOTE5YmE5IiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoiUkVBRE1FLm1kIn19LHsiY2hhcl9zdGFydCI6Ijk4MyIsImNoYXJfZW5kIjoiMTk2NSIsImJsb2JfbmFtZSI6ImExM2MzYzYxNzdlMzY5YmJiMDIwZWU1NjRhZGFiZDNkNWQ5ODczZTVhZjkyYmZlZjYzNmRjOTliM2U5MTliYTkiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJSRUFETUUubWQifX0seyJjaGFyX3N0YXJ0IjoiMCIsImNoYXJfZW5kIjoiOTk1IiwiYmxvYl9uYW1lIjoiZWRmZTAyNGFiYmY5ZTA2MTZkNzZlNmMwMjc3YTk2NDE1MTU0Y2Q1MmUwNTkyNDk2MTRiMTRkNjNiMGEyNTc4NCIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6InNyYy9jb21wb25lbnRzL3VpL3NlbGVjdC50c3gifX0seyJjaGFyX3N0YXJ0IjoiNTM5MSIsImNoYXJfZW5kIjoiNTY0NSIsImJsb2JfbmFtZSI6ImVkZmUwMjRhYmJmOWUwNjE2ZDc2ZTZjMDI3N2E5NjQxNTE1NGNkNTJlMDU5MjQ5NjE0YjE0ZDYzYjBhMjU3ODQiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJzcmMvY29tcG9uZW50cy91aS9zZWxlY3QudHN4In19LHsiY2hhcl9zdGFydCI6IjAiLCJjaGFyX2VuZCI6IjU5NyIsImJsb2JfbmFtZSI6ImUxODJkZDgyNTYwYzFkYTkyN2M1NWRlNzJmM2Q3ZDUzYzNmY2RjNWYxMjQwZTFiMTRmOTY1MDYxZTg5OTc4ZTQiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJzcmMvY29tcG9uZW50cy91aS9sYWJlbC50c3gifX0seyJjaGFyX3N0YXJ0IjoiMCIsImNoYXJfZW5kIjoiNzc4IiwiYmxvYl9uYW1lIjoiMGI0MjgyODNjYjMyMWRkZDQwNmIyMTQ3ODE3MDcwMjA4NTY4MmM3ZDk5NjkzMWJmZjZhZTg4Njg3ZmJmZDFjMCIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6ImFzdHJvLmNvbmZpZy5tanMifX0seyJjaGFyX3N0YXJ0IjoiMCIsImNoYXJfZW5kIjoiNzc3IiwiYmxvYl9uYW1lIjoiNmU4OTAyMWEzZjMyNWJkYmYwY2E5NDUzNDA3YTYxMWNlMjljMWI1MzI1MTViY2NmYjc1MDEzOTg1MDQ2ZTg4ZiIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6InNyYy9jb21wb25lbnRzL3VpL2lucHV0LnRzeCJ9fSx7ImNoYXJfc3RhcnQiOiIwIiwiY2hhcl9lbmQiOiI5NDIiLCJibG9iX25hbWUiOiIxNTM4NjQ4M2JkMmE0NDI3ZDMzZDIyMzMyYjk1NmRlNGNhNTdlOTIxNGYwNGY1NTgzMzI0ZWIyODZiNGY5NWVhIiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoicGFja2FnZS5qc29uIn19LHsiY2hhcl9zdGFydCI6Ijk0MiIsImNoYXJfZW5kIjoiMTg0NSIsImJsb2JfbmFtZSI6IjE1Mzg2NDgzYmQyYTQ0MjdkMzNkMjIzMzJiOTU2ZGU0Y2E1N2U5MjE0ZjA0ZjU1ODMzMjRlYjI4NmI0Zjk1ZWEiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJwYWNrYWdlLmpzb24ifX0seyJjaGFyX3N0YXJ0IjoiMCIsImNoYXJfZW5kIjoiNjgzIiwiYmxvYl9uYW1lIjoiYmI0MGI0MGY0NDZjNzJlYmRjZTU3NTE1Nzk3ZDRmZjMxMDliNmFmNGU3OTAyZjk5MWNmY2ViOGVlYzcyZjU1YiIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6InNyYy9jb21wb25lbnRzL3VpL2Zvcm0udHN4In19LHsiY2hhcl9zdGFydCI6IjM2MDQiLCJjaGFyX2VuZCI6IjM3NTUiLCJibG9iX25hbWUiOiJiYjQwYjQwZjQ0NmM3MmViZGNlNTc1MTU3OTdkNGZmMzEwOWI2YWY0ZTc5MDJmOTkxY2ZjZWI4ZWVjNzJmNTViIiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoic3JjL2NvbXBvbmVudHMvdWkvZm9ybS50c3gifX0seyJjaGFyX3N0YXJ0IjoiMCIsImNoYXJfZW5kIjoiOTcyIiwiYmxvYl9uYW1lIjoiNWM1NjA1NGUzNGJhZTk2ZmYxZDI1N2Y2MWYzM2RmMDAzMTJkOTc4M2RkMTI2N2ZjNjQ2NzBkZjhiMDc1YjdkZCIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6InNyYy9wYWdlcy9kZXYvaW5kZXguYXN0cm8ifX0seyJjaGFyX3N0YXJ0IjoiMjAyMDkwIiwiY2hhcl9lbmQiOiIyMDI4NzIiLCJibG9iX25hbWUiOiI0Yzg2NjlmYjQ3ZTVjYTgwNTQ5ZDNiZDU1MTVmMzcyODVjZWI3NmViZGJhMGY2MTc4ODIyODdmYjY4MjYxYTIxIiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoicG5wbS1sb2NrLnlhbWwifX0seyJjaGFyX3N0YXJ0IjoiMjEwOTY0IiwiY2hhcl9lbmQiOiIyMTE4NDkiLCJibG9iX25hbWUiOiI0Yzg2NjlmYjQ3ZTVjYTgwNTQ5ZDNiZDU1MTVmMzcyODVjZWI3NmViZGJhMGY2MTc4ODIyODdmYjY4MjYxYTIxIiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoicG5wbS1sb2NrLnlhbWwifX0seyJjaGFyX3N0YXJ0IjoiMCIsImNoYXJfZW5kIjoiODI2IiwiYmxvYl9uYW1lIjoiYzcyMzdjYmMzYTMzNTllMzA5NGNhY2ZkMzc2ODY0NDliN2Y4MWRjOGJjZGZiZjIwNDE4ZTA0Yjc1NDkzOTk3YyIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6InNyYy9jb250ZW50L2Jsb2cvMDUtYXN0cm8tc3BoZXJlLXdyaXRpbmctbWR4L2luZGV4Lm1keCJ9fSx7ImNoYXJfc3RhcnQiOiI4MjYiLCJjaGFyX2VuZCI6IjExOTMiLCJibG9iX25hbWUiOiJjNzIzN2NiYzNhMzM1OWUzMDk0Y2FjZmQzNzY4NjQ0OWI3ZjgxZGM4YmNkZmJmMjA0MThlMDRiNzU0OTM5OTdjIiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoic3JjL2NvbnRlbnQvYmxvZy8wNS1hc3Ryby1zcGhlcmUtd3JpdGluZy1tZHgvaW5kZXgubWR4In19LHsiY2hhcl9zdGFydCI6IjAiLCJjaGFyX2VuZCI6IjY1NCIsImJsb2JfbmFtZSI6ImMxN2I4OWI5ZjkzYmNlODE2NjFkMGQ1YmM4NDgyNGQyYjA4YjNkZjlkYWI0NjAyNTI5MWQ3ZmVhNjAwM2E5MzIiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJzcmMvY29tcG9uZW50cy91aS9jYXJkLnRzeCJ9fSx7ImNoYXJfc3RhcnQiOiIwIiwiY2hhcl9lbmQiOiI3NjIiLCJibG9iX25hbWUiOiIwNjRlZDA4MzM3NWE1MWVkMzYyNzIzOGY5YzA2MDFlOGMxMjJhNmFjNDM1ZDE2ZDdmNDYxNDViY2NjZDg2NTBjIiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoic3JjL2NvbXBvbmVudHMva29rb251dHVpL3ByZXZpZXctZ2VuZXJhdGlvbi50c3gifX1dfSx7InN0YXR1cyI6InN1Y2Nlc3MiLCJyZXF1ZXN0X2lkIjoiNTRjMTczMzctNDMwMS00OWQ5LWE0ZGMtMDg2ZGY3NGNmZTg1IiwicmVxdWVzdF9tZXNzYWdlIjoiVGhlcmUgYXJlIGZvcm1hdHRpbmcgZXJyb3JzIGluIHRoaXMgZmlsZS4gRml4IHRoZW0iLCJyaWNoX3RleHRfanNvbl9yZXByIjp7InR5cGUiOiJkb2MiLCJjb250ZW50IjpbeyJ0eXBlIjoicGFyYWdyYXBoIiwiY29udGVudCI6W3sidHlwZSI6InRleHQiLCJ0ZXh0IjoiVGhlcmUgYXJlIGZvcm1hdHRpbmcgZXJyb3JzIGluIHRoaXMgZmlsZS4gRml4IHRoZW0ifV19XX0sIm1lbnRpb25lZF9pdGVtcyI6W10sInN0cnVjdHVyZWRfb3V0cHV0X25vZGVzIjpbeyJpZCI6MCwidHlwZSI6MCwiY29udGVudCI6Ikxvb2tpbmcgYXQgdGhlIGBzcmMvcGFnZXMvZGV2L2luZGV4LmFzdHJvYCBmaWxlLCBJIGNhbiBzZWUgc2V2ZXJhbCBmb3JtYXR0aW5nIGlzc3VlcyB3aXRoIGluZGVudGF0aW9uLCBzcGFjaW5nLCBhbmQgYnJhY2tldCBhbGlnbm1lbnQuIExldCBtZSBmaXggdGhvc2U6XG5cbjxhdWdtZW50X2NvZGVfc25pcHBldCBwYXRoPVwic3JjL3BhZ2VzL2Rldi9pbmRleC5hc3Ryb1wiIG1vZGU9XCJFRElUXCI+XG5gYGB0c3hcbmltcG9ydCBSZWFjdCwgeyB1c2VTdGF0ZSwgdXNlRWZmZWN0IH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyBQbHVzLCBSZWZyZXNoQ3csIFNlYXJjaCB9IGZyb20gXCJsdWNpZGUtcmVhY3RcIjtcbmltcG9ydCB0eXBlIHsgSVByb21wdFRlbXBsYXRlIH0gZnJvbSBcIkB0eXBlc1wiO1xuXG5pbXBvcnQgeyBCdXR0b24gfSBmcm9tIFwiQGNvbXBvbmVudHMvdWkvYnV0dG9uXCI7XG5pbXBvcnQgeyBJbnB1dCB9IGZyb20gXCJAY29tcG9uZW50cy91aS9pbnB1dFwiO1xuaW1wb3J0IHtcbiAgQ2FyZCxcbiAgQ2FyZENvbnRlbnQsXG4gIENhcmREZXNjcmlwdGlvbixcbiAgQ2FyZEZvb3RlcixcbiAgQ2FyZEhlYWRlcixcbiAgQ2FyZFRpdGxlLFxufSBmcm9tIFwiQGNvbXBvbmVudHMvdWkvY2FyZFwiO1xuaW1wb3J0IHsgU2Nyb2xsQXJlYSB9IGZyb20gXCJAY29tcG9uZW50cy91aS9zY3JvbGwtYXJlYVwiO1xuaW1wb3J0IHsgU2VwYXJhdG9yIH0gZnJvbSBcIkBjb21wb25lbnRzL3VpL3NlcGFyYXRvclwiO1xuXG5pbnRlcmZhY2UgUHJvbXB0VGVtcGxhdGVMaXN0UHJvcHMge1xuICBvblNlbGVjdDogKHByb21wdFRlbXBsYXRlOiBJUHJvbXB0VGVtcGxhdGUpID0+IHZvaWQ7XG4gIG9uTmV3OiAoKSA9PiB2b2lkO1xuICBzZWxlY3RlZElkPzogc3RyaW5nO1xufVxuXG5jb25zdCBQcm9tcHRUZW1wbGF0ZUxpc3Q6IFJlYWN0LkZDPFByb21wdFRlbXBsYXRlTGlzdFByb3BzPiA9ICh7XG4gIG9uU2VsZWN0LFxuICBvbk5ldyxcbiAgc2VsZWN0ZWRJZCxcbn0pID0+IHtcbiAgY29uc3QgW3Byb21wdFRlbXBsYXRlcywgc2V0UHJvbXB0VGVtcGxhdGVzXSA9IHVzZVN0YXRlPElQcm9tcHRUZW1wbGF0ZVtdPihbXSk7XG4gIGNvbnN0IFtsb2FkaW5nLCBzZXRMb2FkaW5nXSA9IHVzZVN0YXRlKGZhbHNlKTtcbiAgY29uc3QgW2Vycm9yLCBzZXRFcnJvcl0gPSB1c2VTdGF0ZTxzdHJpbmcgfCBudWxsPihudWxsKTtcbiAgY29uc3QgW3NlYXJjaFRlcm0sIHNldFNlYXJjaFRlcm1dID0gdXNlU3RhdGUoXCJcIik7XG5cbiAgY29uc3QgZmV0Y2hQcm9tcHRUZW1wbGF0ZXMgPSBhc3luYyAoKSA9PiB7XG4gICAgc2V0TG9hZGluZyh0cnVlKTtcbiAgICBzZXRFcnJvcihudWxsKTtcbiAgICB0cnkge1xuICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChcIi9hcGkvcHJvbXB0cy9pbmRleC5qc29uXCIpO1xuICAgICAgaWYgKCFyZXNwb25zZS5vaykge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJGYWlsZWQgdG8gZmV0Y2ggcHJvbXB0IHRlbXBsYXRlc1wiKTtcbiAgICAgIH1cbiAgICAgIGNvbnN0IGRhdGEgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XG4gICAgICBzZXRQcm9tcHRUZW1wbGF0ZXMoZGF0YSk7XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoXCJFcnJvciBmZXRjaGluZyBwcm9tcHQgdGVtcGxhdGVzOlwiLCBlcnJvcik7XG4gICAgICBzZXRFcnJvcihcIkZhaWxlZCB0byBsb2FkIHByb21wdCB0ZW1wbGF0ZXNcIik7XG4gICAgfSBmaW5hbGx5IHtcbiAgICAgIHNldExvYWRpbmcoZmFsc2UpO1xuICAgIH1cbiAgfTtcblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGZldGNoUHJvbXB0VGVtcGxhdGVzKCk7XG4gIH0sIFtdKTtcblxuICBjb25zdCBmaWx0ZXJlZFRlbXBsYXRlcyA9IHByb21wdFRlbXBsYXRlcy5maWx0ZXIoKHRlbXBsYXRlKSA9PlxuICAgIHRlbXBsYXRlLm5hbWUudG9Mb3dlckNhc2UoKS5pbmNsdWRlcyhzZWFyY2hUZXJtLnRvTG93ZXJDYXNlKCkpIHx8XG4gICAgdGVtcGxhdGUuZGVzY3JpcHRpb24udG9Mb3dlckNhc2UoKS5pbmNsdWRlcyhzZWFyY2hUZXJtLnRvTG93ZXJDYXNlKCkpXG4gICk7XG5cbiAgcmV0dXJuIChcbiAgICA8Q2FyZCBjbGFzc05hbWU9XCJoLWZ1bGwgZmxleCBmbGV4LWNvbFwiPlxuICAgICAgPENhcmRIZWFkZXI+XG4gICAgICAgIDxDYXJkVGl0bGU+UHJvbXB0IFRlbXBsYXRlczwvQ2FyZFRpdGxlPlxuICAgICAgICA8Q2FyZERlc2NyaXB0aW9uPlxuICAgICAgICAgIFNlbGVjdCBhIHRlbXBsYXRlIHRvIGVkaXQgb3IgY3JlYXRlIGEgbmV3IG9uZVxuICAgICAgICA8L0NhcmREZXNjcmlwdGlvbj5cbiAgICAgIDwvQ2FyZEhlYWRlcj5cbiAgICAgIDxDYXJkQ29udGVudCBjbGFzc05hbWU9XCJmbGV4LTEgZmxleCBmbGV4LWNvbCBnYXAtNFwiPlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZsZXggZ2FwLTJcIj5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInJlbGF0aXZlIGZsZXgtMVwiPlxuICAgICAgICAgICAgPFNlYXJjaCBjbGFzc05hbWU9XCJhYnNvbHV0ZSBsZWZ0LTIgdG9wLTIuNSBoLTQgdy00IHRleHQtbXV0ZWQtZm9yZWdyb3VuZFwiIC8+XG4gICAgICAgICAgICA8SW5wdXRcbiAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9XCJTZWFyY2ggdGVtcGxhdGVzLi4uXCJcbiAgICAgICAgICAgICAgY2xhc3NOYW1lPVwicGwtOFwiXG4gICAgICAgICAgICAgIHZhbHVlPXtzZWFyY2hUZXJtfVxuICAgICAgICAgICAgICBvbkNoYW5nZT17KGUpID0+IHNldFNlYXJjaFRlcm0oZS50YXJnZXQudmFsdWUpfVxuICAgICAgICAgICAgLz5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8QnV0dG9uXG4gICAgICAgICAgICBzaXplPVwiaWNvblwiXG4gICAgICAgICAgICB2YXJpYW50PVwib3V0bGluZVwiXG4gICAgICAgICAgICBvbkNsaWNrPXtmZXRjaFByb21wdFRlbXBsYXRlc31cbiAgICAgICAgICAgIGRpc2FibGVkPXtsb2FkaW5nfVxuICAgICAgICAgICAgdGl0bGU9XCJSZWZyZXNoIHRlbXBsYXRlc1wiXG4gICAgICAgICAgPlxuICAgICAgICAgICAgPFJlZnJlc2hDdyBjbGFzc05hbWU9e2BoLTQgdy00ICR7bG9hZGluZyA/IFwiYW5pbWF0ZS1zcGluXCIgOiBcIlwifWB9IC8+XG4gICAgICAgICAgPC9CdXR0b24+XG4gICAgICAgIDwvZGl2PlxuXG4gICAgICAgIHtlcnJvciAmJiA8cCBjbGFzc05hbWU9XCJ0ZXh0LXNtIHRleHQtZGVzdHJ1Y3RpdmVcIj57ZXJyb3J9PC9wPn1cblxuICAgICAgICA8U2Nyb2xsQXJlYSBjbGFzc05hbWU9XCJmbGV4LTEgYm9yZGVyIHJvdW5kZWQtbWRcIj5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInAtMVwiPlxuICAgICAgICAgICAge2ZpbHRlcmVkVGVtcGxhdGVzLmxlbmd0aCA9PT0gMCA/IChcbiAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJwLTQgdGV4dC1jZW50ZXIgdGV4dC1tdXRlZC1mb3JlZ3JvdW5kXCI+XG4gICAgICAgICAgICAgICAge3NlYXJjaFRlcm1cbiAgICAgICAgICAgICAgICAgID8gXCJObyB0ZW1wbGF0ZXMgbWF0Y2ggeW91ciBzZWFyY2hcIlxuICAgICAgICAgICAgICAgICAgOiBcIk5vIHRlbXBsYXRlcyBmb3VuZFwifVxuICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICkgOiAoXG4gICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwic3BhY2UteS0xXCI+XG4gICAgICAgICAgICAgICAge2ZpbHRlcmVkVGVtcGxhdGVzLm1hcCgodGVtcGxhdGUpID0+IChcbiAgICAgICAgICAgICAgICAgIDxSZWFjdC5GcmFnbWVudCBrZXk9e3RlbXBsYXRlLmlkfT5cbiAgICAgICAgICAgICAgICAgICAgPGJ1dHRvblxuICAgICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9eygpID0+IG9uU2VsZWN0KHRlbXBsYXRlKX1cbiAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9e2B3LWZ1bGwgdGV4dC1sZWZ0IHAtMiByb3VuZGVkLW1kIGhvdmVyOmJnLWFjY2VudCB0cmFuc2l0aW9uLWNvbG9ycyAke1xuICAgICAgICAgICAgICAgICAgICAgICAgc2VsZWN0ZWRJZCA9PT0gdGVtcGxhdGUuaWRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgPyBcImJnLWFjY2VudC81MFwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDogXCJcIlxuICAgICAgICAgICAgICAgICAgICAgIH1gfVxuICAgICAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJmb250LW1lZGl1bVwiPnt0ZW1wbGF0ZS5uYW1lfTwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwidGV4dC14cyB0ZXh0LW11dGVkLWZvcmVncm91bmQgbGluZS1jbGFtcC0xXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICB7dGVtcGxhdGUuZGVzY3JpcHRpb259XG4gICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICAgICAgICAgICAgICA8U2VwYXJhdG9yIC8+XG4gICAgICAgICAgICAgICAgICA8L1JlYWN0LkZyYWdtZW50PlxuICAgICAgICAgICAgICAgICkpfVxuICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICl9XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvU2Nyb2xsQXJlYT5cbiAgICAgIDwvQ2FyZENvbnRlbnQ+XG4gICAgICA8Q2FyZEZvb3Rlcj5cbiAgICAgICAgPEJ1dHRvbiBvbkNsaWNrPXtvbk5ld30gY2xhc3NOYW1lPVwidy1mdWxsXCI+XG4gICAgICAgICAgPFBsdXMgY2xhc3NOYW1lPVwibXItMiBoLTQgdy00XCIgLz5cbiAgICAgICAgICBDcmVhdGUgTmV3IFRlbXBsYXRlXG4gICAgICAgIDwvQnV0dG9uPlxuICAgICAgPC9DYXJkRm9vdGVyPlxuICAgIDwvQ2FyZD5cbiAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IFByb21wdFRlbXBsYXRlTGlzdDtcbmBgYFxuPC9hdWdtZW50X2NvZGVfc25pcHBldD5cblxuSSd2ZSBmaXhlZCB0aGUgZm9sbG93aW5nIGZvcm1hdHRpbmcgaXNzdWVzOlxuXG4xLiBDb3JyZWN0ZWQgaW5jb25zaXN0ZW50IGluZGVudGF0aW9uIHRocm91Z2hvdXQgdGhlIGZpbGVcbjIuIEZpeGVkIGFsaWdubWVudCBvZiBjbG9zaW5nIGJyYWNrZXRzIGFuZCBwYXJlbnRoZXNlc1xuMy4gU3RhbmRhcmRpemVkIHNwYWNpbmcgaW4gaW1wb3J0IHN0YXRlbWVudHNcbjQuIFByb3Blcmx5IGFsaWduZWQgSlNYIGVsZW1lbnRzIGFuZCB0aGVpciBhdHRyaWJ1dGVzXG41LiBGaXhlZCB0aGUgaW5kZW50YXRpb24gaW4gdGhlIHRlcm5hcnkgb3BlcmF0b3Igd2l0aGluIHRoZSBjbGFzc05hbWVcbjYuIEVuc3VyZWQgY29uc2lzdGVudCBzcGFjaW5nIGluIHRoZSBmaWx0ZXIgZnVuY3Rpb25cbjcuIFByb3Blcmx5IGZvcm1hdHRlZCB0aGUgY29tcG9uZW50IGludGVyZmFjZVxuXG5UaGUgY29kZSBub3cgZm9sbG93cyBhIGNvbnNpc3RlbnQgZm9ybWF0dGluZyBzdHlsZSB0aGF0IGFsaWducyB3aXRoIHN0YW5kYXJkIFJlYWN0L1R5cGVTY3JpcHQgY29udmVudGlvbnMgYW5kIHNob3VsZCBiZSBjb21wYXRpYmxlIHdpdGggeW91ciBwcm9qZWN0J3MgUHJldHRpZXIgY29uZmlndXJhdGlvbi5cbiJ9LHsiaWQiOjIsInR5cGUiOjIsImNvbnRlbnQiOiIifSx7ImlkIjozLCJ0eXBlIjozLCJjb250ZW50IjoiLnByZXR0aWVycmMubWpzOjAtMjM4XG5jb21wb25lbnRzLmpzb246MC00NTBcbi52c2NvZGUvc2V0dGluZ3MuanNvbjowLTgwXG5wYWNrYWdlLmpzb246MC05NDJcbnBhY2thZ2UuanNvbjo5NDItMTg0NVxucGFja2FnZS5qc29uOjE4NDUtMjEwNlxuUkVBRE1FLm1kOjk4My0xOTY1XG5SRUFETUUubWQ6MTk2NS0yOTYyXG5SRUFETUUubWQ6Mjk2Mi0zMDM4XG5zcmMvY29udGVudC9ibG9nLzAxLWFzdHJvLXNwaGVyZS1maWxlLXN0cnVjdHVyZS9pbmRleC5tZDowLTk5MFxuc3JjL2NvbnRlbnQvYmxvZy8wMS1hc3Ryby1zcGhlcmUtZmlsZS1zdHJ1Y3R1cmUvaW5kZXgubWQ6OTkwLTE5OTFcbnNyYy9jb250ZW50L2Jsb2cvMDEtYXN0cm8tc3BoZXJlLWZpbGUtc3RydWN0dXJlL2luZGV4Lm1kOjE5OTEtMjI4OVxuc3JjL2NvbXBvbmVudHMvdWkvYnV0dG9uLnRzeDowLTk4NVxucG5wbS1sb2NrLnlhbWw6MTQzNzY1LTE0NDc1N1xucG5wbS1sb2NrLnlhbWw6MTQ0NzU3LTE0NTYwM1xudHNjb25maWcuanNvbjowLTM4NVxuc3JjL2xpYi91dGlscy50czowLTg2Nlxuc3JjL3N0eWxlcy9nbG9iYWwuY3NzOjAtNjY3XG5zcmMvc3R5bGVzL2dsb2JhbC5jc3M6Mzc5Ni0zOTQzXG50YWlsd2luZC5jb25maWcubWpzOjAtOTY3XG4udnNjb2RlL2V4dGVuc2lvbnMuanNvbjowLTExMVxuc3JjL2NvbXBvbmVudHMva29rb251dHVpL2Vycm9yLWdlbmVyYXRpb24udHN4OjAtMzg2XG5zcmMvY29tcG9uZW50cy91aS9mb3JtLnRzeDowLTY4M1xuc3JjL2NvbXBvbmVudHMvdWkvZm9ybS50c3g6MjE2My0yOTAzXG5zcmMvY29tcG9uZW50cy91aS9mb3JtLnRzeDoyOTAzLTM2MDRcbnNyYy9jb250ZW50L2Jsb2cvMDItYXN0cm8tc3BoZXJlLWdldHRpbmctc3RhcnRlZC9pbmRleC5tZDowLTYzOFxuYXN0cm8uY29uZmlnLm1qczo3NzgtOTgzXG4uZ2l0aWdub3JlOjAtMjk2In1dLCJzZWVuX3N0YXRlIjoic2VlbiIsInJlc3BvbnNlX3RleHQiOiJMb29raW5nIGF0IHRoZSBgc3JjL3BhZ2VzL2Rldi9pbmRleC5hc3Ryb2AgZmlsZSwgSSBjYW4gc2VlIHNldmVyYWwgZm9ybWF0dGluZyBpc3N1ZXMgd2l0aCBpbmRlbnRhdGlvbiwgc3BhY2luZywgYW5kIGJyYWNrZXQgYWxpZ25tZW50LiBMZXQgbWUgZml4IHRob3NlOlxuXG5gYGBgdHN4IHBhdGg9c3JjL3BhZ2VzL2Rldi9pbmRleC5hc3RybyBtb2RlPUVESVRcbmltcG9ydCBSZWFjdCwgeyB1c2VTdGF0ZSwgdXNlRWZmZWN0IH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyBQbHVzLCBSZWZyZXNoQ3csIFNlYXJjaCB9IGZyb20gXCJsdWNpZGUtcmVhY3RcIjtcbmltcG9ydCB0eXBlIHsgSVByb21wdFRlbXBsYXRlIH0gZnJvbSBcIkB0eXBlc1wiO1xuXG5pbXBvcnQgeyBCdXR0b24gfSBmcm9tIFwiQGNvbXBvbmVudHMvdWkvYnV0dG9uXCI7XG5pbXBvcnQgeyBJbnB1dCB9IGZyb20gXCJAY29tcG9uZW50cy91aS9pbnB1dFwiO1xuaW1wb3J0IHtcbiAgQ2FyZCxcbiAgQ2FyZENvbnRlbnQsXG4gIENhcmREZXNjcmlwdGlvbixcbiAgQ2FyZEZvb3RlcixcbiAgQ2FyZEhlYWRlcixcbiAgQ2FyZFRpdGxlLFxufSBmcm9tIFwiQGNvbXBvbmVudHMvdWkvY2FyZFwiO1xuaW1wb3J0IHsgU2Nyb2xsQXJlYSB9IGZyb20gXCJAY29tcG9uZW50cy91aS9zY3JvbGwtYXJlYVwiO1xuaW1wb3J0IHsgU2VwYXJhdG9yIH0gZnJvbSBcIkBjb21wb25lbnRzL3VpL3NlcGFyYXRvclwiO1xuXG5pbnRlcmZhY2UgUHJvbXB0VGVtcGxhdGVMaXN0UHJvcHMge1xuICBvblNlbGVjdDogKHByb21wdFRlbXBsYXRlOiBJUHJvbXB0VGVtcGxhdGUpID0+IHZvaWQ7XG4gIG9uTmV3OiAoKSA9PiB2b2lkO1xuICBzZWxlY3RlZElkPzogc3RyaW5nO1xufVxuXG5jb25zdCBQcm9tcHRUZW1wbGF0ZUxpc3Q6IFJlYWN0LkZDPFByb21wdFRlbXBsYXRlTGlzdFByb3BzPiA9ICh7XG4gIG9uU2VsZWN0LFxuICBvbk5ldyxcbiAgc2VsZWN0ZWRJZCxcbn0pID0+IHtcbiAgY29uc3QgW3Byb21wdFRlbXBsYXRlcywgc2V0UHJvbXB0VGVtcGxhdGVzXSA9IHVzZVN0YXRlPElQcm9tcHRUZW1wbGF0ZVtdPihbXSk7XG4gIGNvbnN0IFtsb2FkaW5nLCBzZXRMb2FkaW5nXSA9IHVzZVN0YXRlKGZhbHNlKTtcbiAgY29uc3QgW2Vycm9yLCBzZXRFcnJvcl0gPSB1c2VTdGF0ZTxzdHJpbmcgfCBudWxsPihudWxsKTtcbiAgY29uc3QgW3NlYXJjaFRlcm0sIHNldFNlYXJjaFRlcm1dID0gdXNlU3RhdGUoXCJcIik7XG5cbiAgY29uc3QgZmV0Y2hQcm9tcHRUZW1wbGF0ZXMgPSBhc3luYyAoKSA9PiB7XG4gICAgc2V0TG9hZGluZyh0cnVlKTtcbiAgICBzZXRFcnJvcihudWxsKTtcbiAgICB0cnkge1xuICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChcIi9hcGkvcHJvbXB0cy9pbmRleC5qc29uXCIpO1xuICAgICAgaWYgKCFyZXNwb25zZS5vaykge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJGYWlsZWQgdG8gZmV0Y2ggcHJvbXB0IHRlbXBsYXRlc1wiKTtcbiAgICAgIH1cbiAgICAgIGNvbnN0IGRhdGEgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XG4gICAgICBzZXRQcm9tcHRUZW1wbGF0ZXMoZGF0YSk7XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoXCJFcnJvciBmZXRjaGluZyBwcm9tcHQgdGVtcGxhdGVzOlwiLCBlcnJvcik7XG4gICAgICBzZXRFcnJvcihcIkZhaWxlZCB0byBsb2FkIHByb21wdCB0ZW1wbGF0ZXNcIik7XG4gICAgfSBmaW5hbGx5IHtcbiAgICAgIHNldExvYWRpbmcoZmFsc2UpO1xuICAgIH1cbiAgfTtcblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGZldGNoUHJvbXB0VGVtcGxhdGVzKCk7XG4gIH0sIFtdKTtcblxuICBjb25zdCBmaWx0ZXJlZFRlbXBsYXRlcyA9IHByb21wdFRlbXBsYXRlcy5maWx0ZXIoKHRlbXBsYXRlKSA9PlxuICAgIHRlbXBsYXRlLm5hbWUudG9Mb3dlckNhc2UoKS5pbmNsdWRlcyhzZWFyY2hUZXJtLnRvTG93ZXJDYXNlKCkpIHx8XG4gICAgdGVtcGxhdGUuZGVzY3JpcHRpb24udG9Mb3dlckNhc2UoKS5pbmNsdWRlcyhzZWFyY2hUZXJtLnRvTG93ZXJDYXNlKCkpXG4gICk7XG5cbiAgcmV0dXJuIChcbiAgICA8Q2FyZCBjbGFzc05hbWU9XCJoLWZ1bGwgZmxleCBmbGV4LWNvbFwiPlxuICAgICAgPENhcmRIZWFkZXI+XG4gICAgICAgIDxDYXJkVGl0bGU+UHJvbXB0IFRlbXBsYXRlczwvQ2FyZFRpdGxlPlxuICAgICAgICA8Q2FyZERlc2NyaXB0aW9uPlxuICAgICAgICAgIFNlbGVjdCBhIHRlbXBsYXRlIHRvIGVkaXQgb3IgY3JlYXRlIGEgbmV3IG9uZVxuICAgICAgICA8L0NhcmREZXNjcmlwdGlvbj5cbiAgICAgIDwvQ2FyZEhlYWRlcj5cbiAgICAgIDxDYXJkQ29udGVudCBjbGFzc05hbWU9XCJmbGV4LTEgZmxleCBmbGV4LWNvbCBnYXAtNFwiPlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZsZXggZ2FwLTJcIj5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInJlbGF0aXZlIGZsZXgtMVwiPlxuICAgICAgICAgICAgPFNlYXJjaCBjbGFzc05hbWU9XCJhYnNvbHV0ZSBsZWZ0LTIgdG9wLTIuNSBoLTQgdy00IHRleHQtbXV0ZWQtZm9yZWdyb3VuZFwiIC8+XG4gICAgICAgICAgICA8SW5wdXRcbiAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9XCJTZWFyY2ggdGVtcGxhdGVzLi4uXCJcbiAgICAgICAgICAgICAgY2xhc3NOYW1lPVwicGwtOFwiXG4gICAgICAgICAgICAgIHZhbHVlPXtzZWFyY2hUZXJtfVxuICAgICAgICAgICAgICBvbkNoYW5nZT17KGUpID0+IHNldFNlYXJjaFRlcm0oZS50YXJnZXQudmFsdWUpfVxuICAgICAgICAgICAgLz5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8QnV0dG9uXG4gICAgICAgICAgICBzaXplPVwiaWNvblwiXG4gICAgICAgICAgICB2YXJpYW50PVwib3V0bGluZVwiXG4gICAgICAgICAgICBvbkNsaWNrPXtmZXRjaFByb21wdFRlbXBsYXRlc31cbiAgICAgICAgICAgIGRpc2FibGVkPXtsb2FkaW5nfVxuICAgICAgICAgICAgdGl0bGU9XCJSZWZyZXNoIHRlbXBsYXRlc1wiXG4gICAgICAgICAgPlxuICAgICAgICAgICAgPFJlZnJlc2hDdyBjbGFzc05hbWU9e2BoLTQgdy00ICR7bG9hZGluZyA/IFwiYW5pbWF0ZS1zcGluXCIgOiBcIlwifWB9IC8+XG4gICAgICAgICAgPC9CdXR0b24+XG4gICAgICAgIDwvZGl2PlxuXG4gICAgICAgIHtlcnJvciAmJiA8cCBjbGFzc05hbWU9XCJ0ZXh0LXNtIHRleHQtZGVzdHJ1Y3RpdmVcIj57ZXJyb3J9PC9wPn1cblxuICAgICAgICA8U2Nyb2xsQXJlYSBjbGFzc05hbWU9XCJmbGV4LTEgYm9yZGVyIHJvdW5kZWQtbWRcIj5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInAtMVwiPlxuICAgICAgICAgICAge2ZpbHRlcmVkVGVtcGxhdGVzLmxlbmd0aCA9PT0gMCA/IChcbiAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJwLTQgdGV4dC1jZW50ZXIgdGV4dC1tdXRlZC1mb3JlZ3JvdW5kXCI+XG4gICAgICAgICAgICAgICAge3NlYXJjaFRlcm1cbiAgICAgICAgICAgICAgICAgID8gXCJObyB0ZW1wbGF0ZXMgbWF0Y2ggeW91ciBzZWFyY2hcIlxuICAgICAgICAgICAgICAgICAgOiBcIk5vIHRlbXBsYXRlcyBmb3VuZFwifVxuICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICkgOiAoXG4gICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwic3BhY2UteS0xXCI+XG4gICAgICAgICAgICAgICAge2ZpbHRlcmVkVGVtcGxhdGVzLm1hcCgodGVtcGxhdGUpID0+IChcbiAgICAgICAgICAgICAgICAgIDxSZWFjdC5GcmFnbWVudCBrZXk9e3RlbXBsYXRlLmlkfT5cbiAgICAgICAgICAgICAgICAgICAgPGJ1dHRvblxuICAgICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9eygpID0+IG9uU2VsZWN0KHRlbXBsYXRlKX1cbiAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9e2B3LWZ1bGwgdGV4dC1sZWZ0IHAtMiByb3VuZGVkLW1kIGhvdmVyOmJnLWFjY2VudCB0cmFuc2l0aW9uLWNvbG9ycyAke1xuICAgICAgICAgICAgICAgICAgICAgICAgc2VsZWN0ZWRJZCA9PT0gdGVtcGxhdGUuaWRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgPyBcImJnLWFjY2VudC81MFwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDogXCJcIlxuICAgICAgICAgICAgICAgICAgICAgIH1gfVxuICAgICAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJmb250LW1lZGl1bVwiPnt0ZW1wbGF0ZS5uYW1lfTwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwidGV4dC14cyB0ZXh0LW11dGVkLWZvcmVncm91bmQgbGluZS1jbGFtcC0xXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICB7dGVtcGxhdGUuZGVzY3JpcHRpb259XG4gICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICAgICAgICAgICAgICA8U2VwYXJhdG9yIC8+XG4gICAgICAgICAgICAgICAgICA8L1JlYWN0LkZyYWdtZW50PlxuICAgICAgICAgICAgICAgICkpfVxuICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICl9XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvU2Nyb2xsQXJlYT5cbiAgICAgIDwvQ2FyZENvbnRlbnQ+XG4gICAgICA8Q2FyZEZvb3Rlcj5cbiAgICAgICAgPEJ1dHRvbiBvbkNsaWNrPXtvbk5ld30gY2xhc3NOYW1lPVwidy1mdWxsXCI+XG4gICAgICAgICAgPFBsdXMgY2xhc3NOYW1lPVwibXItMiBoLTQgdy00XCIgLz5cbiAgICAgICAgICBDcmVhdGUgTmV3IFRlbXBsYXRlXG4gICAgICAgIDwvQnV0dG9uPlxuICAgICAgPC9DYXJkRm9vdGVyPlxuICAgIDwvQ2FyZD5cbiAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IFByb21wdFRlbXBsYXRlTGlzdDtcbmBgYGBcblxuSSd2ZSBmaXhlZCB0aGUgZm9sbG93aW5nIGZvcm1hdHRpbmcgaXNzdWVzOlxuXG4xLiBDb3JyZWN0ZWQgaW5jb25zaXN0ZW50IGluZGVudGF0aW9uIHRocm91Z2hvdXQgdGhlIGZpbGVcbjIuIEZpeGVkIGFsaWdubWVudCBvZiBjbG9zaW5nIGJyYWNrZXRzIGFuZCBwYXJlbnRoZXNlc1xuMy4gU3RhbmRhcmRpemVkIHNwYWNpbmcgaW4gaW1wb3J0IHN0YXRlbWVudHNcbjQuIFByb3Blcmx5IGFsaWduZWQgSlNYIGVsZW1lbnRzIGFuZCB0aGVpciBhdHRyaWJ1dGVzXG41LiBGaXhlZCB0aGUgaW5kZW50YXRpb24gaW4gdGhlIHRlcm5hcnkgb3BlcmF0b3Igd2l0aGluIHRoZSBjbGFzc05hbWVcbjYuIEVuc3VyZWQgY29uc2lzdGVudCBzcGFjaW5nIGluIHRoZSBmaWx0ZXIgZnVuY3Rpb25cbjcuIFByb3Blcmx5IGZvcm1hdHRlZCB0aGUgY29tcG9uZW50IGludGVyZmFjZVxuXG5UaGUgY29kZSBub3cgZm9sbG93cyBhIGNvbnNpc3RlbnQgZm9ybWF0dGluZyBzdHlsZSB0aGF0IGFsaWducyB3aXRoIHN0YW5kYXJkIFJlYWN0L1R5cGVTY3JpcHQgY29udmVudGlvbnMgYW5kIHNob3VsZCBiZSBjb21wYXRpYmxlIHdpdGggeW91ciBwcm9qZWN0J3MgUHJldHRpZXIgY29uZmlndXJhdGlvbi5cbiIsIndvcmtzcGFjZV9maWxlX2NodW5rcyI6W3siY2hhcl9zdGFydCI6IjAiLCJjaGFyX2VuZCI6IjIzOCIsImJsb2JfbmFtZSI6IjA2ZDYyYTMwNjA4Y2Y4OTdjYWVjZmYyYjQ3NjFiYjEwYzRiNDQ3YzU2MjMxOGY2YzliZWE3NDg5MWUwMDE5ZTciLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiIucHJldHRpZXJyYy5tanMifX0seyJjaGFyX3N0YXJ0IjoiMCIsImNoYXJfZW5kIjoiNDUwIiwiYmxvYl9uYW1lIjoiM2RhZmZmMWQwOGM4MWQ3N2I5MTg5ODVkMjgwNTQyMTY4MWE1ZTU5YjI4OTNiYzNmOGNkODA3YzVjOTllNDhiYSIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6ImNvbXBvbmVudHMuanNvbiJ9fSx7ImNoYXJfc3RhcnQiOiIwIiwiY2hhcl9lbmQiOiI4MCIsImJsb2JfbmFtZSI6IjUyOTYxNzliN2M2MThhZDUwODgyMWI1MmE4N2ZiMDgzODIyZGY0NDdjZjhkZjkyYmJjZjQwNTUyNGU0OGJkODMiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiIudnNjb2RlL3NldHRpbmdzLmpzb24ifX0seyJjaGFyX3N0YXJ0IjoiMCIsImNoYXJfZW5kIjoiOTQyIiwiYmxvYl9uYW1lIjoiMTUzODY0ODNiZDJhNDQyN2QzM2QyMjMzMmI5NTZkZTRjYTU3ZTkyMTRmMDRmNTU4MzMyNGViMjg2YjRmOTVlYSIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6InBhY2thZ2UuanNvbiJ9fSx7ImNoYXJfc3RhcnQiOiI5NDIiLCJjaGFyX2VuZCI6IjE4NDUiLCJibG9iX25hbWUiOiIxNTM4NjQ4M2JkMmE0NDI3ZDMzZDIyMzMyYjk1NmRlNGNhNTdlOTIxNGYwNGY1NTgzMzI0ZWIyODZiNGY5NWVhIiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoicGFja2FnZS5qc29uIn19LHsiY2hhcl9zdGFydCI6IjE4NDUiLCJjaGFyX2VuZCI6IjIxMDYiLCJibG9iX25hbWUiOiIxNTM4NjQ4M2JkMmE0NDI3ZDMzZDIyMzMyYjk1NmRlNGNhNTdlOTIxNGYwNGY1NTgzMzI0ZWIyODZiNGY5NWVhIiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoicGFja2FnZS5qc29uIn19LHsiY2hhcl9zdGFydCI6Ijk4MyIsImNoYXJfZW5kIjoiMTk2NSIsImJsb2JfbmFtZSI6ImExM2MzYzYxNzdlMzY5YmJiMDIwZWU1NjRhZGFiZDNkNWQ5ODczZTVhZjkyYmZlZjYzNmRjOTliM2U5MTliYTkiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJSRUFETUUubWQifX0seyJjaGFyX3N0YXJ0IjoiMTk2NSIsImNoYXJfZW5kIjoiMjk2MiIsImJsb2JfbmFtZSI6ImExM2MzYzYxNzdlMzY5YmJiMDIwZWU1NjRhZGFiZDNkNWQ5ODczZTVhZjkyYmZlZjYzNmRjOTliM2U5MTliYTkiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJSRUFETUUubWQifX0seyJjaGFyX3N0YXJ0IjoiMjk2MiIsImNoYXJfZW5kIjoiMzAzOCIsImJsb2JfbmFtZSI6ImExM2MzYzYxNzdlMzY5YmJiMDIwZWU1NjRhZGFiZDNkNWQ5ODczZTVhZjkyYmZlZjYzNmRjOTliM2U5MTliYTkiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJSRUFETUUubWQifX0seyJjaGFyX3N0YXJ0IjoiMCIsImNoYXJfZW5kIjoiOTkwIiwiYmxvYl9uYW1lIjoiMTI0ODk2ZTI2ZGRiN2FmZjM4ZWEzMzU0ODgwMDZmZmQ3YjEzZDdmMGI4Nzk3NTNiN2E5ZjQ3MTBkZjg4NzE5OSIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6InNyYy9jb250ZW50L2Jsb2cvMDEtYXN0cm8tc3BoZXJlLWZpbGUtc3RydWN0dXJlL2luZGV4Lm1kIn19LHsiY2hhcl9zdGFydCI6Ijk5MCIsImNoYXJfZW5kIjoiMTk5MSIsImJsb2JfbmFtZSI6IjEyNDg5NmUyNmRkYjdhZmYzOGVhMzM1NDg4MDA2ZmZkN2IxM2Q3ZjBiODc5NzUzYjdhOWY0NzEwZGY4ODcxOTkiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJzcmMvY29udGVudC9ibG9nLzAxLWFzdHJvLXNwaGVyZS1maWxlLXN0cnVjdHVyZS9pbmRleC5tZCJ9fSx7ImNoYXJfc3RhcnQiOiIxOTkxIiwiY2hhcl9lbmQiOiIyMjg5IiwiYmxvYl9uYW1lIjoiMTI0ODk2ZTI2ZGRiN2FmZjM4ZWEzMzU0ODgwMDZmZmQ3YjEzZDdmMGI4Nzk3NTNiN2E5ZjQ3MTBkZjg4NzE5OSIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6InNyYy9jb250ZW50L2Jsb2cvMDEtYXN0cm8tc3BoZXJlLWZpbGUtc3RydWN0dXJlL2luZGV4Lm1kIn19LHsiY2hhcl9zdGFydCI6IjAiLCJjaGFyX2VuZCI6Ijk4NSIsImJsb2JfbmFtZSI6ImRiYzc2ZGJjZGI0NzIyNzM0NmVkNmNkNmZkMWQ3MjE0NDI3NGUxNjRiY2ViYjcwZmQxZmVmNDQ4NzVhMTZhOGIiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJzcmMvY29tcG9uZW50cy91aS9idXR0b24udHN4In19LHsiY2hhcl9zdGFydCI6IjE0Mzc2NSIsImNoYXJfZW5kIjoiMTQ0NzU3IiwiYmxvYl9uYW1lIjoiNGM4NjY5ZmI0N2U1Y2E4MDU0OWQzYmQ1NTE1ZjM3Mjg1Y2ViNzZlYmRiYTBmNjE3ODgyMjg3ZmI2ODI2MWEyMSIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6InBucG0tbG9jay55YW1sIn19LHsiY2hhcl9zdGFydCI6IjE0NDc1NyIsImNoYXJfZW5kIjoiMTQ1NjAzIiwiYmxvYl9uYW1lIjoiNGM4NjY5ZmI0N2U1Y2E4MDU0OWQzYmQ1NTE1ZjM3Mjg1Y2ViNzZlYmRiYTBmNjE3ODgyMjg3ZmI2ODI2MWEyMSIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6InBucG0tbG9jay55YW1sIn19LHsiY2hhcl9zdGFydCI6IjAiLCJjaGFyX2VuZCI6IjM4NSIsImJsb2JfbmFtZSI6ImVlOWE5ODZiZTkyNDU0MGQzZTQwM2VmNWRmOGY0OWQ4OTI1ZTFkOTM3YzBhZjIzYjJmY2Q4ZWE0ZTJiOGJiZTUiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJ0c2NvbmZpZy5qc29uIn19LHsiY2hhcl9zdGFydCI6IjAiLCJjaGFyX2VuZCI6Ijg2NiIsImJsb2JfbmFtZSI6ImFhYWY0N2QxMzFjNjJjOWFiNjBkZTY4OTEzZGFlZTExYWEyOTYwZjhjYzkxZDJlOTc3YmFmM2E3MTdkZmY5YmMiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJzcmMvbGliL3V0aWxzLnRzIn19LHsiY2hhcl9zdGFydCI6IjAiLCJjaGFyX2VuZCI6IjY2NyIsImJsb2JfbmFtZSI6IjMyMjA4ZmM0N2U3NWU2MzJmZTA2N2I0Y2MzNGJjNWEzYWFkNTk4YjRiOTZjYjY1OTkzMDVjNWUyZGU5N2UwYTEiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJzcmMvc3R5bGVzL2dsb2JhbC5jc3MifX0seyJjaGFyX3N0YXJ0IjoiMzc5NiIsImNoYXJfZW5kIjoiMzk0MyIsImJsb2JfbmFtZSI6IjMyMjA4ZmM0N2U3NWU2MzJmZTA2N2I0Y2MzNGJjNWEzYWFkNTk4YjRiOTZjYjY1OTkzMDVjNWUyZGU5N2UwYTEiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJzcmMvc3R5bGVzL2dsb2JhbC5jc3MifX0seyJjaGFyX3N0YXJ0IjoiMCIsImNoYXJfZW5kIjoiOTY3IiwiYmxvYl9uYW1lIjoiYjU2ZGE2ZjhlNDgwYzc4ZGVmYjQ0NTk4NDgyZTU2ZTRjZTEwMThiNGFlZmE4MGJkM2ZlNWM4ZGQ1MmU4YTEzMCIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6InRhaWx3aW5kLmNvbmZpZy5tanMifX0seyJjaGFyX3N0YXJ0IjoiMCIsImNoYXJfZW5kIjoiMTExIiwiYmxvYl9uYW1lIjoiOWEwOTU3YWFlMGU1MGExMzdhZWUwZTc4MTUyMjEwMzhmMzEwNDAzMWE1Y2EzNjgxNjlmNzQwNDU4OGQ5N2RhMSIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6Ii52c2NvZGUvZXh0ZW5zaW9ucy5qc29uIn19LHsiY2hhcl9zdGFydCI6IjAiLCJjaGFyX2VuZCI6IjM4NiIsImJsb2JfbmFtZSI6IjUwN2VhNmUzYWQ5ZmVmMmZjMGUyNjdjOGM3YzE4YjgwYmNlYzg1MjBhMTY2OWI5ZWE2MDAwN2YyMGZlNGUxNjgiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJzcmMvY29tcG9uZW50cy9rb2tvbnV0dWkvZXJyb3ItZ2VuZXJhdGlvbi50c3gifX0seyJjaGFyX3N0YXJ0IjoiMCIsImNoYXJfZW5kIjoiNjgzIiwiYmxvYl9uYW1lIjoiYmI0MGI0MGY0NDZjNzJlYmRjZTU3NTE1Nzk3ZDRmZjMxMDliNmFmNGU3OTAyZjk5MWNmY2ViOGVlYzcyZjU1YiIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6InNyYy9jb21wb25lbnRzL3VpL2Zvcm0udHN4In19LHsiY2hhcl9zdGFydCI6IjIxNjMiLCJjaGFyX2VuZCI6IjI5MDMiLCJibG9iX25hbWUiOiJiYjQwYjQwZjQ0NmM3MmViZGNlNTc1MTU3OTdkNGZmMzEwOWI2YWY0ZTc5MDJmOTkxY2ZjZWI4ZWVjNzJmNTViIiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoic3JjL2NvbXBvbmVudHMvdWkvZm9ybS50c3gifX0seyJjaGFyX3N0YXJ0IjoiMjkwMyIsImNoYXJfZW5kIjoiMzYwNCIsImJsb2JfbmFtZSI6ImJiNDBiNDBmNDQ2YzcyZWJkY2U1NzUxNTc5N2Q0ZmYzMTA5YjZhZjRlNzkwMmY5OTFjZmNlYjhlZWM3MmY1NWIiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJzcmMvY29tcG9uZW50cy91aS9mb3JtLnRzeCJ9fSx7ImNoYXJfc3RhcnQiOiIwIiwiY2hhcl9lbmQiOiI2MzgiLCJibG9iX25hbWUiOiIxODExNTRjNWM5N2M2ODc2NzQ5ZDEwZjExMmM4ZTkzNDNkNmU0Mjc2N2JkZTkxOTY0MjI3MjQ4MzMwNGIyYTlhIiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoic3JjL2NvbnRlbnQvYmxvZy8wMi1hc3Ryby1zcGhlcmUtZ2V0dGluZy1zdGFydGVkL2luZGV4Lm1kIn19LHsiY2hhcl9zdGFydCI6Ijc3OCIsImNoYXJfZW5kIjoiOTgzIiwiYmxvYl9uYW1lIjoiMGI0MjgyODNjYjMyMWRkZDQwNmIyMTQ3ODE3MDcwMjA4NTY4MmM3ZDk5NjkzMWJmZjZhZTg4Njg3ZmJmZDFjMCIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6ImFzdHJvLmNvbmZpZy5tanMifX0seyJjaGFyX3N0YXJ0IjoiMCIsImNoYXJfZW5kIjoiMjk2IiwiYmxvYl9uYW1lIjoiNzc2ZmZhM2RiMGY3OGVkYjNkZDcxZDM4MDc5MzI2OTg1MTNkYTY1OWIyZGExZGEzNTBhZTQxODM5MTUzNjdiYSIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6Ii5naXRpZ25vcmUifX1dfSx7InN0YXR1cyI6ImZhaWxlZCIsInJlcXVlc3RfaWQiOiI3NWZmYWZmMC1hYjYxLTRlNzYtYjAyZS0yYmFmZWM0NGQwOWQiLCJyZXF1ZXN0X21lc3NhZ2UiOiJNYWtlIHJlYWN0IGNvbXBvbmVudCBQcm9tcHRUZW1wbGF0ZUVkaXRvciBzbyB0aGF0IGl0IGFsbG93cyBmb3IgQ1JVRCBvcGVyYXRpb25zIGZvciBvYmplY3Qgb2YgdHlwZSBJUHJvbXB0VGVtcGxhdGUuIFVzZSB0aGUgYXBpIGVuZHBvaW50IGRlZmluZWQgaW4gc3JjL3BhZ2VzL2FwaS9wcm9tcHRzIGZvbGRlci4gVXNlIHNoYWRjbiBmb3JtIC50c3ggY29tcG9uZW50LiBNYWtlIGl0IGxvb2sgbmljZS4gTWFrZSBpdCByZXNwb25zaXZlLiIsInJpY2hfdGV4dF9qc29uX3JlcHIiOnsidHlwZSI6ImRvYyIsImNvbnRlbnQiOlt7InR5cGUiOiJwYXJhZ3JhcGgiLCJjb250ZW50IjpbeyJ0eXBlIjoidGV4dCIsInRleHQiOiJNYWtlIHJlYWN0IGNvbXBvbmVudCBQcm9tcHRUZW1wbGF0ZUVkaXRvciBzbyB0aGF0IGl0IGFsbG93cyBmb3IgQ1JVRCBvcGVyYXRpb25zIGZvciBvYmplY3Qgb2YgdHlwZSBJUHJvbXB0VGVtcGxhdGUuIFVzZSB0aGUgYXBpIGVuZHBvaW50IGRlZmluZWQgaW4gc3JjL3BhZ2VzL2FwaS9wcm9tcHRzIGZvbGRlci4gVXNlIHNoYWRjbiBmb3JtIC50c3ggY29tcG9uZW50LiBNYWtlIGl0IGxvb2sgbmljZS4gTWFrZSBpdCByZXNwb25zaXZlLiJ9XX1dfSwibWVudGlvbmVkX2l0ZW1zIjpbXSwic3RydWN0dXJlZF9vdXRwdXRfbm9kZXMiOltdLCJzZWVuX3N0YXRlIjoic2VlbiIsInJlc3BvbnNlX3RleHQiOiJJJ2xsIGNyZWF0ZSBhIGNvbXByZWhlbnNpdmUgYFByb21wdFRlbXBsYXRlRWRpdG9yYCBSZWFjdCBjb21wb25lbnQgdGhhdCBoYW5kbGVzIENSVUQgb3BlcmF0aW9ucyBmb3IgYElQcm9tcHRUZW1wbGF0ZWAgb2JqZWN0cy4gQmFzZWQgb24geW91ciBleGlzdGluZyBjb2RlLCBJJ2xsIHVzZSBzaGFkY24vdWkgY29tcG9uZW50cyBhbmQgZW5zdXJlIGl0J3MgcmVzcG9uc2l2ZS5cblxuYGBgYHRzeCBwYXRoPXNyYy9jb21wb25lbnRzL1Byb21wdFRlbXBsYXRlRWRpdG9yLnRzeCBtb2RlPUVESVRcbmltcG9ydCBSZWFjdCwgeyB1c2VTdGF0ZSwgdXNlRWZmZWN0IH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyB1c2VGb3JtIH0gZnJvbSBcInJlYWN0LWhvb2stZm9ybVwiO1xuaW1wb3J0IHsgem9kUmVzb2x2ZXIgfSBmcm9tIFwiQGhvb2tmb3JtL3Jlc29sdmVycy96b2RcIjtcbmltcG9ydCAqIGFzIHogZnJvbSBcInpvZFwiO1xuaW1wb3J0IHsgVHJhc2gyLCBTYXZlLCBQbHVzLCBBbGVydENpcmNsZSwgWCB9IGZyb20gXCJsdWNpZGUtcmVhY3RcIjtcbmltcG9ydCB0eXBlIHsgSVByb21wdFRlbXBsYXRlIH0gZnJvbSBcIkB0eXBlc1wiO1xuXG5pbXBvcnQge1xuICBGb3JtLFxuICBGb3JtQ29udHJvbCxcbiAgRm9ybURlc2NyaXB0aW9uLFxuICBGb3JtRmllbGQsXG4gIEZvcm1JdGVtLFxuICBGb3JtTGFiZWwsXG4gIEZvcm1NZXNzYWdlLFxufSBmcm9tIFwiQGNvbXBvbmVudHMvdWkvZm9ybVwiO1xuaW1wb3J0IHsgSW5wdXQgfSBmcm9tIFwiQGNvbXBvbmVudHMvdWkvaW5wdXRcIjtcbmltcG9ydCB7IEJ1dHRvbiB9IGZyb20gXCJAY29tcG9uZW50cy91aS9idXR0b25cIjtcbmltcG9ydCB7IFRleHRhcmVhIH0gZnJvbSBcIkBjb21wb25lbnRzL3VpL3RleHRhcmVhXCI7XG5pbXBvcnQge1xuICBDYXJkLFxuICBDYXJkQ29udGVudCxcbiAgQ2FyZERlc2NyaXB0aW9uLFxuICBDYXJkRm9vdGVyLFxuICBDYXJkSGVhZGVyLFxuICBDYXJkVGl0bGUsXG59IGZyb20gXCJAY29tcG9uZW50cy91aS9jYXJkXCI7XG5pbXBvcnQgeyBBbGVydCwgQWxlcnREZXNjcmlwdGlvbiwgQWxlcnRUaXRsZSB9IGZyb20gXCJAY29tcG9uZW50cy91aS9hbGVydFwiO1xuaW1wb3J0IHsgQmFkZ2UgfSBmcm9tIFwiQGNvbXBvbmVudHMvdWkvYmFkZ2VcIjtcbmltcG9ydCB7IFNlcGFyYXRvciB9IGZyb20gXCJAY29tcG9uZW50cy91aS9zZXBhcmF0b3JcIjtcbmltcG9ydCB7XG4gIERpYWxvZyxcbiAgRGlhbG9nQ29udGVudCxcbiAgRGlhbG9nRGVzY3JpcHRpb24sXG4gIERpYWxvZ0Zvb3RlcixcbiAgRGlhbG9nSGVhZGVyLFxuICBEaWFsb2dUaXRsZSxcbiAgRGlhbG9nVHJpZ2dlcixcbiAgRGlhbG9nQ2xvc2UsXG59IGZyb20gXCJAY29tcG9uZW50cy91aS9kaWFsb2dcIjtcblxuLy8gRGVmaW5lIHRoZSBmb3JtIHNjaGVtYSB1c2luZyB6b2RcbmNvbnN0IGZvcm1TY2hlbWEgPSB6Lm9iamVjdCh7XG4gIGlkOiB6LnN0cmluZygpLm9wdGlvbmFsKCksXG4gIG5hbWU6IHouc3RyaW5nKCkubWluKDEsIFwiTmFtZSBpcyByZXF1aXJlZFwiKSxcbiAgZGVzY3JpcHRpb246IHouc3RyaW5nKCkubWluKDEsIFwiRGVzY3JpcHRpb24gaXMgcmVxdWlyZWRcIiksXG4gIHN5c3RlbVByb21wdDogei5zdHJpbmcoKS5taW4oMSwgXCJTeXN0ZW0gcHJvbXB0IGlzIHJlcXVpcmVkXCIpLFxuICB0ZW1wbGF0ZTogei5zdHJpbmcoKS5taW4oMSwgXCJUZW1wbGF0ZSBpcyByZXF1aXJlZFwiKSxcbiAgdmFyaWFibGVzOiB6LmFycmF5KHouc3RyaW5nKCkpLm1pbigxLCBcIkF0IGxlYXN0IG9uZSB2YXJpYWJsZSBpcyByZXF1aXJlZFwiKSxcbiAgY3JlYXRlZF9hdDogei5zdHJpbmcoKS5vcHRpb25hbCgpLFxuICB1cGRhdGVkX2F0OiB6LnN0cmluZygpLm9wdGlvbmFsKCksXG59KTtcblxuaW50ZXJmYWNlIFByb21wdFRlbXBsYXRlRWRpdG9yUHJvcHMge1xuICBwcm9tcHRUZW1wbGF0ZT86IElQcm9tcHRUZW1wbGF0ZTtcbiAgb25TYXZlPzogKHRlbXBsYXRlOiBJUHJvbXB0VGVtcGxhdGUpID0+IHZvaWQ7XG4gIG9uRGVsZXRlPzogKGlkOiBzdHJpbmcpID0+IHZvaWQ7XG4gIG9uQ2FuY2VsPzogKCkgPT4gdm9pZDtcbn1cblxuY29uc3QgUHJvbXB0VGVtcGxhdGVFZGl0b3I6IFJlYWN0LkZDPFByb21wdFRlbXBsYXRlRWRpdG9yUHJvcHM+ID0gKHtcbiAgcHJvbXB0VGVtcGxhdGUsXG4gIG9uU2F2ZSxcbiAgb25EZWxldGUsXG4gIG9uQ2FuY2VsLFxufSkgPT4ge1xuICBjb25zdCBbaXNOZXcsIHNldElzTmV3XSA9IHVzZVN0YXRlKCFwcm9tcHRUZW1wbGF0ZT8uaWQpO1xuICBjb25zdCBbZXJyb3IsIHNldEVycm9yXSA9IHVzZVN0YXRlPHN0cmluZyB8IG51bGw+KG51bGwpO1xuICBjb25zdCBbc3VjY2Vzcywgc2V0U3VjY2Vzc10gPSB1c2VTdGF0ZTxzdHJpbmcgfCBudWxsPihudWxsKTtcbiAgY29uc3QgW2xvYWRpbmcsIHNldExvYWRpbmddID0gdXNlU3RhdGUoZmFsc2UpO1xuICBjb25zdCBbdmFyaWFibGVJbnB1dCwgc2V0VmFyaWFibGVJbnB1dF0gPSB1c2VTdGF0ZShcIlwiKTtcbiAgY29uc3QgW3Nob3dEZWxldGVEaWFsb2csIHNldFNob3dEZWxldGVEaWFsb2ddID0gdXNlU3RhdGUoZmFsc2UpO1xuICBjb25zdCBbZXh0cmFjdGVkVmFyaWFibGVzLCBzZXRFeHRyYWN0ZWRWYXJpYWJsZXNdID0gdXNlU3RhdGU8c3RyaW5nW10+KFtdKTtcblxuICAvLyBJbml0aWFsaXplIGZvcm0gd2l0aCBkZWZhdWx0IHZhbHVlcyBvciBwcm92aWRlZCBwcm9tcHRUZW1wbGF0ZVxuICBjb25zdCBmb3JtID0gdXNlRm9ybTx6LmluZmVyPHR5cGVvZiBmb3JtU2NoZW1hPj4oe1xuICAgIHJlc29sdmVyOiB6b2RSZXNvbHZlcihmb3JtU2NoZW1hKSxcbiAgICBkZWZhdWx0VmFsdWVzOiBwcm9tcHRUZW1wbGF0ZSB8fCB7XG4gICAgICBuYW1lOiBcIlwiLFxuICAgICAgZGVzY3JpcHRpb246IFwiXCIsXG4gICAgICBzeXN0ZW1Qcm9tcHQ6IFwiXCIsXG4gICAgICB0ZW1wbGF0ZTogXCJcIixcbiAgICAgIHZhcmlhYmxlczogW10sXG4gICAgfSxcbiAgfSk7XG5cbiAgLy8gUmVzZXQgZm9ybSB3aGVuIHByb21wdFRlbXBsYXRlIGNoYW5nZXNcbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBpZiAocHJvbXB0VGVtcGxhdGUpIHtcbiAgICAgIGZvcm0ucmVzZXQocHJvbXB0VGVtcGxhdGUpO1xuICAgICAgc2V0SXNOZXcoIXByb21wdFRlbXBsYXRlLmlkKTtcbiAgICB9IGVsc2Uge1xuICAgICAgZm9ybS5yZXNldCh7XG4gICAgICAgIG5hbWU6IFwiXCIsXG4gICAgICAgIGRlc2NyaXB0aW9uOiBcIlwiLFxuICAgICAgICBzeXN0ZW1Qcm9tcHQ6IFwiXCIsXG4gICAgICAgIHRlbXBsYXRlOiBcIlwiLFxuICAgICAgICB2YXJpYWJsZXM6IFtdLFxuICAgICAgfSk7XG4gICAgICBzZXRJc05ldyh0cnVlKTtcbiAgICB9XG4gIH0sIFtwcm9tcHRUZW1wbGF0ZSwgZm9ybV0pO1xuXG4gIC8vIEV4dHJhY3QgdmFyaWFibGVzIGZyb20gdGVtcGxhdGUgd2hlbiBpdCBjaGFuZ2VzXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgY29uc3QgdGVtcGxhdGUgPSBmb3JtLndhdGNoKFwidGVtcGxhdGVcIik7XG4gICAgaWYgKHRlbXBsYXRlKSB7XG4gICAgICBjb25zdCByZWdleCA9IC9cXHtcXHsoW159XSspXFx9XFx9L2c7XG4gICAgICBjb25zdCBtYXRjaGVzID0gWy4uLnRlbXBsYXRlLm1hdGNoQWxsKHJlZ2V4KV07XG4gICAgICBjb25zdCB2YXJzID0gbWF0Y2hlcy5tYXAobWF0Y2ggPT4gbWF0Y2hbMV0udHJpbSgpKTtcbiAgICAgIFxuICAgICAgLy8gUmVtb3ZlIGR1cGxpY2F0ZXNcbiAgICAgIGNvbnN0IHVuaXF1ZVZhcnMgPSBbLi4ubmV3IFNldCh2YXJzKV07XG4gICAgICBzZXRFeHRyYWN0ZWRWYXJpYWJsZXModW5pcXVlVmFycyk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHNldEV4dHJhY3RlZFZhcmlhYmxlcyhbXSk7XG4gICAgfVxuICB9LCBbZm9ybS53YXRjaChcInRlbXBsYXRlXCIpXSk7XG5cbiAgLy8gQWRkIGV4dHJhY3RlZCB2YXJpYWJsZXMgdG8gZm9ybVxuICBjb25zdCBhZGRFeHRyYWN0ZWRWYXJpYWJsZXMgPSAoKSA9PiB7XG4gICAgaWYgKGV4dHJhY3RlZFZhcmlhYmxlcy5sZW5ndGggPT09IDApIHJldHVybjtcbiAgICBcbiAgICBjb25zdCBjdXJyZW50VmFyaWFibGVzID0gZm9ybS5nZXRWYWx1ZXMoXCJ2YXJpYWJsZXNcIikgfHwgW107XG4gICAgY29uc3QgbmV3VmFyaWFibGVzID0gWy4uLmN1cnJlbnRWYXJpYWJsZXNdO1xuICAgIFxuICAgIGV4dHJhY3RlZFZhcmlhYmxlcy5mb3JFYWNoKHZhcmlhYmxlID0+IHtcbiAgICAgIGlmICghbmV3VmFyaWFibGVzLmluY2x1ZGVzKHZhcmlhYmxlKSkge1xuICAgICAgICBuZXdWYXJpYWJsZXMucHVzaCh2YXJpYWJsZSk7XG4gICAgICB9XG4gICAgfSk7XG4gICAgXG4gICAgZm9ybS5zZXRWYWx1ZShcInZhcmlhYmxlc1wiLCBuZXdWYXJpYWJsZXMpO1xuICB9O1xuXG4gIC8vIEhhbmRsZSBmb3JtIHN1Ym1pc3Npb25cbiAgY29uc3Qgb25TdWJtaXQgPSBhc3luYyAodmFsdWVzOiB6LmluZmVyPHR5cGVvZiBmb3JtU2NoZW1hPikgPT4ge1xuICAgIHNldExvYWRpbmcodHJ1ZSk7XG4gICAgc2V0RXJyb3IobnVsbCk7XG4gICAgc2V0U3VjY2VzcyhudWxsKTtcblxuICAgIHRyeSB7XG4gICAgICBsZXQgcmVzcG9uc2U7XG4gICAgICBsZXQgZGF0YTtcblxuICAgICAgaWYgKGlzTmV3KSB7XG4gICAgICAgIC8vIENyZWF0ZSBuZXcgcHJvbXB0IHRlbXBsYXRlXG4gICAgICAgIHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goXCIvYXBpL3Byb21wdHMvaW5kZXguanNvblwiLCB7XG4gICAgICAgICAgbWV0aG9kOiBcIlBPU1RcIixcbiAgICAgICAgICBoZWFkZXJzOiB7XG4gICAgICAgICAgICBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIixcbiAgICAgICAgICB9LFxuICAgICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHZhbHVlcyksXG4gICAgICAgIH0pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgLy8gVXBkYXRlIGV4aXN0aW5nIHByb21wdCB0ZW1wbGF0ZVxuICAgICAgICByZXNwb25zZSA9IGF3YWl0IGZldGNoKGAvYXBpL3Byb21wdHMvJHt2YWx1ZXMuaWR9Lmpzb25gLCB7XG4gICAgICAgICAgbWV0aG9kOiBcIlBVVFwiLFxuICAgICAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgICAgIFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiLFxuICAgICAgICAgIH0sXG4gICAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkodmFsdWVzKSxcbiAgICAgICAgfSk7XG4gICAgICB9XG5cbiAgICAgIGlmICghcmVzcG9uc2Uub2spIHtcbiAgICAgICAgY29uc3QgZXJyb3JEYXRhID0gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoZXJyb3JEYXRhLm1lc3NhZ2UgfHwgXCJGYWlsZWQgdG8gc2F2ZSBwcm9tcHQgdGVtcGxhdGVcIik7XG4gICAgICB9XG5cbiAgICAgIGRhdGEgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XG4gICAgICBzZXRTdWNjZXNzKFxuICAgICAgICBpc05ld1xuICAgICAgICAgID8gXCJQcm9tcHQgdGVtcGxhdGUgY3JlYXRlZCBzdWNjZXNzZnVsbHkhXCJcbiAgICAgICAgICA6IFwiUHJvbXB0IHRlbXBsYXRlIHVwZGF0ZWQgc3VjY2Vzc2Z1bGx5IVwiXG4gICAgICApO1xuXG4gICAgICBpZiAob25TYXZlKSB7XG4gICAgICAgIG9uU2F2ZShkYXRhKTtcbiAgICAgIH1cblxuICAgICAgaWYgKGlzTmV3KSB7XG4gICAgICAgIGZvcm0ucmVzZXQoZGF0YSk7XG4gICAgICAgIHNldElzTmV3KGZhbHNlKTtcbiAgICAgIH1cbiAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgIHNldEVycm9yKFxuICAgICAgICBlcnIgaW5zdGFuY2VvZiBFcnJvciA/IGVyci5tZXNzYWdlIDogXCJBbiB1bmtub3duIGVycm9yIG9jY3VycmVkXCJcbiAgICAgICk7XG4gICAgfSBmaW5hbGx5IHtcbiAgICAgIHNldExvYWRpbmcoZmFsc2UpO1xuICAgIH1cbiAgfTtcblxuICAvLyBIYW5kbGUgdGVtcGxhdGUgZGVsZXRpb25cbiAgY29uc3QgaGFuZGxlRGVsZXRlID0gYXN5bmMgKCkgPT4ge1xuICAgIGlmICghcHJvbXB0VGVtcGxhdGU/LmlkKSByZXR1cm47XG5cbiAgICBzZXRMb2FkaW5nKHRydWUpO1xuICAgIHNldEVycm9yKG51bGwpO1xuICAgIHNldFNob3dEZWxldGVEaWFsb2coZmFsc2UpO1xuXG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goYC9hcGkvcHJvbXB0cy8ke3Byb21wdFRlbXBsYXRlLmlkfS5qc29uYCwge1xuICAgICAgICBtZXRob2Q6IFwiREVMRVRFXCIsXG4gICAgICB9KTtcblxuICAgICAgaWYgKCFyZXNwb25zZS5vaykge1xuICAgICAgICBjb25zdCBlcnJvckRhdGEgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgICBlcnJvckRhdGEubWVzc2FnZSB8fCBcIkZhaWxlZCB0byBkZWxldGUgcHJvbXB0IHRlbXBsYXRlXCJcbiAgICAgICAgKTtcbiAgICAgIH1cblxuICAgICAgc2V0U3VjY2VzcyhcIlByb21wdCB0ZW1wbGF0ZSBkZWxldGVkIHN1Y2Nlc3NmdWxseSFcIik7XG5cbiAgICAgIGlmIChvbkRlbGV0ZSkge1xuICAgICAgICBvbkRlbGV0ZShwcm9tcHRUZW1wbGF0ZS5pZCk7XG4gICAgICB9XG5cbiAgICAgIGZvcm0ucmVzZXQoe1xuICAgICAgICBuYW1lOiBcIlwiLFxuICAgICAgICBkZXNjcmlwdGlvbjogXCJcIixcbiAgICAgICAgc3lzdGVtUHJvbXB0OiBcIlwiLFxuICAgICAgICB0ZW1wbGF0ZTogXCJcIixcbiAgICAgICAgdmFyaWFibGVzOiBbXSxcbiAgICAgIH0pO1xuICAgICAgc2V0SXNOZXcodHJ1ZSk7XG4gICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICBzZXRFcnJvcihcbiAgICAgICAgZXJyIGluc3RhbmNlb2YgRXJyb3IgPyBlcnIubWVzc2FnZSA6IFwiQW4gdW5rbm93biBlcnJvciBvY2N1cnJlZFwiXG4gICAgICApO1xuICAgIH0gZmluYWxseSB7XG4gICAgICBzZXRMb2FkaW5nKGZhbHNlKTtcbiAgICB9XG4gIH07XG5cbiAgLy8gSGFuZGxlIGFkZGluZyBhIG5ldyB2YXJpYWJsZVxuICBjb25zdCBhZGRWYXJpYWJsZSA9ICgpID0+IHtcbiAgICBpZiAoIXZhcmlhYmxlSW5wdXQudHJpbSgpKSByZXR1cm47XG5cbiAgICBjb25zdCBjdXJyZW50VmFyaWFibGVzID0gZm9ybS5nZXRWYWx1ZXMoXCJ2YXJpYWJsZXNcIikgfHwgW107XG4gICAgaWYgKCFjdXJyZW50VmFyaWFibGVzLmluY2x1ZGVzKHZhcmlhYmxlSW5wdXQudHJpbSgpKSkge1xuICAgICAgZm9ybS5zZXRWYWx1ZShcInZhcmlhYmxlc1wiLCBbLi4uY3VycmVudFZhcmlhYmxlcywgdmFyaWFibGVJbnB1dC50cmltKCldKTtcbiAgICB9XG4gICAgc2V0VmFyaWFibGVJbnB1dChcIlwiKTtcbiAgfTtcblxuICAvLyBIYW5kbGUgcmVtb3ZpbmcgYSB2YXJpYWJsZVxuICBjb25zdCByZW1vdmVWYXJpYWJsZSA9ICh2YXJpYWJsZTogc3RyaW5nKSA9PiB7XG4gICAgY29uc3QgY3VycmVudFZhcmlhYmxlcyA9IGZvcm0uZ2V0VmFsdWVzKFwidmFyaWFibGVzXCIpIHx8IFtdO1xuICAgIGZvcm0uc2V0VmFsdWUoXG4gICAgICBcInZhcmlhYmxlc1wiLFxuICAgICAgY3VycmVudFZhcmlhYmxlcy5maWx0ZXIoKHYpID0+IHYgIT09IHZhcmlhYmxlKVxuICAgICk7XG4gIH07XG5cbiAgcmV0dXJuIChcbiAgICA8Q2FyZCBjbGFzc05hbWU9XCJ3LWZ1bGxcIj5cbiAgICAgIDxDYXJkSGVhZGVyPlxuICAgICAgICA8Q2FyZFRpdGxlPlxuICAgICAgICAgIHtpc05ldyA/IFwiQ3JlYXRlIE5ldyBQcm9tcHQgVGVtcGxhdGVcIiA6IFwiRWRpdCBQcm9tcHQgVGVtcGxhdGVcIn1cbiAgICAgICAgPC9DYXJkVGl0bGU+XG4gICAgICAgIDxDYXJkRGVzY3JpcHRpb24+XG4gICAgICAgICAge2lzTmV3XG4gICAgICAgICAgICA/IFwiQ3JlYXRlIGEgbmV3IHByb21wdCB0ZW1wbGF0ZSBmb3IgQUkgZ2VuZXJhdGlvblwiXG4gICAgICAgICAgICA6IFwiRWRpdCB0aGUgc2VsZWN0ZWQgcHJvbXB0IHRlbXBsYXRlXCJ9XG4gICAgICAgIDwvQ2FyZERlc2NyaXB0aW9uPlxuICAgICAgPC9DYXJkSGVhZGVyPlxuICAgICAgPENhcmRDb250ZW50PlxuICAgICAgICB7ZXJyb3IgJiYgKFxuICAgICAgICAgIDxBbGVydCB2YXJpYW50PVwiZGVzdHJ1Y3RpdmVcIiBjbGFzc05hbWU9XCJtYi00XCI+XG4gICAgICAgICAgICA8QWxlcnRDaXJjbGUgY2xhc3NOYW1lPVwiaC00IHctNFwiIC8+XG4gICAgICAgICAgICA8QWxlcnRUaXRsZT5FcnJvcjwvQWxlcnRUaXRsZT5cbiAgICAgICAgICAgIDxBbGVydERlc2NyaXB0aW9uPntlcnJvcn08L0FsZXJ0RGVzY3JpcHRpb24+XG4gICAgICAgICAgPC9BbGVydD5cbiAgICAgICAgKX1cblxuICAgICAgICB7c3VjY2VzcyAmJiAoXG4gICAgICAgICAgPEFsZXJ0IGNsYXNzTmFtZT1cIm1iLTQgYm9yZGVyLWdyZWVuLTIwMCBiZy1ncmVlbi01MCB0ZXh0LWdyZWVuLTgwMFwiPlxuICAgICAgICAgICAgPEFsZXJ0VGl0bGU+U3VjY2VzczwvQWxlcnRUaXRsZT5cbiAgICAgICAgICAgIDxBbGVydERlc2NyaXB0aW9uPntzdWNjZXNzfTwvQWxlcnREZXNjcmlwdGlvbj5cbiAgICAgICAgICA8L0FsZXJ0PlxuICAgICAgICApfVxuXG4gICAgICAgIDxGb3JtIHsuLi5mb3JtfT5cbiAgICAgICAgICA8Zm9ybSBvblN1Ym1pdD17Zm9ybS5oYW5kbGVTdWJtaXQob25TdWJtaXQpfSBjbGFzc05hbWU9XCJzcGFjZS15LTZcIj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZ3JpZCBncmlkLWNvbHMtMSBnYXAtNCBtZDpncmlkLWNvbHMtMlwiPlxuICAgICAgICAgICAgICA8Rm9ybUZpZWxkXG4gICAgICAgICAgICAgICAgY29udHJvbD17Zm9ybS5jb250cm9sfVxuICAgICAgICAgICAgICAgIG5hbWU9XCJuYW1lXCJcbiAgICAgICAgICAgICAgICByZW5kZXI9eyh7IGZpZWxkIH0pID0+IChcbiAgICAgICAgICAgICAgICAgIDxGb3JtSXRlbT5cbiAgICAgICAgICAgICAgICAgICAgPEZvcm1MYWJlbD5OYW1lPC9Gb3JtTGFiZWw+XG4gICAgICAgICAgICAgICAgICAgIDxGb3JtQ29udHJvbD5cbiAgICAgICAgICAgICAgICAgICAgICA8SW5wdXRcbiAgICAgICAgICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyPVwiQ3JlYXRpdmUgV3JpdGluZyBBc3Npc3RhbnRcIlxuICAgICAgICAgICAgICAgICAgICAgICAgey4uLmZpZWxkfVxuICAgICAgICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgICAgIDwvRm9ybUNvbnRyb2w+XG4gICAgICAgICAgICAgICAgICAgIDxGb3JtRGVzY3JpcHRpb24+XG4gICAgICAgICAgICAgICAgICAgICAgQSBkZXNjcmlwdGl2ZSBuYW1lIGZvciB0aGlzIHByb21wdCB0ZW1wbGF0ZVxuICAgICAgICAgICAgICAgICAgICA8L0Zvcm1EZXNjcmlwdGlvbj5cbiAgICAgICAgICAgICAgICAgICAgPEZvcm1NZXNzYWdlIC8+XG4gICAgICAgICAgICAgICAgICA8L0Zvcm1JdGVtPlxuICAgICAgICAgICAgICAgICl9XG4gICAgICAgICAgICAgIC8+XG5cbiAgICAgICAgICAgICAgeyFpc05ldyAmJiAoXG4gICAgICAgICAgICAgICAgPEZvcm1GaWVsZFxuICAgICAgICAgICAgICAgICAgY29udHJvbD17Zm9ybS5jb250cm9sfVxuICAgICAgICAgICAgICAgICAgbmFtZT1cImlkXCJcbiAgICAgICAgICAgICAgICAgIHJlbmRlcj17KHsgZmllbGQgfSkgPT4gKFxuICAgICAgICAgICAgICAgICAgICA8Rm9ybUl0ZW0+XG4gICAgICAgICAgICAgICAgICAgICAgPEZvcm1MYWJlbD5JRDwvRm9ybUxhYmVsPlxuICAgICAgICAgICAgICAgICAgICAgIDxGb3JtQ29udHJvbD5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxJbnB1dCBkaXNhYmxlZCB7Li4uZmllbGR9IC8+XG4gICAgICAgICAgICAgICAgICAgICAgPC9Gb3JtQ29udHJvbD5cbiAgICAgICAgICAgICAgICAgICAgICA8Rm9ybURlc2NyaXB0aW9uPlxuICAgICAgICAgICAgICAgICAgICAgICAgVW5pcXVlIGlkZW50aWZpZXIgKGF1dG8tZ2VuZXJhdGVkKVxuICAgICAgICAgICAgICAgICAgICAgIDwvRm9ybURlc2NyaXB0aW9uPlxuICAgICAgICAgICAgICAgICAgICAgIDxGb3JtTWVzc2FnZSAvPlxuICAgICAgICAgICAgICAgICAgICA8L0Zvcm1JdGVtPlxuICAgICAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICApfVxuICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgIDxGb3JtRmllbGRcbiAgICAgICAgICAgICAgY29udHJvbD17Zm9ybS5jb250cm9sfVxuICAgICAgICAgICAgICBuYW1lPVwiZGVzY3JpcHRpb25cIlxuICAgICAgICAgICAgICByZW5kZXI9eyh7IGZpZWxkIH0pID0+IChcbiAgICAgICAgICAgICAgICA8Rm9ybUl0ZW0+XG4gICAgICAgICAgICAgICAgICA8Rm9ybUxhYmVsPkRlc2NyaXB0aW9uPC9Gb3JtTGFiZWw+XG4gICAgICAgICAgICAgICAgICA8Rm9ybUNvbnRyb2w+XG4gICAgICAgICAgICAgICAgICAgIDxUZXh0YXJlYVxuICAgICAgICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyPVwiSGVscHMgZ2VuZXJhdGUgY3JlYXRpdmUgd3JpdGluZyBwaWVjZXMuXCJcbiAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJyZXNpemUtbm9uZVwiXG4gICAgICAgICAgICAgICAgICAgICAgey4uLmZpZWxkfVxuICAgICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgICAgPC9Gb3JtQ29udHJvbD5cbiAgICAgICAgICAgICAgICAgIDxGb3JtRGVzY3JpcHRpb24+XG4gICAgICAgICAgICAgICAgICAgIEEgYnJpZWYgZXhwbGFuYXRpb24gb2Ygd2hhdCB0aGlzIHByb21wdCB0ZW1wbGF0ZSBkb2VzXG4gICAgICAgICAgICAgICAgICA8L0Zvcm1EZXNjcmlwdGlvbj5cbiAgICAgICAgICAgICAgICAgIDxGb3JtTWVzc2FnZSAvPlxuICAgICAgICAgICAgICAgIDwvRm9ybUl0ZW0+XG4gICAgICAgICAgICAgICl9XG4gICAgICAgICAgICAvPlxuXG4gICAgICAgICAgICA8Rm9ybUZpZWxkXG4gICAgICAgICAgICAgIGNvbnRyb2w9e2Zvcm0uY29udHJvbH1cbiAgICAgICAgICAgICAgbmFtZT1cInN5c3RlbVByb21wdFwiXG4gICAgICAgICAgICAgIHJlbmRlcj17KHsgZmllbGQgfSkgPT4gKFxuICAgICAgICAgICAgICAgIDxGb3JtSXRlbT5cbiAgICAgICAgICAgICAgICAgIDxGb3JtTGFiZWw+U3lzdGVtIFByb21wdDwvRm9ybUxhYmVsPlxuICAgICAgICAgICAgICAgICAgPEZvcm1Db250cm9sPlxuICAgICAgICAgICAgICAgICAgICA8VGV4dGFyZWFcbiAgICAgICAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcj1cIllvdSBhcmUgYSBjcmVhdGl2ZSB3cml0aW5nIGFzc2lzdGFudCB0aGF0IHByb3ZpZGVzIGltYWdpbmF0aXZlIHN1Z2dlc3Rpb25zLlwiXG4gICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwibWluLWgtWzEwMHB4XSByZXNpemUtbm9uZVwiXG4gICAgICAgICAgICAgICAgICAgICAgey4uLmZpZWxkfVxuICAgICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgICAgPC9Gb3JtQ29udHJvbD5cbiAgICAgICAgICAgICAgICAgIDxGb3JtRGVzY3JpcHRpb24+XG4gICAgICAgICAgICAgICAgICAgIFRoZSBzeXN0ZW0gcHJvbXB0IHRoYXQgZGVmaW5lcyB0aGUgQUkncyByb2xlIGFuZCBiZWhhdmlvclxuICAgICAgICAgICAgICAgICAgPC9Gb3JtRGVzY3JpcHRpb24+XG4gICAgICAgICAgICAgICAgICA8Rm9ybU1lc3NhZ2UgLz5cbiAgICAgICAgICAgICAgICA8L0Zvcm1JdGVtPlxuICAgICAgICAgICAgICApfVxuICAgICAgICAgICAgLz5cblxuICAgICAgICAgICAgPEZvcm1GaWVsZFxuICAgICAgICAgICAgICBjb250cm9sPXtmb3JtLmNvbnRyb2x9XG4gICAgICAgICAgICAgIG5hbWU9XCJ0ZW1wbGF0ZVwiXG4gICAgICAgICAgICAgIHJlbmRlcj17KHsgZmllbGQgfSkgPT4gKFxuICAgICAgICAgICAgICAgIDxGb3JtSXRlbT5cbiAgICAgICAgICAgICAgICAgIDxGb3JtTGFiZWw+VGVtcGxhdGU8L0Zvcm1MYWJlbD5cbiAgICAgICAgICAgICAgICAgIDxGb3JtQ29udHJvbD5cbiAgICAgICAgICAgICAgICAgICAgPFRleHRhcmVhXG4gICAgICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9XCJXcml0ZSBhIHNob3J0IHN0b3J5IGFib3V0IHt7Y2hhcmFjdGVyfX0gaW4gYSB7e3NldHRpbmd9fS5cIlxuICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cIm1pbi1oLVsxMDBweF0gcmVzaXplLW5vbmVcIlxuICAgICAgICAgICAgICAgICAgICAgIHsuLi5maWVsZH1cbiAgICAgICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICAgIDwvRm9ybUNvbnRyb2w+XG4gICAgICAgICAgICAgICAgICA8Rm9ybURlc2NyaXB0aW9uPlxuICAgICAgICAgICAgICAgICAgICBUaGUgdGVtcGxhdGUgd2l0aCB2YXJpYWJsZXMgaW4gZG91YmxlIGN1cmx5IGJyYWNlczoge1wie3tcIn0gdmFyaWFibGUge1wifX1cIn1cbiAgICAgICAgICAgICAgICAgIDwvRm9ybURlc2NyaXB0aW9uPlxuICAgICAgICAgICAgICAgICAgPEZvcm1NZXNzYWdlIC8+XG4gICAgICAgICAgICAgICAgPC9Gb3JtSXRlbT5cbiAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgIC8+XG5cbiAgICAgICAgICAgIDxkaXY+XG4gICAgICAgICAgICAgIDxGb3JtTGFiZWw+VmFyaWFibGVzPC9Gb3JtTGFiZWw+XG4gICAgICAgICAgICAgIFxuICAgICAgICAgICAgICB7ZXh0cmFjdGVkVmFyaWFibGVzLmxlbmd0aCA+IDAgJiYgKFxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibXQtMiBtYi0yXCI+XG4gICAgICAgICAgICAgICAgICA8QWxlcnQgY2xhc3NOYW1lPVwiYmctYmx1ZS01MFwiPlxuICAgICAgICAgICAgICAgICAgICA8QWxlcnRUaXRsZSBjbGFzc05hbWU9XCJmbGV4IGl0ZW1zLWNlbnRlciBnYXAtMlwiPlxuICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPlZhcmlhYmxlcyBkZXRlY3RlZCBpbiB0ZW1wbGF0ZTwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgICA8QnV0dG9uIFxuICAgICAgICAgICAgICAgICAgICAgICAgdHlwZT1cImJ1dHRvblwiIFxuICAgICAgICAgICAgICAgICAgICAgICAgdmFyaWFudD1cIm91dGxpbmVcIiBcbiAgICAgICAgICAgICAgICAgICAgICAgIHNpemU9XCJzbVwiXG4gICAgICAgICAgICAgICAgICAgICAgICBvbkNsaWNrPXthZGRFeHRyYWN0ZWRWYXJpYWJsZXN9XG4gICAgICAgICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICAgICAgQWRkIEFsbFxuICAgICAgICAgICAgICAgICAgICAgIDwvQnV0dG9uPlxuICAgICAgICAgICAgICAgICAgICA8L0FsZXJ0VGl0bGU+XG4gICAgICAgICAgICAgICAgICAgIDxBbGVydERlc2NyaXB0aW9uPlxuICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZmxleCBmbGV4LXdyYXAgZ2FwLTIgbXQtMVwiPlxuICAgICAgICAgICAgICAgICAgICAgICAge2V4dHJhY3RlZFZhcmlhYmxlcy5tYXAoKHZhcmlhYmxlKSA9PiAoXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDxCYWRnZSBrZXk9e3ZhcmlhYmxlfSB2YXJpYW50PVwib3V0bGluZVwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt2YXJpYWJsZX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgPC9CYWRnZT5cbiAgICAgICAgICAgICAgICAgICAgICAgICkpfVxuICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICA8L0FsZXJ0RGVzY3JpcHRpb24+XG4gICAgICAgICAgICAgICAgICA8L0FsZXJ0PlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICApfVxuICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJtdC0yIG1iLTQgZmxleCBmbGV4LXdyYXAgZ2FwLTJcIj5cbiAgICAgICAgICAgICAgICB7Zm9ybS53YXRjaChcInZhcmlhYmxlc1wiKT8ubWFwKCh2YXJpYWJsZSkgPT4gKFxuICAgICAgICAgICAgICAgICAgPEJhZGdlIGtleT17dmFyaWFibGV9IGNsYXNzTmFtZT1cImZsZXggaXRlbXMtY2VudGVyIGdhcC0xXCI+XG4gICAgICAgICAgICAgICAgICAgIHt2YXJpYWJsZX1cbiAgICAgICAgICAgICAgICAgICAgPGJ1dHRvblxuICAgICAgICAgICAgICAgICAgICAgIHR5cGU9XCJidXR0b25cIlxuICAgICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9eygpID0+IHJlbW92ZVZhcmlhYmxlKHZhcmlhYmxlKX1cbiAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJtbC0xIHRleHQteHMgaG92ZXI6dGV4dC1yZWQtNTAwXCJcbiAgICAgICAgICAgICAgICAgICAgICBhcmlhLWxhYmVsPXtgUmVtb3ZlICR7dmFyaWFibGV9IHZhcmlhYmxlYH1cbiAgICAgICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICAgIDxYIGNsYXNzTmFtZT1cImgtMyB3LTNcIiAvPlxuICAgICAgICAgICAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgICAgICAgICAgIDwvQmFkZ2U+XG4gICAgICAgICAgICAgICAgKSl9XG4gICAgICAgICAgICAgICAge2Zvcm0ud2F0Y2goXCJ2YXJpYWJsZXNcIik/Lmxlbmd0aCA9PT0gMCAmJiAoXG4gICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9XCJ0ZXh0LXNtIHRleHQtbXV0ZWQtZm9yZWdyb3VuZFwiPk5vIHZhcmlhYmxlcyBhZGRlZCB5ZXQ8L3NwYW4+XG4gICAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZmxleCBnYXAtMlwiPlxuICAgICAgICAgICAgICAgIDxJbnB1dFxuICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9XCJBZGQgYSB2YXJpYWJsZSAoZS5nLiBjaGFyYWN0ZXIpXCJcbiAgICAgICAgICAgICAgICAgIHZhbHVlPXt2YXJpYWJsZUlucHV0fVxuICAgICAgICAgICAgICAgICAgb25DaGFuZ2U9eyhlKSA9PiBzZXRWYXJpYWJsZUlucHV0KGUudGFyZ2V0LnZhbHVlKX1cbiAgICAgICAgICAgICAgICAgIG9uS2V5RG93bj17KGUpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGUua2V5ID09PSBcIkVudGVyXCIpIHtcbiAgICAgICAgICAgICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICAgICAgICAgICAgYWRkVmFyaWFibGUoKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgIDxCdXR0b24gXG4gICAgICAgICAgICAgICAgICB0eXBlPVwiYnV0dG9uXCIgXG4gICAgICAgICAgICAgICAgICBvbkNsaWNrPXthZGRWYXJpYWJsZX0gXG4gICAgICAgICAgICAgICAgICBzaXplPVwic21cIlxuICAgICAgICAgICAgICAgICAgZGlzYWJsZWQ9eyF2YXJpYWJsZUlucHV0LnRyaW0oKX1cbiAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICA8UGx1cyBjbGFzc05hbWU9XCJoLTQgdy00XCIgLz5cbiAgICAgICAgICAgICAgICAiLCJ3b3Jrc3BhY2VfZmlsZV9jaHVua3MiOlt7ImNoYXJfc3RhcnQiOiIwIiwiY2hhcl9lbmQiOiI4NjYiLCJibG9iX25hbWUiOiI5MDYxZTNhNzMyZjE2MWZiY2I5YTNhNWQwOTk2MTIwYTUwYTY4N2Q5ZjQyYmRlZGJkMWE3OGZjMWIwZTk0MDEwIiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoic3JjL2NvbXBvbmVudHMvUHJvbXB0VGVtcGxhdGVFZGl0b3IudHN4In19LHsiY2hhcl9zdGFydCI6Ijg2NiIsImNoYXJfZW5kIjoiMTg5MCIsImJsb2JfbmFtZSI6IjkwNjFlM2E3MzJmMTYxZmJjYjlhM2E1ZDA5OTYxMjBhNTBhNjg3ZDlmNDJiZGVkYmQxYTc4ZmMxYjBlOTQwMTAiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJzcmMvY29tcG9uZW50cy9Qcm9tcHRUZW1wbGF0ZUVkaXRvci50c3gifX0seyJjaGFyX3N0YXJ0IjoiMTg5MCIsImNoYXJfZW5kIjoiMjY0MCIsImJsb2JfbmFtZSI6IjkwNjFlM2E3MzJmMTYxZmJjYjlhM2E1ZDA5OTYxMjBhNTBhNjg3ZDlmNDJiZGVkYmQxYTc4ZmMxYjBlOTQwMTAiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJzcmMvY29tcG9uZW50cy9Qcm9tcHRUZW1wbGF0ZUVkaXRvci50c3gifX0seyJjaGFyX3N0YXJ0IjoiMjY0MCIsImNoYXJfZW5kIjoiMzQxNyIsImJsb2JfbmFtZSI6IjkwNjFlM2E3MzJmMTYxZmJjYjlhM2E1ZDA5OTYxMjBhNTBhNjg3ZDlmNDJiZGVkYmQxYTc4ZmMxYjBlOTQwMTAiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJzcmMvY29tcG9uZW50cy9Qcm9tcHRUZW1wbGF0ZUVkaXRvci50c3gifX0seyJjaGFyX3N0YXJ0IjoiMzQxNyIsImNoYXJfZW5kIjoiNDA2NiIsImJsb2JfbmFtZSI6IjkwNjFlM2E3MzJmMTYxZmJjYjlhM2E1ZDA5OTYxMjBhNTBhNjg3ZDlmNDJiZGVkYmQxYTc4ZmMxYjBlOTQwMTAiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJzcmMvY29tcG9uZW50cy9Qcm9tcHRUZW1wbGF0ZUVkaXRvci50c3gifX0seyJjaGFyX3N0YXJ0IjoiNDA2NiIsImNoYXJfZW5kIjoiNDc2NSIsImJsb2JfbmFtZSI6IjkwNjFlM2E3MzJmMTYxZmJjYjlhM2E1ZDA5OTYxMjBhNTBhNjg3ZDlmNDJiZGVkYmQxYTc4ZmMxYjBlOTQwMTAiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJzcmMvY29tcG9uZW50cy9Qcm9tcHRUZW1wbGF0ZUVkaXRvci50c3gifX0seyJjaGFyX3N0YXJ0IjoiNDc2NSIsImNoYXJfZW5kIjoiNTU4MSIsImJsb2JfbmFtZSI6IjkwNjFlM2E3MzJmMTYxZmJjYjlhM2E1ZDA5OTYxMjBhNTBhNjg3ZDlmNDJiZGVkYmQxYTc4ZmMxYjBlOTQwMTAiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJzcmMvY29tcG9uZW50cy9Qcm9tcHRUZW1wbGF0ZUVkaXRvci50c3gifX0seyJjaGFyX3N0YXJ0IjoiNTU4MSIsImNoYXJfZW5kIjoiNjQ3OCIsImJsb2JfbmFtZSI6IjkwNjFlM2E3MzJmMTYxZmJjYjlhM2E1ZDA5OTYxMjBhNTBhNjg3ZDlmNDJiZGVkYmQxYTc4ZmMxYjBlOTQwMTAiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJzcmMvY29tcG9uZW50cy9Qcm9tcHRUZW1wbGF0ZUVkaXRvci50c3gifX0seyJjaGFyX3N0YXJ0IjoiNjQ3OCIsImNoYXJfZW5kIjoiNzQ5NCIsImJsb2JfbmFtZSI6IjkwNjFlM2E3MzJmMTYxZmJjYjlhM2E1ZDA5OTYxMjBhNTBhNjg3ZDlmNDJiZGVkYmQxYTc4ZmMxYjBlOTQwMTAiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJzcmMvY29tcG9uZW50cy9Qcm9tcHRUZW1wbGF0ZUVkaXRvci50c3gifX0seyJjaGFyX3N0YXJ0IjoiNzQ5NCIsImNoYXJfZW5kIjoiODUwOCIsImJsb2JfbmFtZSI6IjkwNjFlM2E3MzJmMTYxZmJjYjlhM2E1ZDA5OTYxMjBhNTBhNjg3ZDlmNDJiZGVkYmQxYTc4ZmMxYjBlOTQwMTAiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJzcmMvY29tcG9uZW50cy9Qcm9tcHRUZW1wbGF0ZUVkaXRvci50c3gifX0seyJjaGFyX3N0YXJ0IjoiODUwOCIsImNoYXJfZW5kIjoiOTUyMSIsImJsb2JfbmFtZSI6IjkwNjFlM2E3MzJmMTYxZmJjYjlhM2E1ZDA5OTYxMjBhNTBhNjg3ZDlmNDJiZGVkYmQxYTc4ZmMxYjBlOTQwMTAiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJzcmMvY29tcG9uZW50cy9Qcm9tcHRUZW1wbGF0ZUVkaXRvci50c3gifX0seyJjaGFyX3N0YXJ0IjoiOTUyMSIsImNoYXJfZW5kIjoiMTA0NzkiLCJibG9iX25hbWUiOiI5MDYxZTNhNzMyZjE2MWZiY2I5YTNhNWQwOTk2MTIwYTUwYTY4N2Q5ZjQyYmRlZGJkMWE3OGZjMWIwZTk0MDEwIiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoic3JjL2NvbXBvbmVudHMvUHJvbXB0VGVtcGxhdGVFZGl0b3IudHN4In19LHsiY2hhcl9zdGFydCI6IjEwNDc5IiwiY2hhcl9lbmQiOiIxMTQ1OCIsImJsb2JfbmFtZSI6IjkwNjFlM2E3MzJmMTYxZmJjYjlhM2E1ZDA5OTYxMjBhNTBhNjg3ZDlmNDJiZGVkYmQxYTc4ZmMxYjBlOTQwMTAiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJzcmMvY29tcG9uZW50cy9Qcm9tcHRUZW1wbGF0ZUVkaXRvci50c3gifX0seyJjaGFyX3N0YXJ0IjoiMTE0NTgiLCJjaGFyX2VuZCI6IjEyNDIyIiwiYmxvYl9uYW1lIjoiOTA2MWUzYTczMmYxNjFmYmNiOWEzYTVkMDk5NjEyMGE1MGE2ODdkOWY0MmJkZWRiZDFhNzhmYzFiMGU5NDAxMCIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6InNyYy9jb21wb25lbnRzL1Byb21wdFRlbXBsYXRlRWRpdG9yLnRzeCJ9fSx7ImNoYXJfc3RhcnQiOiIxMjQyMiIsImNoYXJfZW5kIjoiMTMyMTYiLCJibG9iX25hbWUiOiI5MDYxZTNhNzMyZjE2MWZiY2I5YTNhNWQwOTk2MTIwYTUwYTY4N2Q5ZjQyYmRlZGJkMWE3OGZjMWIwZTk0MDEwIiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoic3JjL2NvbXBvbmVudHMvUHJvbXB0VGVtcGxhdGVFZGl0b3IudHN4In19LHsiY2hhcl9zdGFydCI6IjEzMjE2IiwiY2hhcl9lbmQiOiIxMzI3NCIsImJsb2JfbmFtZSI6IjkwNjFlM2E3MzJmMTYxZmJjYjlhM2E1ZDA5OTYxMjBhNTBhNjg3ZDlmNDJiZGVkYmQxYTc4ZmMxYjBlOTQwMTAiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJzcmMvY29tcG9uZW50cy9Qcm9tcHRUZW1wbGF0ZUVkaXRvci50c3gifX0seyJjaGFyX3N0YXJ0IjoiMCIsImNoYXJfZW5kIjoiODYwIiwiYmxvYl9uYW1lIjoiNGU0MTRiNzUwMTNhMGUzNjBmMGIwM2EzNTU2YjMyODgxOGRiYzQ3ODUyY2NjNmQ2ZjMyODBiZGYxNjhjMDc1ZCIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6InNyYy9jb21wb25lbnRzL1Byb21wdFRlbXBsYXRlTGlzdC50c3gifX0seyJjaGFyX3N0YXJ0IjoiMTc3NCIsImNoYXJfZW5kIjoiMjc5MiIsImJsb2JfbmFtZSI6IjRlNDE0Yjc1MDEzYTBlMzYwZjBiMDNhMzU1NmIzMjg4MThkYmM0Nzg1MmNjYzZkNmYzMjgwYmRmMTY4YzA3NWQiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJzcmMvY29tcG9uZW50cy9Qcm9tcHRUZW1wbGF0ZUxpc3QudHN4In19LHsiY2hhcl9zdGFydCI6IjM3NjciLCJjaGFyX2VuZCI6IjQzODEiLCJibG9iX25hbWUiOiI0ZTQxNGI3NTAxM2EwZTM2MGYwYjAzYTM1NTZiMzI4ODE4ZGJjNDc4NTJjY2M2ZDZmMzI4MGJkZjE2OGMwNzVkIiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoic3JjL2NvbXBvbmVudHMvUHJvbXB0VGVtcGxhdGVMaXN0LnRzeCJ9fSx7ImNoYXJfc3RhcnQiOiIwIiwiY2hhcl9lbmQiOiI5MDAiLCJibG9iX25hbWUiOiJlOTdiYWFhYWRlZmJhMWQ1ODY3YTU3ODU0NGZlODU1MTE1OWI3OTcyY2E0ZDk0ZTNhYTBiYjE4YTUyNWI1YzEzIiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoic3JjL3BhZ2VzL2Rldi9pbmRleC5hc3RybyJ9fSx7ImNoYXJfc3RhcnQiOiI1ODcxIiwiY2hhcl9lbmQiOiI2MTk1IiwiYmxvYl9uYW1lIjoiZTk3YmFhYWFkZWZiYTFkNTg2N2E1Nzg1NDRmZTg1NTExNTliNzk3MmNhNGQ5NGUzYWEwYmIxOGE1MjViNWMxMyIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6InNyYy9wYWdlcy9kZXYvaW5kZXguYXN0cm8ifX0seyJjaGFyX3N0YXJ0IjoiMTY2MCIsImNoYXJfZW5kIjoiMjUzMiIsImJsb2JfbmFtZSI6ImQxM2E5NDhjN2RmOGUwMmZjMmVkZGQwM2M4MTg5ZWM3NWY2YmMyYmRkMDkyNmVhNzk2MjExNTM1MDFiOTEzMjQiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJzcmMvcGFnZXMvYXBpL3Byb21wdHMvW2lkXS5qc29uLnRzIn19LHsiY2hhcl9zdGFydCI6IjAiLCJjaGFyX2VuZCI6IjgxNCIsImJsb2JfbmFtZSI6ImJkZmRhOTY2MGVkZTRjZjU3ZjU4NWViZWRlODI2ZDE2MmI3NjE2NzNhMGU4MGUxMzg2YWM5YTFhNDIwNWI4MjciLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJzcmMvbGliL3Byb21wdC10ZW1wbGF0ZS9wcm9tcHRUZW1wbGF0ZS1zY2hlbWEuanNvbiJ9fV19LHsic3RhdHVzIjoic3VjY2VzcyIsInJlcXVlc3RfaWQiOiJmOGU3MzYyOS0zZGI4LTQ2NzQtYTExMC01NzcyMmU4NjJkZTgiLCJyZXF1ZXN0X21lc3NhZ2UiOiJNYWtlIHRoZSBjaGFuZ2VzIHRvIHBhZ2VzL2Rldi9pbmRleC5hc3RybyBhZ2FpbiIsInJpY2hfdGV4dF9qc29uX3JlcHIiOnsidHlwZSI6ImRvYyIsImNvbnRlbnQiOlt7InR5cGUiOiJwYXJhZ3JhcGgiLCJjb250ZW50IjpbeyJ0eXBlIjoidGV4dCIsInRleHQiOiJNYWtlIHRoZSBjaGFuZ2VzIHRvIHBhZ2VzL2Rldi9pbmRleC5hc3RybyBhZ2FpbiJ9XX1dfSwibWVudGlvbmVkX2l0ZW1zIjpbXSwic3RydWN0dXJlZF9vdXRwdXRfbm9kZXMiOlt7ImlkIjowLCJ0eXBlIjowLCJjb250ZW50IjoiSSBhcG9sb2dpemUgZm9yIHRoZSBjb25mdXNpb24uIExldCBtZSBmaXggdGhlIGZvcm1hdHRpbmcgaXNzdWVzIGluIHRoZSBgc3JjL3BhZ2VzL2Rldi9pbmRleC5hc3Ryb2AgZmlsZSBzcGVjaWZpY2FsbHk6XG5cbjxhdWdtZW50X2NvZGVfc25pcHBldCBwYXRoPVwic3JjL3BhZ2VzL2Rldi9pbmRleC5hc3Ryb1wiIG1vZGU9XCJFRElUXCI+XG5gYGBhc3Ryb1xuLS0tXG5leHBvcnQgY29uc3QgcHJlcmVuZGVyID0gdHJ1ZTtcblxuaW1wb3J0IHsgZ2V0Q29sbGVjdGlvbiB9IGZyb20gXCJhc3Rybzpjb250ZW50XCI7XG5pbXBvcnQgUGFnZUxheW91dCBmcm9tIFwiQGxheW91dHMvUGFnZUxheW91dC5hc3Ryb1wiO1xuaW1wb3J0IFRvcExheW91dCBmcm9tIFwiQGxheW91dHMvVG9wTGF5b3V0LmFzdHJvXCI7XG5pbXBvcnQgQm90dG9tTGF5b3V0IGZyb20gXCJAbGF5b3V0cy9Cb3R0b21MYXlvdXQuYXN0cm9cIjtcbmltcG9ydCBBSUNhcmRHZW5lcmF0aW9uIGZyb20gXCJAY29tcG9uZW50cy9rb2tvbnV0dWkvYWktY2FyZC1nZW5lcmF0aW9uXCI7XG5pbXBvcnQgUHJvbXB0VGVtcGxhdGVFZGl0b3IgZnJvbSBcIkBjb21wb25lbnRzL1Byb21wdFRlbXBsYXRlRWRpdG9yXCI7XG5pbXBvcnQgUHJvbXB0VGVtcGxhdGVMaXN0IGZyb20gXCJAY29tcG9uZW50cy9Qcm9tcHRUZW1wbGF0ZUxpc3RcIjtcbmltcG9ydCB0eXBlIHsgSVByb21wdFRlbXBsYXRlIH0gZnJvbSBcIkB0eXBlc1wiO1xuXG5jb25zdCBpbml0aWFsUHJvbXB0VGVtcGxhdGU6IElQcm9tcHRUZW1wbGF0ZSA9IHtcbiAgaWQ6IFwib25lXCIsXG4gIG5hbWU6IFwiQ3JlYXRpdmUgV3JpdGluZyBBc3Npc3RhbnRcIixcbiAgZGVzY3JpcHRpb246IFwiSGVscHMgZ2VuZXJhdGUgY3JlYXRpdmUgd3JpdGluZyBwaWVjZXMuXCIsXG4gIHN5c3RlbVByb21wdDpcbiAgICBcIllvdSBhcmUgYSBjcmVhdGl2ZSB3cml0aW5nIGFzc2lzdGFudCB0aGF0IHByb3ZpZGVzIGltYWdpbmF0aXZlIHN1Z2dlc3Rpb25zLlwiLFxuICB0ZW1wbGF0ZTogXCJXcml0ZSBhIHNob3J0IHN0b3J5IGFib3V0IHt7Y2hhcmFjdGVyfX0gaW4gYSB7e3NldHRpbmd9fS5cIixcbiAgdmFyaWFibGVzOiBbXCJjaGFyYWN0ZXJcIiwgXCJzZXR0aW5nXCJdLFxuICBjcmVhdGVkX2F0OiBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCksXG4gIHVwZGF0ZWRfYXQ6IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKSxcbn07XG4tLS1cblxuPFBhZ2VMYXlvdXQgdGl0bGU9XCJEZXZlbG9wbWVudFwiIGRlc2NyaXB0aW9uPVwiRGV2ZWxvcG1lbnQgdG9vbHMgYW5kIHV0aWxpdGllc1wiPlxuICA8VG9wTGF5b3V0PlxuICAgIDxkaXYgY2xhc3M9XCJhbmltYXRlIHBhZ2UtaGVhZGluZ1wiPlxuICAgICAgRGV2ZWxvcG1lbnQgVG9vbHNcbiAgICA8L2Rpdj5cbiAgPC9Ub3BMYXlvdXQ+XG4gIDxCb3R0b21MYXlvdXQ+XG4gICAgPGRpdiBjbGFzcz1cImZsZXggZmxleC1jb2wgbWQ6ZmxleC1yb3cgZ2FwLTQgdy1mdWxsXCI+XG4gICAgICA8ZGl2IGNsYXNzPVwidy1mdWxsIG1kOnctMS8zXCI+XG4gICAgICAgIDxQcm9tcHRUZW1wbGF0ZUxpc3QgXG4gICAgICAgICAgY2xpZW50OmxvYWQgXG4gICAgICAgICAgb25TZWxlY3Q9eygpID0+IHt9fSBcbiAgICAgICAgICBvbk5ldz17KCkgPT4ge319XG4gICAgICAgIC8+XG4gICAgICA8L2Rpdj5cbiAgICAgIDxkaXYgY2xhc3M9XCJ3LWZ1bGwgbWQ6dy0yLzNcIj5cbiAgICAgICAgPFByb21wdFRlbXBsYXRlRWRpdG9yXG4gICAgICAgICAgY2xpZW50OmxvYWRcbiAgICAgICAgICBwcm9tcHRUZW1wbGF0ZT17aW5pdGlhbFByb21wdFRlbXBsYXRlfVxuICAgICAgICAgIG9uU2F2ZT17KHRlbXBsYXRlKSA9PiBjb25zb2xlLmxvZyhcIlNhdmVkIHRlbXBsYXRlOlwiLCB0ZW1wbGF0ZSl9XG4gICAgICAgIC8+XG4gICAgICA8L2Rpdj5cbiAgICA8L2Rpdj5cbiAgICBcbiAgICA8ZGl2IGNsYXNzPVwibXQtOFwiPlxuICAgICAgPGgyIGNsYXNzPVwidGV4dC0yeGwgZm9udC1ib2xkIG1iLTRcIj5BSSBDYXJkIEdlbmVyYXRpb248L2gyPlxuICAgICAgPEFJQ2FyZEdlbmVyYXRpb24gY2xpZW50OmxvYWQgLz5cbiAgICA8L2Rpdj5cbiAgPC9Cb3R0b21MYXlvdXQ+XG48L1BhZ2VMYXlvdXQ+XG5gYGBcbjwvYXVnbWVudF9jb2RlX3NuaXBwZXQ+XG5cbkkndmUgbWFkZSB0aGUgZm9sbG93aW5nIGltcHJvdmVtZW50cyB0byB0aGUgZmlsZTpcblxuMS4gUmVtb3ZlZCB0aGUgaW5saW5lIHNjcmlwdCB0aGF0IHdhcyBmZXRjaGluZyBmcm9tIGAvYXBpL2hlbGxvYFxuMi4gSW1wcm92ZWQgdGhlIGxheW91dCB3aXRoIHByb3BlciBUYWlsd2luZCBjbGFzc2VzIGZvciByZXNwb25zaXZlIGRlc2lnblxuMy4gQWRkZWQgcHJvcGVyIHByb3BzIHRvIHRoZSBgUHJvbXB0VGVtcGxhdGVMaXN0YCBjb21wb25lbnQgKGBvblNlbGVjdGAgYW5kIGBvbk5ld2ApXG40LiBBZGRlZCBhbiBgb25TYXZlYCBoYW5kbGVyIHRvIHRoZSBgUHJvbXB0VGVtcGxhdGVFZGl0b3JgXG41LiBJbXByb3ZlZCB0aGUgcGFnZSB0aXRsZSBhbmQgZGVzY3JpcHRpb25cbjYuIEFkZGVkIGEgc2VjdGlvbiBoZWFkZXIgZm9yIHRoZSBBSSBDYXJkIEdlbmVyYXRpb24gY29tcG9uZW50XG43LiBVc2VkIGBjbGllbnQ6bG9hZGAgaW5zdGVhZCBvZiBgY2xpZW50OnZpc2libGVgIGZvciBiZXR0ZXIgaW50ZXJhY3Rpdml0eVxuOC4gT3JnYW5pemVkIHRoZSBjb21wb25lbnRzIHdpdGggcHJvcGVyIHNwYWNpbmcgYW5kIHN0cnVjdHVyZVxuOS4gTWFkZSB0aGUgbGF5b3V0IHJlc3BvbnNpdmUgd2l0aCBhIGNvbHVtbiBsYXlvdXQgb24gbW9iaWxlIGFuZCByb3cgbGF5b3V0IG9uIGxhcmdlciBzY3JlZW5zXG5cblRoZSBwYWdlIG5vdyBoYXMgYSBjbGVhbmVyIHN0cnVjdHVyZSBhbmQgYmV0dGVyIGZvcm1hdHRpbmcgdGhhdCBmb2xsb3dzIG1vZGVybiB3ZWIgZGV2ZWxvcG1lbnQgcHJhY3RpY2VzLlxuIn0seyJpZCI6MiwidHlwZSI6MiwiY29udGVudCI6IiJ9LHsiaWQiOjMsInR5cGUiOjMsImNvbnRlbnQiOiJwYWNrYWdlLmpzb246MC05NDJcbnBhY2thZ2UuanNvbjoxODQ1LTIxMDZcbnNyYy9wYWdlcy9kZXYvaW5kZXguYXN0cm86MC05MzhcbnNyYy9wYWdlcy9kZXYvaW5kZXguYXN0cm86OTM4LTE5MzVcbnNyYy9wYWdlcy9kZXYvaW5kZXguYXN0cm86MTkzNS0yMTU5XG5SRUFETUUubWQ6MC05ODNcblJFQURNRS5tZDo5ODMtMTk2NVxuUkVBRE1FLm1kOjE5NjUtMjk2MlxuUkVBRE1FLm1kOjI5NjItMzAzOFxuYXN0cm8uY29uZmlnLm1qczowLTc3OFxuYXN0cm8uY29uZmlnLm1qczo3NzgtOTgzXG5zcmMvY29udGVudC9ibG9nLzAyLWFzdHJvLXNwaGVyZS1nZXR0aW5nLXN0YXJ0ZWQvaW5kZXgubWQ6MC02Mzhcbi52c2NvZGUvbGF1bmNoLmpzb246MC0yMDdcbnNyYy9jb250ZW50L2Jsb2cvMDEtYXN0cm8tc3BoZXJlLWZpbGUtc3RydWN0dXJlL2luZGV4Lm1kOjAtOTkwXG5zcmMvY29udGVudC9ibG9nLzAxLWFzdHJvLXNwaGVyZS1maWxlLXN0cnVjdHVyZS9pbmRleC5tZDo5OTAtMTk5MVxuc3JjL2NvbnRlbnQvYmxvZy8wMS1hc3Ryby1zcGhlcmUtZmlsZS1zdHJ1Y3R1cmUvaW5kZXgubWQ6MTk5MS0yMjg5XG5zcmMvY29tcG9uZW50cy9CYXNlSGVhZC5hc3RybzoxNTg2LTIzMTNcbnNyYy9wYWdlcy9pbmRleC5hc3RybzowLTk4N1xuc3JjL2NvbnRlbnQvYmxvZy8wMy1hc3Ryby1zcGhlcmUtYWRkLW5ldy1wb3N0LW9yLXByb2plY3RzL2luZGV4Lm1kOjI3NTYtMzA3OFxudGFpbHdpbmQuY29uZmlnLm1qczowLTk2N1xuc3JjL2NvbnRlbnQvcHJvamVjdHMvcHJvamVjdC0xL2luZGV4Lm1kOjAtOTEzXG5zcmMvbGF5b3V0cy9QYWdlTGF5b3V0LmFzdHJvOjAtODg3XG5zcmMvcGFnZXMvcHJvamVjdHMvaW5kZXguYXN0cm86MC05MjcifV0sInNlZW5fc3RhdGUiOiJzZWVuIiwicmVzcG9uc2VfdGV4dCI6IkkgYXBvbG9naXplIGZvciB0aGUgY29uZnVzaW9uLiBMZXQgbWUgZml4IHRoZSBmb3JtYXR0aW5nIGlzc3VlcyBpbiB0aGUgYHNyYy9wYWdlcy9kZXYvaW5kZXguYXN0cm9gIGZpbGUgc3BlY2lmaWNhbGx5OlxuXG5gYGBgYXN0cm8gcGF0aD1zcmMvcGFnZXMvZGV2L2luZGV4LmFzdHJvIG1vZGU9RURJVFxuLS0tXG5leHBvcnQgY29uc3QgcHJlcmVuZGVyID0gdHJ1ZTtcblxuaW1wb3J0IHsgZ2V0Q29sbGVjdGlvbiB9IGZyb20gXCJhc3Rybzpjb250ZW50XCI7XG5pbXBvcnQgUGFnZUxheW91dCBmcm9tIFwiQGxheW91dHMvUGFnZUxheW91dC5hc3Ryb1wiO1xuaW1wb3J0IFRvcExheW91dCBmcm9tIFwiQGxheW91dHMvVG9wTGF5b3V0LmFzdHJvXCI7XG5pbXBvcnQgQm90dG9tTGF5b3V0IGZyb20gXCJAbGF5b3V0cy9Cb3R0b21MYXlvdXQuYXN0cm9cIjtcbmltcG9ydCBBSUNhcmRHZW5lcmF0aW9uIGZyb20gXCJAY29tcG9uZW50cy9rb2tvbnV0dWkvYWktY2FyZC1nZW5lcmF0aW9uXCI7XG5pbXBvcnQgUHJvbXB0VGVtcGxhdGVFZGl0b3IgZnJvbSBcIkBjb21wb25lbnRzL1Byb21wdFRlbXBsYXRlRWRpdG9yXCI7XG5pbXBvcnQgUHJvbXB0VGVtcGxhdGVMaXN0IGZyb20gXCJAY29tcG9uZW50cy9Qcm9tcHRUZW1wbGF0ZUxpc3RcIjtcbmltcG9ydCB0eXBlIHsgSVByb21wdFRlbXBsYXRlIH0gZnJvbSBcIkB0eXBlc1wiO1xuXG5jb25zdCBpbml0aWFsUHJvbXB0VGVtcGxhdGU6IElQcm9tcHRUZW1wbGF0ZSA9IHtcbiAgaWQ6IFwib25lXCIsXG4gIG5hbWU6IFwiQ3JlYXRpdmUgV3JpdGluZyBBc3Npc3RhbnRcIixcbiAgZGVzY3JpcHRpb246IFwiSGVscHMgZ2VuZXJhdGUgY3JlYXRpdmUgd3JpdGluZyBwaWVjZXMuXCIsXG4gIHN5c3RlbVByb21wdDpcbiAgICBcIllvdSBhcmUgYSBjcmVhdGl2ZSB3cml0aW5nIGFzc2lzdGFudCB0aGF0IHByb3ZpZGVzIGltYWdpbmF0aXZlIHN1Z2dlc3Rpb25zLlwiLFxuICB0ZW1wbGF0ZTogXCJXcml0ZSBhIHNob3J0IHN0b3J5IGFib3V0IHt7Y2hhcmFjdGVyfX0gaW4gYSB7e3NldHRpbmd9fS5cIixcbiAgdmFyaWFibGVzOiBbXCJjaGFyYWN0ZXJcIiwgXCJzZXR0aW5nXCJdLFxuICBjcmVhdGVkX2F0OiBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCksXG4gIHVwZGF0ZWRfYXQ6IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKSxcbn07XG4tLS1cblxuPFBhZ2VMYXlvdXQgdGl0bGU9XCJEZXZlbG9wbWVudFwiIGRlc2NyaXB0aW9uPVwiRGV2ZWxvcG1lbnQgdG9vbHMgYW5kIHV0aWxpdGllc1wiPlxuICA8VG9wTGF5b3V0PlxuICAgIDxkaXYgY2xhc3M9XCJhbmltYXRlIHBhZ2UtaGVhZGluZ1wiPlxuICAgICAgRGV2ZWxvcG1lbnQgVG9vbHNcbiAgICA8L2Rpdj5cbiAgPC9Ub3BMYXlvdXQ+XG4gIDxCb3R0b21MYXlvdXQ+XG4gICAgPGRpdiBjbGFzcz1cImZsZXggZmxleC1jb2wgbWQ6ZmxleC1yb3cgZ2FwLTQgdy1mdWxsXCI+XG4gICAgICA8ZGl2IGNsYXNzPVwidy1mdWxsIG1kOnctMS8zXCI+XG4gICAgICAgIDxQcm9tcHRUZW1wbGF0ZUxpc3QgXG4gICAgICAgICAgY2xpZW50OmxvYWQgXG4gICAgICAgICAgb25TZWxlY3Q9eygpID0+IHt9fSBcbiAgICAgICAgICBvbk5ldz17KCkgPT4ge319XG4gICAgICAgIC8+XG4gICAgICA8L2Rpdj5cbiAgICAgIDxkaXYgY2xhc3M9XCJ3LWZ1bGwgbWQ6dy0yLzNcIj5cbiAgICAgICAgPFByb21wdFRlbXBsYXRlRWRpdG9yXG4gICAgICAgICAgY2xpZW50OmxvYWRcbiAgICAgICAgICBwcm9tcHRUZW1wbGF0ZT17aW5pdGlhbFByb21wdFRlbXBsYXRlfVxuICAgICAgICAgIG9uU2F2ZT17KHRlbXBsYXRlKSA9PiBjb25zb2xlLmxvZyhcIlNhdmVkIHRlbXBsYXRlOlwiLCB0ZW1wbGF0ZSl9XG4gICAgICAgIC8+XG4gICAgICA8L2Rpdj5cbiAgICA8L2Rpdj5cbiAgICBcbiAgICA8ZGl2IGNsYXNzPVwibXQtOFwiPlxuICAgICAgPGgyIGNsYXNzPVwidGV4dC0yeGwgZm9udC1ib2xkIG1iLTRcIj5BSSBDYXJkIEdlbmVyYXRpb248L2gyPlxuICAgICAgPEFJQ2FyZEdlbmVyYXRpb24gY2xpZW50OmxvYWQgLz5cbiAgICA8L2Rpdj5cbiAgPC9Cb3R0b21MYXlvdXQ+XG48L1BhZ2VMYXlvdXQ+XG5gYGBgXG5cbkkndmUgbWFkZSB0aGUgZm9sbG93aW5nIGltcHJvdmVtZW50cyB0byB0aGUgZmlsZTpcblxuMS4gUmVtb3ZlZCB0aGUgaW5saW5lIHNjcmlwdCB0aGF0IHdhcyBmZXRjaGluZyBmcm9tIGAvYXBpL2hlbGxvYFxuMi4gSW1wcm92ZWQgdGhlIGxheW91dCB3aXRoIHByb3BlciBUYWlsd2luZCBjbGFzc2VzIGZvciByZXNwb25zaXZlIGRlc2lnblxuMy4gQWRkZWQgcHJvcGVyIHByb3BzIHRvIHRoZSBgUHJvbXB0VGVtcGxhdGVMaXN0YCBjb21wb25lbnQgKGBvblNlbGVjdGAgYW5kIGBvbk5ld2ApXG40LiBBZGRlZCBhbiBgb25TYXZlYCBoYW5kbGVyIHRvIHRoZSBgUHJvbXB0VGVtcGxhdGVFZGl0b3JgXG41LiBJbXByb3ZlZCB0aGUgcGFnZSB0aXRsZSBhbmQgZGVzY3JpcHRpb25cbjYuIEFkZGVkIGEgc2VjdGlvbiBoZWFkZXIgZm9yIHRoZSBBSSBDYXJkIEdlbmVyYXRpb24gY29tcG9uZW50XG43LiBVc2VkIGBjbGllbnQ6bG9hZGAgaW5zdGVhZCBvZiBgY2xpZW50OnZpc2libGVgIGZvciBiZXR0ZXIgaW50ZXJhY3Rpdml0eVxuOC4gT3JnYW5pemVkIHRoZSBjb21wb25lbnRzIHdpdGggcHJvcGVyIHNwYWNpbmcgYW5kIHN0cnVjdHVyZVxuOS4gTWFkZSB0aGUgbGF5b3V0IHJlc3BvbnNpdmUgd2l0aCBhIGNvbHVtbiBsYXlvdXQgb24gbW9iaWxlIGFuZCByb3cgbGF5b3V0IG9uIGxhcmdlciBzY3JlZW5zXG5cblRoZSBwYWdlIG5vdyBoYXMgYSBjbGVhbmVyIHN0cnVjdHVyZSBhbmQgYmV0dGVyIGZvcm1hdHRpbmcgdGhhdCBmb2xsb3dzIG1vZGVybiB3ZWIgZGV2ZWxvcG1lbnQgcHJhY3RpY2VzLlxuIiwid29ya3NwYWNlX2ZpbGVfY2h1bmtzIjpbeyJjaGFyX3N0YXJ0IjoiMCIsImNoYXJfZW5kIjoiOTQyIiwiYmxvYl9uYW1lIjoiMTUzODY0ODNiZDJhNDQyN2QzM2QyMjMzMmI5NTZkZTRjYTU3ZTkyMTRmMDRmNTU4MzMyNGViMjg2YjRmOTVlYSIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6InBhY2thZ2UuanNvbiJ9fSx7ImNoYXJfc3RhcnQiOiIxODQ1IiwiY2hhcl9lbmQiOiIyMTA2IiwiYmxvYl9uYW1lIjoiMTUzODY0ODNiZDJhNDQyN2QzM2QyMjMzMmI5NTZkZTRjYTU3ZTkyMTRmMDRmNTU4MzMyNGViMjg2YjRmOTVlYSIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6InBhY2thZ2UuanNvbiJ9fSx7ImNoYXJfc3RhcnQiOiIwIiwiY2hhcl9lbmQiOiI5MzgiLCJibG9iX25hbWUiOiIxZDAxYjhiMjU2Y2U3ZTY1ODk1NmZkNzYwNGY1ZmQ2Nzk4M2JmZWVmNzgyY2QyNjc3ZmEyNTYyN2E5NTEyZTA2IiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoic3JjL3BhZ2VzL2Rldi9pbmRleC5hc3RybyJ9fSx7ImNoYXJfc3RhcnQiOiI5MzgiLCJjaGFyX2VuZCI6IjE5MzUiLCJibG9iX25hbWUiOiIxZDAxYjhiMjU2Y2U3ZTY1ODk1NmZkNzYwNGY1ZmQ2Nzk4M2JmZWVmNzgyY2QyNjc3ZmEyNTYyN2E5NTEyZTA2IiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoic3JjL3BhZ2VzL2Rldi9pbmRleC5hc3RybyJ9fSx7ImNoYXJfc3RhcnQiOiIxOTM1IiwiY2hhcl9lbmQiOiIyMTU5IiwiYmxvYl9uYW1lIjoiMWQwMWI4YjI1NmNlN2U2NTg5NTZmZDc2MDRmNWZkNjc5ODNiZmVlZjc4MmNkMjY3N2ZhMjU2MjdhOTUxMmUwNiIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6InNyYy9wYWdlcy9kZXYvaW5kZXguYXN0cm8ifX0seyJjaGFyX3N0YXJ0IjoiMCIsImNoYXJfZW5kIjoiOTgzIiwiYmxvYl9uYW1lIjoiYTEzYzNjNjE3N2UzNjliYmIwMjBlZTU2NGFkYWJkM2Q1ZDk4NzNlNWFmOTJiZmVmNjM2ZGM5OWIzZTkxOWJhOSIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6IlJFQURNRS5tZCJ9fSx7ImNoYXJfc3RhcnQiOiI5ODMiLCJjaGFyX2VuZCI6IjE5NjUiLCJibG9iX25hbWUiOiJhMTNjM2M2MTc3ZTM2OWJiYjAyMGVlNTY0YWRhYmQzZDVkOTg3M2U1YWY5MmJmZWY2MzZkYzk5YjNlOTE5YmE5IiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoiUkVBRE1FLm1kIn19LHsiY2hhcl9zdGFydCI6IjE5NjUiLCJjaGFyX2VuZCI6IjI5NjIiLCJibG9iX25hbWUiOiJhMTNjM2M2MTc3ZTM2OWJiYjAyMGVlNTY0YWRhYmQzZDVkOTg3M2U1YWY5MmJmZWY2MzZkYzk5YjNlOTE5YmE5IiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoiUkVBRE1FLm1kIn19LHsiY2hhcl9zdGFydCI6IjI5NjIiLCJjaGFyX2VuZCI6IjMwMzgiLCJibG9iX25hbWUiOiJhMTNjM2M2MTc3ZTM2OWJiYjAyMGVlNTY0YWRhYmQzZDVkOTg3M2U1YWY5MmJmZWY2MzZkYzk5YjNlOTE5YmE5IiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoiUkVBRE1FLm1kIn19LHsiY2hhcl9zdGFydCI6IjAiLCJjaGFyX2VuZCI6Ijc3OCIsImJsb2JfbmFtZSI6IjBiNDI4MjgzY2IzMjFkZGQ0MDZiMjE0NzgxNzA3MDIwODU2ODJjN2Q5OTY5MzFiZmY2YWU4ODY4N2ZiZmQxYzAiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJhc3Ryby5jb25maWcubWpzIn19LHsiY2hhcl9zdGFydCI6Ijc3OCIsImNoYXJfZW5kIjoiOTgzIiwiYmxvYl9uYW1lIjoiMGI0MjgyODNjYjMyMWRkZDQwNmIyMTQ3ODE3MDcwMjA4NTY4MmM3ZDk5NjkzMWJmZjZhZTg4Njg3ZmJmZDFjMCIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6ImFzdHJvLmNvbmZpZy5tanMifX0seyJjaGFyX3N0YXJ0IjoiMCIsImNoYXJfZW5kIjoiNjM4IiwiYmxvYl9uYW1lIjoiMTgxMTU0YzVjOTdjNjg3Njc0OWQxMGYxMTJjOGU5MzQzZDZlNDI3NjdiZGU5MTk2NDIyNzI0ODMzMDRiMmE5YSIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6InNyYy9jb250ZW50L2Jsb2cvMDItYXN0cm8tc3BoZXJlLWdldHRpbmctc3RhcnRlZC9pbmRleC5tZCJ9fSx7ImNoYXJfc3RhcnQiOiIwIiwiY2hhcl9lbmQiOiIyMDciLCJibG9iX25hbWUiOiI3YjEwMzlmN2E1NzM3OWUzYTZjZjViYjZkNDZmODRmYzhjNzkwYzI0NTM4ZmVjOGQzMDIyZTViYTgyNzQ0MGQ2IiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoiLnZzY29kZS9sYXVuY2guanNvbiJ9fSx7ImNoYXJfc3RhcnQiOiIwIiwiY2hhcl9lbmQiOiI5OTAiLCJibG9iX25hbWUiOiIxMjQ4OTZlMjZkZGI3YWZmMzhlYTMzNTQ4ODAwNmZmZDdiMTNkN2YwYjg3OTc1M2I3YTlmNDcxMGRmODg3MTk5IiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoic3JjL2NvbnRlbnQvYmxvZy8wMS1hc3Ryby1zcGhlcmUtZmlsZS1zdHJ1Y3R1cmUvaW5kZXgubWQifX0seyJjaGFyX3N0YXJ0IjoiOTkwIiwiY2hhcl9lbmQiOiIxOTkxIiwiYmxvYl9uYW1lIjoiMTI0ODk2ZTI2ZGRiN2FmZjM4ZWEzMzU0ODgwMDZmZmQ3YjEzZDdmMGI4Nzk3NTNiN2E5ZjQ3MTBkZjg4NzE5OSIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6InNyYy9jb250ZW50L2Jsb2cvMDEtYXN0cm8tc3BoZXJlLWZpbGUtc3RydWN0dXJlL2luZGV4Lm1kIn19LHsiY2hhcl9zdGFydCI6IjE5OTEiLCJjaGFyX2VuZCI6IjIyODkiLCJibG9iX25hbWUiOiIxMjQ4OTZlMjZkZGI3YWZmMzhlYTMzNTQ4ODAwNmZmZDdiMTNkN2YwYjg3OTc1M2I3YTlmNDcxMGRmODg3MTk5IiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoic3JjL2NvbnRlbnQvYmxvZy8wMS1hc3Ryby1zcGhlcmUtZmlsZS1zdHJ1Y3R1cmUvaW5kZXgubWQifX0seyJjaGFyX3N0YXJ0IjoiMTU4NiIsImNoYXJfZW5kIjoiMjMxMyIsImJsb2JfbmFtZSI6IjA1YWMxMGY2Y2Q5YmJkMDlkNzIzNTNjYmJiMjNjZjAyNGJhY2JhMmI2NTQwMzMyNDNlMDY0MmMzNWZhY2Q2ZTUiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJzcmMvY29tcG9uZW50cy9CYXNlSGVhZC5hc3RybyJ9fSx7ImNoYXJfc3RhcnQiOiIwIiwiY2hhcl9lbmQiOiI5ODciLCJibG9iX25hbWUiOiIyZjVjOGE0YjMxYTQzMWUzNzJkYzFiOTc5YjU0NzIzMmQyNDkzOTFkMDdlMjFmZWVlMjA3ZjM2OTNmZDdhNDY3IiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoic3JjL3BhZ2VzL2luZGV4LmFzdHJvIn19LHsiY2hhcl9zdGFydCI6IjI3NTYiLCJjaGFyX2VuZCI6IjMwNzgiLCJibG9iX25hbWUiOiI2MDdjYmJiYWU2YTc4ODI4ODAyMDlhZjAzODQ1MzI3NWRkMDJhYTUyOGVjMGYzZDA2NjM3NGEzYzA3ZTljMGYxIiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoic3JjL2NvbnRlbnQvYmxvZy8wMy1hc3Ryby1zcGhlcmUtYWRkLW5ldy1wb3N0LW9yLXByb2plY3RzL2luZGV4Lm1kIn19LHsiY2hhcl9zdGFydCI6IjAiLCJjaGFyX2VuZCI6Ijk2NyIsImJsb2JfbmFtZSI6ImI1NmRhNmY4ZTQ4MGM3OGRlZmI0NDU5ODQ4MmU1NmU0Y2UxMDE4YjRhZWZhODBiZDNmZTVjOGRkNTJlOGExMzAiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJ0YWlsd2luZC5jb25maWcubWpzIn19LHsiY2hhcl9zdGFydCI6IjAiLCJjaGFyX2VuZCI6IjkxMyIsImJsb2JfbmFtZSI6ImQ5YWYyNjhiNDZkODlmNzQyNmU1NDk5OTI1Mjk4YTIxM2MyNjJiNWUyYTI1YTRmNTMzYmY3MzJkNTk2NDVhODAiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJzcmMvY29udGVudC9wcm9qZWN0cy9wcm9qZWN0LTEvaW5kZXgubWQifX0seyJjaGFyX3N0YXJ0IjoiMCIsImNoYXJfZW5kIjoiODg3IiwiYmxvYl9uYW1lIjoiMTFiNGI2NzYzMGNlNjk1Y2E1ZWJhNDEwMDhjNTc3NjQ1MjI5MDcxN2E3YzAxYTg3NjI5ZDljMDQ3YzJlODczYSIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6InNyYy9sYXlvdXRzL1BhZ2VMYXlvdXQuYXN0cm8ifX0seyJjaGFyX3N0YXJ0IjoiMCIsImNoYXJfZW5kIjoiOTI3IiwiYmxvYl9uYW1lIjoiMjkxZWU1ODk0NDljNmM5YzRhYTE5YzRjYjZjZmZiYzczMGJhMWVhMDI1YzdlYTVjMzg3YzUyODllZGU2MzVjNyIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6InNyYy9wYWdlcy9wcm9qZWN0cy9pbmRleC5hc3RybyJ9fV19LHsic3RhdHVzIjoic3VjY2VzcyIsInJlcXVlc3RfaWQiOiI3MzhjNDVlNC1jZTMxLTRlYmItYTM4MC1iOWE3NjFhZjJkMGEiLCJyZXF1ZXN0X21lc3NhZ2UiOiJDcmVhdGUgbmV3IFJlYWN0IGNvbXBvbmVudCBQcm9tcHRUZW1wbGF0ZXMgZnJvbSBzZWxlY3Rpb24uIEl0J3MgcHVycG9zZSBpcyB0byBldmVudCBhbmQgY2xpY2sgaGFuZGxlcnMgZnJvbSBQcm9tcHRUZW1wbGF0ZUxpc3QgYW5kIFByb21wdFRlbXBsYXRlRWRpdG9yIiwicmljaF90ZXh0X2pzb25fcmVwciI6eyJ0eXBlIjoiZG9jIiwiY29udGVudCI6W3sidHlwZSI6InBhcmFncmFwaCIsImNvbnRlbnQiOlt7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IkNyZWF0ZSBuZXcgUmVhY3QgY29tcG9uZW50IFByb21wdFRlbXBsYXRlcyBmcm9tIHNlbGVjdGlvbi4gSXQncyBwdXJwb3NlIGlzIHRvIGV2ZW50IGFuZCBjbGljayBoYW5kbGVycyBmcm9tIFByb21wdFRlbXBsYXRlTGlzdCBhbmQgUHJvbXB0VGVtcGxhdGVFZGl0b3IifV19XX0sIm1lbnRpb25lZF9pdGVtcyI6W10sInN0cnVjdHVyZWRfb3V0cHV0X25vZGVzIjpbeyJpZCI6MCwidHlwZSI6MCwiY29udGVudCI6IkknbGwgY3JlYXRlIGEgbmV3IFJlYWN0IGNvbXBvbmVudCBjYWxsZWQgYFByb21wdFRlbXBsYXRlc2AgdGhhdCB3aWxsIG1hbmFnZSB0aGUgaW50ZXJhY3Rpb24gYmV0d2VlbiBgUHJvbXB0VGVtcGxhdGVMaXN0YCBhbmQgYFByb21wdFRlbXBsYXRlRWRpdG9yYDpcblxuPGF1Z21lbnRfY29kZV9zbmlwcGV0IHBhdGg9XCJzcmMvY29tcG9uZW50cy9Qcm9tcHRUZW1wbGF0ZXMudHN4XCIgbW9kZT1cIkVESVRcIj5cbmBgYHRzeFxuaW1wb3J0IFJlYWN0LCB7IHVzZVN0YXRlIH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgUHJvbXB0VGVtcGxhdGVMaXN0IGZyb20gXCJAY29tcG9uZW50cy9Qcm9tcHRUZW1wbGF0ZUxpc3RcIjtcbmltcG9ydCBQcm9tcHRUZW1wbGF0ZUVkaXRvciBmcm9tIFwiQGNvbXBvbmVudHMvUHJvbXB0VGVtcGxhdGVFZGl0b3JcIjtcbmltcG9ydCB0eXBlIHsgSVByb21wdFRlbXBsYXRlIH0gZnJvbSBcIkB0eXBlc1wiO1xuXG5pbnRlcmZhY2UgUHJvbXB0VGVtcGxhdGVzUHJvcHMge1xuICBpbml0aWFsVGVtcGxhdGU/OiBJUHJvbXB0VGVtcGxhdGU7XG59XG5cbmNvbnN0IFByb21wdFRlbXBsYXRlczogUmVhY3QuRkM8UHJvbXB0VGVtcGxhdGVzUHJvcHM+ID0gKHsgaW5pdGlhbFRlbXBsYXRlIH0pID0+IHtcbiAgY29uc3QgW3NlbGVjdGVkVGVtcGxhdGUsIHNldFNlbGVjdGVkVGVtcGxhdGVdID0gdXNlU3RhdGU8SVByb21wdFRlbXBsYXRlIHwgdW5kZWZpbmVkPihpbml0aWFsVGVtcGxhdGUpO1xuICBjb25zdCBbc2VsZWN0ZWRJZCwgc2V0U2VsZWN0ZWRJZF0gPSB1c2VTdGF0ZTxzdHJpbmcgfCB1bmRlZmluZWQ+KGluaXRpYWxUZW1wbGF0ZT8uaWQpO1xuXG4gIC8vIEhhbmRsZSB0ZW1wbGF0ZSBzZWxlY3Rpb24gZnJvbSB0aGUgbGlzdFxuICBjb25zdCBoYW5kbGVTZWxlY3RUZW1wbGF0ZSA9ICh0ZW1wbGF0ZTogSVByb21wdFRlbXBsYXRlKSA9PiB7XG4gICAgc2V0U2VsZWN0ZWRUZW1wbGF0ZSh0ZW1wbGF0ZSk7XG4gICAgc2V0U2VsZWN0ZWRJZCh0ZW1wbGF0ZS5pZCk7XG4gIH07XG5cbiAgLy8gSGFuZGxlIGNyZWF0aW5nIGEgbmV3IHRlbXBsYXRlXG4gIGNvbnN0IGhhbmRsZU5ld1RlbXBsYXRlID0gKCkgPT4ge1xuICAgIGNvbnN0IG5ld1RlbXBsYXRlOiBJUHJvbXB0VGVtcGxhdGUgPSB7XG4gICAgICBpZDogXCJcIixcbiAgICAgIG5hbWU6IFwiXCIsXG4gICAgICBkZXNjcmlwdGlvbjogXCJcIixcbiAgICAgIHN5c3RlbVByb21wdDogXCJcIixcbiAgICAgIHRlbXBsYXRlOiBcIlwiLFxuICAgICAgdmFyaWFibGVzOiBbXSxcbiAgICAgIGNyZWF0ZWRfYXQ6IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKSxcbiAgICAgIHVwZGF0ZWRfYXQ6IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKSxcbiAgICB9O1xuICAgIHNldFNlbGVjdGVkVGVtcGxhdGUobmV3VGVtcGxhdGUpO1xuICAgIHNldFNlbGVjdGVkSWQodW5kZWZpbmVkKTtcbiAgfTtcblxuICAvLyBIYW5kbGUgc2F2aW5nIGEgdGVtcGxhdGVcbiAgY29uc3QgaGFuZGxlU2F2ZVRlbXBsYXRlID0gKHRlbXBsYXRlOiBJUHJvbXB0VGVtcGxhdGUpID0+IHtcbiAgICBzZXRTZWxlY3RlZFRlbXBsYXRlKHRlbXBsYXRlKTtcbiAgICBzZXRTZWxlY3RlZElkKHRlbXBsYXRlLmlkKTtcbiAgICAvLyBSZWZyZXNoIHRoZSBsaXN0IGFmdGVyIHNhdmluZ1xuICB9O1xuXG4gIC8vIEhhbmRsZSBkZWxldGluZyBhIHRlbXBsYXRlXG4gIGNvbnN0IGhhbmRsZURlbGV0ZVRlbXBsYXRlID0gKGlkOiBzdHJpbmcpID0+IHtcbiAgICBzZXRTZWxlY3RlZFRlbXBsYXRlKHVuZGVmaW5lZCk7XG4gICAgc2V0U2VsZWN0ZWRJZCh1bmRlZmluZWQpO1xuICAgIC8vIFJlZnJlc2ggdGhlIGxpc3QgYWZ0ZXIgZGVsZXRpbmdcbiAgfTtcblxuICByZXR1cm4gKFxuICAgIDxkaXYgY2xhc3NOYW1lPVwiZmxleCBmbGV4LWNvbCBtZDpmbGV4LXJvdyBnYXAtNCB3LWZ1bGxcIj5cbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwidy1mdWxsIG1kOnctMS8zXCI+XG4gICAgICAgIDxQcm9tcHRUZW1wbGF0ZUxpc3RcbiAgICAgICAgICBvblNlbGVjdD17aGFuZGxlU2VsZWN0VGVtcGxhdGV9XG4gICAgICAgICAgb25OZXc9e2hhbmRsZU5ld1RlbXBsYXRlfVxuICAgICAgICAgIHNlbGVjdGVkSWQ9e3NlbGVjdGVkSWR9XG4gICAgICAgIC8+XG4gICAgICA8L2Rpdj5cbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwidy1mdWxsIG1kOnctMi8zXCI+XG4gICAgICAgIHtzZWxlY3RlZFRlbXBsYXRlICYmIChcbiAgICAgICAgICA8UHJvbXB0VGVtcGxhdGVFZGl0b3JcbiAgICAgICAgICAgIHByb21wdFRlbXBsYXRlPXtzZWxlY3RlZFRlbXBsYXRlfVxuICAgICAgICAgICAgb25TYXZlPXtoYW5kbGVTYXZlVGVtcGxhdGV9XG4gICAgICAgICAgICBvbkRlbGV0ZT17aGFuZGxlRGVsZXRlVGVtcGxhdGV9XG4gICAgICAgICAgICBvbkNhbmNlbD17KCkgPT4gc2V0U2VsZWN0ZWRUZW1wbGF0ZSh1bmRlZmluZWQpfVxuICAgICAgICAgIC8+XG4gICAgICAgICl9XG4gICAgICA8L2Rpdj5cbiAgICA8L2Rpdj5cbiAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IFByb21wdFRlbXBsYXRlcztcbmBgYFxuPC9hdWdtZW50X2NvZGVfc25pcHBldD5cblxuTm93LCBsZXQncyB1cGRhdGUgdGhlIGBzcmMvcGFnZXMvZGV2L2luZGV4LmFzdHJvYCBmaWxlIHRvIHVzZSB0aGlzIG5ldyBjb21wb25lbnQ6XG5cbjxhdWdtZW50X2NvZGVfc25pcHBldCBwYXRoPVwic3JjL3BhZ2VzL2Rldi9pbmRleC5hc3Ryb1wiIG1vZGU9XCJFRElUXCI+XG5gYGBhc3Ryb1xuLS0tXG5leHBvcnQgY29uc3QgcHJlcmVuZGVyID0gdHJ1ZTtcblxuaW1wb3J0IHsgZ2V0Q29sbGVjdGlvbiB9IGZyb20gXCJhc3Rybzpjb250ZW50XCI7XG5pbXBvcnQgUGFnZUxheW91dCBmcm9tIFwiQGxheW91dHMvUGFnZUxheW91dC5hc3Ryb1wiO1xuaW1wb3J0IFRvcExheW91dCBmcm9tIFwiQGxheW91dHMvVG9wTGF5b3V0LmFzdHJvXCI7XG5pbXBvcnQgQm90dG9tTGF5b3V0IGZyb20gXCJAbGF5b3V0cy9Cb3R0b21MYXlvdXQuYXN0cm9cIjtcbmltcG9ydCBBSUNhcmRHZW5lcmF0aW9uIGZyb20gXCJAY29tcG9uZW50cy9rb2tvbnV0dWkvYWktY2FyZC1nZW5lcmF0aW9uXCI7XG5pbXBvcnQgUHJvbXB0VGVtcGxhdGVzIGZyb20gXCJAY29tcG9uZW50cy9Qcm9tcHRUZW1wbGF0ZXNcIjtcbmltcG9ydCB0eXBlIHsgSVByb21wdFRlbXBsYXRlIH0gZnJvbSBcIkB0eXBlc1wiO1xuXG5jb25zdCBpbml0aWFsUHJvbXB0VGVtcGxhdGU6IElQcm9tcHRUZW1wbGF0ZSA9IHtcbiAgaWQ6IFwib25lXCIsXG4gIG5hbWU6IFwiQ3JlYXRpdmUgV3JpdGluZyBBc3Npc3RhbnRcIixcbiAgZGVzY3JpcHRpb246IFwiSGVscHMgZ2VuZXJhdGUgY3JlYXRpdmUgd3JpdGluZyBwaWVjZXMuXCIsXG4gIHN5c3RlbVByb21wdDpcbiAgICBcIllvdSBhcmUgYSBjcmVhdGl2ZSB3cml0aW5nIGFzc2lzdGFudCB0aGF0IHByb3ZpZGVzIGltYWdpbmF0aXZlIHN1Z2dlc3Rpb25zLlwiLFxuICB0ZW1wbGF0ZTogXCJXcml0ZSBhIHNob3J0IHN0b3J5IGFib3V0IHt7Y2hhcmFjdGVyfX0gaW4gYSB7e3NldHRpbmd9fS5cIixcbiAgdmFyaWFibGVzOiBbXCJjaGFyYWN0ZXJcIiwgXCJzZXR0aW5nXCJdLFxuICBjcmVhdGVkX2F0OiBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCksXG4gIHVwZGF0ZWRfYXQ6IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKSxcbn07XG4tLS1cblxuPHNjcmlwdCBpczppbmxpbmU+XG4gIGNvbnN0IHVybCA9IHdpbmRvdy5sb2NhdGlvbi5vcmlnaW4gKyBcIi9hcGkvaGVsbG9cIjtcbiAgY29uc3QgcmVzdWx0ID0gYXdhaXQgZmV0Y2godXJsKVxuICAgIC50aGVuKChyZXNwb25zZSkgPT4gcmVzcG9uc2UuanNvbigpKVxuICAgIC5jYXRjaCgoZXJyb3IpID0+IGNvbnNvbGUuZXJyb3IoXCJFcnJvcjpcIiwgZXJyb3IpKTtcbiAgY29uc29sZS5sb2cocmVzdWx0KTtcbjwvc2NyaXB0PlxuXG48UGFnZUxheW91dCB0aXRsZT17XCJkZXZcIn0gZGVzY3JpcHRpb249e1wiZGV2XCJ9PlxuICA8VG9wTGF5b3V0PlxuICAgIDxkaXYgY2xhc3M9XCJhbmltYXRlIHBhZ2UtaGVhZGluZ1wiPlxuICAgICAge1wiREVWXCJ9XG4gICAgPC9kaXY+XG4gIDwvVG9wTGF5b3V0PlxuICA8Qm90dG9tTGF5b3V0PlxuICAgIDxQcm9tcHRUZW1wbGF0ZXMgY2xpZW50OnZpc2libGUgaW5pdGlhbFRlbXBsYXRlPXtpbml0aWFsUHJvbXB0VGVtcGxhdGV9IC8+XG4gIDwvQm90dG9tTGF5b3V0PlxuPC9QYWdlTGF5b3V0PlxuYGBgXG48L2F1Z21lbnRfY29kZV9zbmlwcGV0PlxuXG5UaGUgbmV3IGBQcm9tcHRUZW1wbGF0ZXNgIGNvbXBvbmVudDpcblxuMS4gTWFuYWdlcyB0aGUgc3RhdGUgYmV0d2VlbiB0aGUgbGlzdCBhbmQgZWRpdG9yIGNvbXBvbmVudHNcbjIuIEhhbmRsZXMgdGVtcGxhdGUgc2VsZWN0aW9uLCBjcmVhdGlvbiwgc2F2aW5nLCBhbmQgZGVsZXRpb25cbjMuIFBhc3NlcyB0aGUgYXBwcm9wcmlhdGUgcHJvcHMgdG8gYm90aCBjaGlsZCBjb21wb25lbnRzXG40LiBVc2VzIHJlc3BvbnNpdmUgbGF5b3V0IHdpdGggVGFpbHdpbmQgQ1NTXG41LiBQcm92aWRlcyBhIGNsZWFuIGludGVyZmFjZSBmb3IgdGhlIEFzdHJvIHBhZ2VcblxuVGhpcyBhcHByb2FjaCBzaW1wbGlmaWVzIHRoZSBBc3RybyBwYWdlIGFuZCBlbmNhcHN1bGF0ZXMgYWxsIHRoZSBwcm9tcHQgdGVtcGxhdGUgbWFuYWdlbWVudCBsb2dpYyBpbiBhIHNpbmdsZSBSZWFjdCBjb21wb25lbnQsIG1ha2luZyBpdCBlYXNpZXIgdG8gbWFpbnRhaW4gYW5kIGV4dGVuZC5cbiJ9LHsiaWQiOjIsInR5cGUiOjIsImNvbnRlbnQiOiIifSx7ImlkIjozLCJ0eXBlIjozLCJjb250ZW50Ijoic3JjL2NvbXBvbmVudHMvUHJvbXB0VGVtcGxhdGVMaXN0LnRzeDowLTg2MFxuc3JjL2NvbXBvbmVudHMvUHJvbXB0VGVtcGxhdGVMaXN0LnRzeDo4NjAtMTc3NFxuc3JjL2NvbXBvbmVudHMvUHJvbXB0VGVtcGxhdGVMaXN0LnRzeDoxNzc0LTI3OTJcbnNyYy9jb21wb25lbnRzL1Byb21wdFRlbXBsYXRlTGlzdC50c3g6Mjc5Mi0zNzY3XG5zcmMvY29tcG9uZW50cy9Qcm9tcHRUZW1wbGF0ZUxpc3QudHN4OjM3NjctNDM4MVxuc3JjL3BhZ2VzL2Rldi9pbmRleC5hc3RybzowLTk3Mlxuc3JjL3BhZ2VzL2Rldi9pbmRleC5hc3Rybzo5NzItMTc1M1xuc3JjL2NvbXBvbmVudHMvUHJvbXB0VGVtcGxhdGVFZGl0b3IudHN4OjAtODY2XG5zcmMvY29tcG9uZW50cy9Qcm9tcHRUZW1wbGF0ZUVkaXRvci50c3g6ODY2LTE4OTBcbnNyYy9jb21wb25lbnRzL1Byb21wdFRlbXBsYXRlRWRpdG9yLnRzeDoxODkwLTI2NDBcbnNyYy9jb21wb25lbnRzL1Byb21wdFRlbXBsYXRlRWRpdG9yLnRzeDoyNjQwLTM0MTdcbnNyYy9jb21wb25lbnRzL1Byb21wdFRlbXBsYXRlRWRpdG9yLnRzeDozNDE3LTQwNjZcbnNyYy9jb21wb25lbnRzL1Byb21wdFRlbXBsYXRlRWRpdG9yLnRzeDo0MDY2LTQ3NjVcbnNyYy9jb21wb25lbnRzL1Byb21wdFRlbXBsYXRlRWRpdG9yLnRzeDo1NTgxLTY0NzhcbnNyYy9jb21wb25lbnRzL1Byb21wdFRlbXBsYXRlRWRpdG9yLnRzeDo2NDc4LTc0OTRcbnNyYy9jb21wb25lbnRzL1Byb21wdFRlbXBsYXRlRWRpdG9yLnRzeDo4NTA4LTk1MjVcbnNyYy9jb21wb25lbnRzL1Byb21wdFRlbXBsYXRlRWRpdG9yLnRzeDo5NTI1LTEwNDg3XG5zcmMvY29tcG9uZW50cy9Qcm9tcHRUZW1wbGF0ZUVkaXRvci50c3g6MTA0ODctMTE0NjZcbnNyYy9jb21wb25lbnRzL1Byb21wdFRlbXBsYXRlRWRpdG9yLnRzeDoxMjQzMC0xMzIyNFxuc3JjL2NvbXBvbmVudHMvUHJvbXB0VGVtcGxhdGVFZGl0b3IudHN4OjEzMjI0LTEzMjgyXG5zcmMvY29tcG9uZW50cy9Qcm9qZWN0cy50c3g6MC04ODFcbnNyYy9jb21wb25lbnRzL3VpL3NlbGVjdC50c3g6MC05OTVcbnNyYy9jb21wb25lbnRzL3VpL3NlbGVjdC50c3g6MjAxMi0yNjA0XG5zcmMvY29tcG9uZW50cy91aS9zZWxlY3QudHN4OjI2MDQtMzU5N1xuc3JjL3R5cGVzLnRzOjQxMy03MzBcbnNyYy9saWIvcHJvbXB0LXRlbXBsYXRlL1Byb21wdFRlbXBsYXRlLnRzOjAtMzIzXG5zcmMvcGFnZXMvYXBpL3Byb21wdHMvaW5kZXguanNvbi50czowLTkwM1xuc3JjL3BhZ2VzL2FwaS9wcm9tcHRzL2luZGV4Lmpzb24udHM6OTAzLTE4MDlcbnNyYy9wYWdlcy9hcGkvcHJvbXB0cy9pbmRleC5qc29uLnRzOjE4MDktMjU0NyJ9XSwic2Vlbl9zdGF0ZSI6InNlZW4iLCJyZXNwb25zZV90ZXh0IjoiSSdsbCBjcmVhdGUgYSBuZXcgUmVhY3QgY29tcG9uZW50IGNhbGxlZCBgUHJvbXB0VGVtcGxhdGVzYCB0aGF0IHdpbGwgbWFuYWdlIHRoZSBpbnRlcmFjdGlvbiBiZXR3ZWVuIGBQcm9tcHRUZW1wbGF0ZUxpc3RgIGFuZCBgUHJvbXB0VGVtcGxhdGVFZGl0b3JgOlxuXG5gYGBgdHN4IHBhdGg9c3JjL2NvbXBvbmVudHMvUHJvbXB0VGVtcGxhdGVzLnRzeCBtb2RlPUVESVRcbmltcG9ydCBSZWFjdCwgeyB1c2VTdGF0ZSB9IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IFByb21wdFRlbXBsYXRlTGlzdCBmcm9tIFwiQGNvbXBvbmVudHMvUHJvbXB0VGVtcGxhdGVMaXN0XCI7XG5pbXBvcnQgUHJvbXB0VGVtcGxhdGVFZGl0b3IgZnJvbSBcIkBjb21wb25lbnRzL1Byb21wdFRlbXBsYXRlRWRpdG9yXCI7XG5pbXBvcnQgdHlwZSB7IElQcm9tcHRUZW1wbGF0ZSB9IGZyb20gXCJAdHlwZXNcIjtcblxuaW50ZXJmYWNlIFByb21wdFRlbXBsYXRlc1Byb3BzIHtcbiAgaW5pdGlhbFRlbXBsYXRlPzogSVByb21wdFRlbXBsYXRlO1xufVxuXG5jb25zdCBQcm9tcHRUZW1wbGF0ZXM6IFJlYWN0LkZDPFByb21wdFRlbXBsYXRlc1Byb3BzPiA9ICh7IGluaXRpYWxUZW1wbGF0ZSB9KSA9PiB7XG4gIGNvbnN0IFtzZWxlY3RlZFRlbXBsYXRlLCBzZXRTZWxlY3RlZFRlbXBsYXRlXSA9IHVzZVN0YXRlPElQcm9tcHRUZW1wbGF0ZSB8IHVuZGVmaW5lZD4oaW5pdGlhbFRlbXBsYXRlKTtcbiAgY29uc3QgW3NlbGVjdGVkSWQsIHNldFNlbGVjdGVkSWRdID0gdXNlU3RhdGU8c3RyaW5nIHwgdW5kZWZpbmVkPihpbml0aWFsVGVtcGxhdGU/LmlkKTtcblxuICAvLyBIYW5kbGUgdGVtcGxhdGUgc2VsZWN0aW9uIGZyb20gdGhlIGxpc3RcbiAgY29uc3QgaGFuZGxlU2VsZWN0VGVtcGxhdGUgPSAodGVtcGxhdGU6IElQcm9tcHRUZW1wbGF0ZSkgPT4ge1xuICAgIHNldFNlbGVjdGVkVGVtcGxhdGUodGVtcGxhdGUpO1xuICAgIHNldFNlbGVjdGVkSWQodGVtcGxhdGUuaWQpO1xuICB9O1xuXG4gIC8vIEhhbmRsZSBjcmVhdGluZyBhIG5ldyB0ZW1wbGF0ZVxuICBjb25zdCBoYW5kbGVOZXdUZW1wbGF0ZSA9ICgpID0+IHtcbiAgICBjb25zdCBuZXdUZW1wbGF0ZTogSVByb21wdFRlbXBsYXRlID0ge1xuICAgICAgaWQ6IFwiXCIsXG4gICAgICBuYW1lOiBcIlwiLFxuICAgICAgZGVzY3JpcHRpb246IFwiXCIsXG4gICAgICBzeXN0ZW1Qcm9tcHQ6IFwiXCIsXG4gICAgICB0ZW1wbGF0ZTogXCJcIixcbiAgICAgIHZhcmlhYmxlczogW10sXG4gICAgICBjcmVhdGVkX2F0OiBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCksXG4gICAgICB1cGRhdGVkX2F0OiBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCksXG4gICAgfTtcbiAgICBzZXRTZWxlY3RlZFRlbXBsYXRlKG5ld1RlbXBsYXRlKTtcbiAgICBzZXRTZWxlY3RlZElkKHVuZGVmaW5lZCk7XG4gIH07XG5cbiAgLy8gSGFuZGxlIHNhdmluZyBhIHRlbXBsYXRlXG4gIGNvbnN0IGhhbmRsZVNhdmVUZW1wbGF0ZSA9ICh0ZW1wbGF0ZTogSVByb21wdFRlbXBsYXRlKSA9PiB7XG4gICAgc2V0U2VsZWN0ZWRUZW1wbGF0ZSh0ZW1wbGF0ZSk7XG4gICAgc2V0U2VsZWN0ZWRJZCh0ZW1wbGF0ZS5pZCk7XG4gICAgLy8gUmVmcmVzaCB0aGUgbGlzdCBhZnRlciBzYXZpbmdcbiAgfTtcblxuICAvLyBIYW5kbGUgZGVsZXRpbmcgYSB0ZW1wbGF0ZVxuICBjb25zdCBoYW5kbGVEZWxldGVUZW1wbGF0ZSA9IChpZDogc3RyaW5nKSA9PiB7XG4gICAgc2V0U2VsZWN0ZWRUZW1wbGF0ZSh1bmRlZmluZWQpO1xuICAgIHNldFNlbGVjdGVkSWQodW5kZWZpbmVkKTtcbiAgICAvLyBSZWZyZXNoIHRoZSBsaXN0IGFmdGVyIGRlbGV0aW5nXG4gIH07XG5cbiAgcmV0dXJuIChcbiAgICA8ZGl2IGNsYXNzTmFtZT1cImZsZXggZmxleC1jb2wgbWQ6ZmxleC1yb3cgZ2FwLTQgdy1mdWxsXCI+XG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cInctZnVsbCBtZDp3LTEvM1wiPlxuICAgICAgICA8UHJvbXB0VGVtcGxhdGVMaXN0XG4gICAgICAgICAgb25TZWxlY3Q9e2hhbmRsZVNlbGVjdFRlbXBsYXRlfVxuICAgICAgICAgIG9uTmV3PXtoYW5kbGVOZXdUZW1wbGF0ZX1cbiAgICAgICAgICBzZWxlY3RlZElkPXtzZWxlY3RlZElkfVxuICAgICAgICAvPlxuICAgICAgPC9kaXY+XG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cInctZnVsbCBtZDp3LTIvM1wiPlxuICAgICAgICB7c2VsZWN0ZWRUZW1wbGF0ZSAmJiAoXG4gICAgICAgICAgPFByb21wdFRlbXBsYXRlRWRpdG9yXG4gICAgICAgICAgICBwcm9tcHRUZW1wbGF0ZT17c2VsZWN0ZWRUZW1wbGF0ZX1cbiAgICAgICAgICAgIG9uU2F2ZT17aGFuZGxlU2F2ZVRlbXBsYXRlfVxuICAgICAgICAgICAgb25EZWxldGU9e2hhbmRsZURlbGV0ZVRlbXBsYXRlfVxuICAgICAgICAgICAgb25DYW5jZWw9eygpID0+IHNldFNlbGVjdGVkVGVtcGxhdGUodW5kZWZpbmVkKX1cbiAgICAgICAgICAvPlxuICAgICAgICApfVxuICAgICAgPC9kaXY+XG4gICAgPC9kaXY+XG4gICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBQcm9tcHRUZW1wbGF0ZXM7XG5gYGBgXG5cbk5vdywgbGV0J3MgdXBkYXRlIHRoZSBgc3JjL3BhZ2VzL2Rldi9pbmRleC5hc3Ryb2AgZmlsZSB0byB1c2UgdGhpcyBuZXcgY29tcG9uZW50OlxuXG5gYGBgYXN0cm8gcGF0aD1zcmMvcGFnZXMvZGV2L2luZGV4LmFzdHJvIG1vZGU9RURJVFxuLS0tXG5leHBvcnQgY29uc3QgcHJlcmVuZGVyID0gdHJ1ZTtcblxuaW1wb3J0IHsgZ2V0Q29sbGVjdGlvbiB9IGZyb20gXCJhc3Rybzpjb250ZW50XCI7XG5pbXBvcnQgUGFnZUxheW91dCBmcm9tIFwiQGxheW91dHMvUGFnZUxheW91dC5hc3Ryb1wiO1xuaW1wb3J0IFRvcExheW91dCBmcm9tIFwiQGxheW91dHMvVG9wTGF5b3V0LmFzdHJvXCI7XG5pbXBvcnQgQm90dG9tTGF5b3V0IGZyb20gXCJAbGF5b3V0cy9Cb3R0b21MYXlvdXQuYXN0cm9cIjtcbmltcG9ydCBBSUNhcmRHZW5lcmF0aW9uIGZyb20gXCJAY29tcG9uZW50cy9rb2tvbnV0dWkvYWktY2FyZC1nZW5lcmF0aW9uXCI7XG5pbXBvcnQgUHJvbXB0VGVtcGxhdGVzIGZyb20gXCJAY29tcG9uZW50cy9Qcm9tcHRUZW1wbGF0ZXNcIjtcbmltcG9ydCB0eXBlIHsgSVByb21wdFRlbXBsYXRlIH0gZnJvbSBcIkB0eXBlc1wiO1xuXG5jb25zdCBpbml0aWFsUHJvbXB0VGVtcGxhdGU6IElQcm9tcHRUZW1wbGF0ZSA9IHtcbiAgaWQ6IFwib25lXCIsXG4gIG5hbWU6IFwiQ3JlYXRpdmUgV3JpdGluZyBBc3Npc3RhbnRcIixcbiAgZGVzY3JpcHRpb246IFwiSGVscHMgZ2VuZXJhdGUgY3JlYXRpdmUgd3JpdGluZyBwaWVjZXMuXCIsXG4gIHN5c3RlbVByb21wdDpcbiAgICBcIllvdSBhcmUgYSBjcmVhdGl2ZSB3cml0aW5nIGFzc2lzdGFudCB0aGF0IHByb3ZpZGVzIGltYWdpbmF0aXZlIHN1Z2dlc3Rpb25zLlwiLFxuICB0ZW1wbGF0ZTogXCJXcml0ZSBhIHNob3J0IHN0b3J5IGFib3V0IHt7Y2hhcmFjdGVyfX0gaW4gYSB7e3NldHRpbmd9fS5cIixcbiAgdmFyaWFibGVzOiBbXCJjaGFyYWN0ZXJcIiwgXCJzZXR0aW5nXCJdLFxuICBjcmVhdGVkX2F0OiBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCksXG4gIHVwZGF0ZWRfYXQ6IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKSxcbn07XG4tLS1cblxuPHNjcmlwdCBpczppbmxpbmU+XG4gIGNvbnN0IHVybCA9IHdpbmRvdy5sb2NhdGlvbi5vcmlnaW4gKyBcIi9hcGkvaGVsbG9cIjtcbiAgY29uc3QgcmVzdWx0ID0gYXdhaXQgZmV0Y2godXJsKVxuICAgIC50aGVuKChyZXNwb25zZSkgPT4gcmVzcG9uc2UuanNvbigpKVxuICAgIC5jYXRjaCgoZXJyb3IpID0+IGNvbnNvbGUuZXJyb3IoXCJFcnJvcjpcIiwgZXJyb3IpKTtcbiAgY29uc29sZS5sb2cocmVzdWx0KTtcbjwvc2NyaXB0PlxuXG48UGFnZUxheW91dCB0aXRsZT17XCJkZXZcIn0gZGVzY3JpcHRpb249e1wiZGV2XCJ9PlxuICA8VG9wTGF5b3V0PlxuICAgIDxkaXYgY2xhc3M9XCJhbmltYXRlIHBhZ2UtaGVhZGluZ1wiPlxuICAgICAge1wiREVWXCJ9XG4gICAgPC9kaXY+XG4gIDwvVG9wTGF5b3V0PlxuICA8Qm90dG9tTGF5b3V0PlxuICAgIDxQcm9tcHRUZW1wbGF0ZXMgY2xpZW50OnZpc2libGUgaW5pdGlhbFRlbXBsYXRlPXtpbml0aWFsUHJvbXB0VGVtcGxhdGV9IC8+XG4gIDwvQm90dG9tTGF5b3V0PlxuPC9QYWdlTGF5b3V0PlxuYGBgYFxuXG5UaGUgbmV3IGBQcm9tcHRUZW1wbGF0ZXNgIGNvbXBvbmVudDpcblxuMS4gTWFuYWdlcyB0aGUgc3RhdGUgYmV0d2VlbiB0aGUgbGlzdCBhbmQgZWRpdG9yIGNvbXBvbmVudHNcbjIuIEhhbmRsZXMgdGVtcGxhdGUgc2VsZWN0aW9uLCBjcmVhdGlvbiwgc2F2aW5nLCBhbmQgZGVsZXRpb25cbjMuIFBhc3NlcyB0aGUgYXBwcm9wcmlhdGUgcHJvcHMgdG8gYm90aCBjaGlsZCBjb21wb25lbnRzXG40LiBVc2VzIHJlc3BvbnNpdmUgbGF5b3V0IHdpdGggVGFpbHdpbmQgQ1NTXG41LiBQcm92aWRlcyBhIGNsZWFuIGludGVyZmFjZSBmb3IgdGhlIEFzdHJvIHBhZ2VcblxuVGhpcyBhcHByb2FjaCBzaW1wbGlmaWVzIHRoZSBBc3RybyBwYWdlIGFuZCBlbmNhcHN1bGF0ZXMgYWxsIHRoZSBwcm9tcHQgdGVtcGxhdGUgbWFuYWdlbWVudCBsb2dpYyBpbiBhIHNpbmdsZSBSZWFjdCBjb21wb25lbnQsIG1ha2luZyBpdCBlYXNpZXIgdG8gbWFpbnRhaW4gYW5kIGV4dGVuZC5cbiIsIndvcmtzcGFjZV9maWxlX2NodW5rcyI6W3siY2hhcl9zdGFydCI6IjAiLCJjaGFyX2VuZCI6Ijg2MCIsImJsb2JfbmFtZSI6IjRlNDE0Yjc1MDEzYTBlMzYwZjBiMDNhMzU1NmIzMjg4MThkYmM0Nzg1MmNjYzZkNmYzMjgwYmRmMTY4YzA3NWQiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJzcmMvY29tcG9uZW50cy9Qcm9tcHRUZW1wbGF0ZUxpc3QudHN4In19LHsiY2hhcl9zdGFydCI6Ijg2MCIsImNoYXJfZW5kIjoiMTc3NCIsImJsb2JfbmFtZSI6IjRlNDE0Yjc1MDEzYTBlMzYwZjBiMDNhMzU1NmIzMjg4MThkYmM0Nzg1MmNjYzZkNmYzMjgwYmRmMTY4YzA3NWQiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJzcmMvY29tcG9uZW50cy9Qcm9tcHRUZW1wbGF0ZUxpc3QudHN4In19LHsiY2hhcl9zdGFydCI6IjE3NzQiLCJjaGFyX2VuZCI6IjI3OTIiLCJibG9iX25hbWUiOiI0ZTQxNGI3NTAxM2EwZTM2MGYwYjAzYTM1NTZiMzI4ODE4ZGJjNDc4NTJjY2M2ZDZmMzI4MGJkZjE2OGMwNzVkIiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoic3JjL2NvbXBvbmVudHMvUHJvbXB0VGVtcGxhdGVMaXN0LnRzeCJ9fSx7ImNoYXJfc3RhcnQiOiIyNzkyIiwiY2hhcl9lbmQiOiIzNzY3IiwiYmxvYl9uYW1lIjoiNGU0MTRiNzUwMTNhMGUzNjBmMGIwM2EzNTU2YjMyODgxOGRiYzQ3ODUyY2NjNmQ2ZjMyODBiZGYxNjhjMDc1ZCIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6InNyYy9jb21wb25lbnRzL1Byb21wdFRlbXBsYXRlTGlzdC50c3gifX0seyJjaGFyX3N0YXJ0IjoiMzc2NyIsImNoYXJfZW5kIjoiNDM4MSIsImJsb2JfbmFtZSI6IjRlNDE0Yjc1MDEzYTBlMzYwZjBiMDNhMzU1NmIzMjg4MThkYmM0Nzg1MmNjYzZkNmYzMjgwYmRmMTY4YzA3NWQiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJzcmMvY29tcG9uZW50cy9Qcm9tcHRUZW1wbGF0ZUxpc3QudHN4In19LHsiY2hhcl9zdGFydCI6IjAiLCJjaGFyX2VuZCI6Ijk3MiIsImJsb2JfbmFtZSI6IjVjNTYwNTRlMzRiYWU5NmZmMWQyNTdmNjFmMzNkZjAwMzEyZDk3ODNkZDEyNjdmYzY0NjcwZGY4YjA3NWI3ZGQiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJzcmMvcGFnZXMvZGV2L2luZGV4LmFzdHJvIn19LHsiY2hhcl9zdGFydCI6Ijk3MiIsImNoYXJfZW5kIjoiMTc1MyIsImJsb2JfbmFtZSI6IjVjNTYwNTRlMzRiYWU5NmZmMWQyNTdmNjFmMzNkZjAwMzEyZDk3ODNkZDEyNjdmYzY0NjcwZGY4YjA3NWI3ZGQiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJzcmMvcGFnZXMvZGV2L2luZGV4LmFzdHJvIn19LHsiY2hhcl9zdGFydCI6IjAiLCJjaGFyX2VuZCI6Ijg2NiIsImJsb2JfbmFtZSI6IjA4NTJiN2VhMWQ1NTZjYTE1YjczYWE0YzMwNjFkMGVkOGVjM2Q3NjhlOThlNmM2N2FkNjBlOWQ5NjA0YzVkNDAiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJzcmMvY29tcG9uZW50cy9Qcm9tcHRUZW1wbGF0ZUVkaXRvci50c3gifX0seyJjaGFyX3N0YXJ0IjoiODY2IiwiY2hhcl9lbmQiOiIxODkwIiwiYmxvYl9uYW1lIjoiMDg1MmI3ZWExZDU1NmNhMTViNzNhYTRjMzA2MWQwZWQ4ZWMzZDc2OGU5OGU2YzY3YWQ2MGU5ZDk2MDRjNWQ0MCIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6InNyYy9jb21wb25lbnRzL1Byb21wdFRlbXBsYXRlRWRpdG9yLnRzeCJ9fSx7ImNoYXJfc3RhcnQiOiIxODkwIiwiY2hhcl9lbmQiOiIyNjQwIiwiYmxvYl9uYW1lIjoiMDg1MmI3ZWExZDU1NmNhMTViNzNhYTRjMzA2MWQwZWQ4ZWMzZDc2OGU5OGU2YzY3YWQ2MGU5ZDk2MDRjNWQ0MCIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6InNyYy9jb21wb25lbnRzL1Byb21wdFRlbXBsYXRlRWRpdG9yLnRzeCJ9fSx7ImNoYXJfc3RhcnQiOiIyNjQwIiwiY2hhcl9lbmQiOiIzNDE3IiwiYmxvYl9uYW1lIjoiMDg1MmI3ZWExZDU1NmNhMTViNzNhYTRjMzA2MWQwZWQ4ZWMzZDc2OGU5OGU2YzY3YWQ2MGU5ZDk2MDRjNWQ0MCIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6InNyYy9jb21wb25lbnRzL1Byb21wdFRlbXBsYXRlRWRpdG9yLnRzeCJ9fSx7ImNoYXJfc3RhcnQiOiIzNDE3IiwiY2hhcl9lbmQiOiI0MDY2IiwiYmxvYl9uYW1lIjoiMDg1MmI3ZWExZDU1NmNhMTViNzNhYTRjMzA2MWQwZWQ4ZWMzZDc2OGU5OGU2YzY3YWQ2MGU5ZDk2MDRjNWQ0MCIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6InNyYy9jb21wb25lbnRzL1Byb21wdFRlbXBsYXRlRWRpdG9yLnRzeCJ9fSx7ImNoYXJfc3RhcnQiOiI0MDY2IiwiY2hhcl9lbmQiOiI0NzY1IiwiYmxvYl9uYW1lIjoiMDg1MmI3ZWExZDU1NmNhMTViNzNhYTRjMzA2MWQwZWQ4ZWMzZDc2OGU5OGU2YzY3YWQ2MGU5ZDk2MDRjNWQ0MCIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6InNyYy9jb21wb25lbnRzL1Byb21wdFRlbXBsYXRlRWRpdG9yLnRzeCJ9fSx7ImNoYXJfc3RhcnQiOiI1NTgxIiwiY2hhcl9lbmQiOiI2NDc4IiwiYmxvYl9uYW1lIjoiMDg1MmI3ZWExZDU1NmNhMTViNzNhYTRjMzA2MWQwZWQ4ZWMzZDc2OGU5OGU2YzY3YWQ2MGU5ZDk2MDRjNWQ0MCIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6InNyYy9jb21wb25lbnRzL1Byb21wdFRlbXBsYXRlRWRpdG9yLnRzeCJ9fSx7ImNoYXJfc3RhcnQiOiI2NDc4IiwiY2hhcl9lbmQiOiI3NDk0IiwiYmxvYl9uYW1lIjoiMDg1MmI3ZWExZDU1NmNhMTViNzNhYTRjMzA2MWQwZWQ4ZWMzZDc2OGU5OGU2YzY3YWQ2MGU5ZDk2MDRjNWQ0MCIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6InNyYy9jb21wb25lbnRzL1Byb21wdFRlbXBsYXRlRWRpdG9yLnRzeCJ9fSx7ImNoYXJfc3RhcnQiOiI4NTA4IiwiY2hhcl9lbmQiOiI5NTI1IiwiYmxvYl9uYW1lIjoiMDg1MmI3ZWExZDU1NmNhMTViNzNhYTRjMzA2MWQwZWQ4ZWMzZDc2OGU5OGU2YzY3YWQ2MGU5ZDk2MDRjNWQ0MCIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6InNyYy9jb21wb25lbnRzL1Byb21wdFRlbXBsYXRlRWRpdG9yLnRzeCJ9fSx7ImNoYXJfc3RhcnQiOiI5NTI1IiwiY2hhcl9lbmQiOiIxMDQ4NyIsImJsb2JfbmFtZSI6IjA4NTJiN2VhMWQ1NTZjYTE1YjczYWE0YzMwNjFkMGVkOGVjM2Q3NjhlOThlNmM2N2FkNjBlOWQ5NjA0YzVkNDAiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJzcmMvY29tcG9uZW50cy9Qcm9tcHRUZW1wbGF0ZUVkaXRvci50c3gifX0seyJjaGFyX3N0YXJ0IjoiMTA0ODciLCJjaGFyX2VuZCI6IjExNDY2IiwiYmxvYl9uYW1lIjoiMDg1MmI3ZWExZDU1NmNhMTViNzNhYTRjMzA2MWQwZWQ4ZWMzZDc2OGU5OGU2YzY3YWQ2MGU5ZDk2MDRjNWQ0MCIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6InNyYy9jb21wb25lbnRzL1Byb21wdFRlbXBsYXRlRWRpdG9yLnRzeCJ9fSx7ImNoYXJfc3RhcnQiOiIxMjQzMCIsImNoYXJfZW5kIjoiMTMyMjQiLCJibG9iX25hbWUiOiIwODUyYjdlYTFkNTU2Y2ExNWI3M2FhNGMzMDYxZDBlZDhlYzNkNzY4ZTk4ZTZjNjdhZDYwZTlkOTYwNGM1ZDQwIiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoic3JjL2NvbXBvbmVudHMvUHJvbXB0VGVtcGxhdGVFZGl0b3IudHN4In19LHsiY2hhcl9zdGFydCI6IjEzMjI0IiwiY2hhcl9lbmQiOiIxMzI4MiIsImJsb2JfbmFtZSI6IjA4NTJiN2VhMWQ1NTZjYTE1YjczYWE0YzMwNjFkMGVkOGVjM2Q3NjhlOThlNmM2N2FkNjBlOWQ5NjA0YzVkNDAiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJzcmMvY29tcG9uZW50cy9Qcm9tcHRUZW1wbGF0ZUVkaXRvci50c3gifX0seyJjaGFyX3N0YXJ0IjoiMCIsImNoYXJfZW5kIjoiODgxIiwiYmxvYl9uYW1lIjoiOTdhNTExZjQwYjJhMGYwNWQ0YTU2ZTE4MmRiNjRlZDJjMDFkNWUzMDliYWY2ZWZjNjA4MjIyYmIzYzRkODg1ZSIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6InNyYy9jb21wb25lbnRzL1Byb2plY3RzLnRzeCJ9fSx7ImNoYXJfc3RhcnQiOiIwIiwiY2hhcl9lbmQiOiI5OTUiLCJibG9iX25hbWUiOiJlZGZlMDI0YWJiZjllMDYxNmQ3NmU2YzAyNzdhOTY0MTUxNTRjZDUyZTA1OTI0OTYxNGIxNGQ2M2IwYTI1Nzg0IiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoic3JjL2NvbXBvbmVudHMvdWkvc2VsZWN0LnRzeCJ9fSx7ImNoYXJfc3RhcnQiOiIyMDEyIiwiY2hhcl9lbmQiOiIyNjA0IiwiYmxvYl9uYW1lIjoiZWRmZTAyNGFiYmY5ZTA2MTZkNzZlNmMwMjc3YTk2NDE1MTU0Y2Q1MmUwNTkyNDk2MTRiMTRkNjNiMGEyNTc4NCIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6InNyYy9jb21wb25lbnRzL3VpL3NlbGVjdC50c3gifX0seyJjaGFyX3N0YXJ0IjoiMjYwNCIsImNoYXJfZW5kIjoiMzU5NyIsImJsb2JfbmFtZSI6ImVkZmUwMjRhYmJmOWUwNjE2ZDc2ZTZjMDI3N2E5NjQxNTE1NGNkNTJlMDU5MjQ5NjE0YjE0ZDYzYjBhMjU3ODQiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJzcmMvY29tcG9uZW50cy91aS9zZWxlY3QudHN4In19LHsiY2hhcl9zdGFydCI6IjQxMyIsImNoYXJfZW5kIjoiNzMwIiwiYmxvYl9uYW1lIjoiYjdhY2MxMjFjMjk5YWFjNjBmOWI5MzkxZjg3MGE5NWNlYzJiNjgyM2JkNGExYTZjZmNlYjlmOWJkY2EwY2ZjYiIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6InNyYy90eXBlcy50cyJ9fSx7ImNoYXJfc3RhcnQiOiIwIiwiY2hhcl9lbmQiOiIzMjMiLCJibG9iX25hbWUiOiI4MzliZWZiMzQyZGM0Y2M2MmQwMGY2ZmUxYzcyOGE0ODYyYTFiM2I2OTQ3NDE1NTcwOGNmZDNhMGZkMzdhY2Q3IiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoic3JjL2xpYi9wcm9tcHQtdGVtcGxhdGUvUHJvbXB0VGVtcGxhdGUudHMifX0seyJjaGFyX3N0YXJ0IjoiMCIsImNoYXJfZW5kIjoiOTAzIiwiYmxvYl9uYW1lIjoiYmM1MzdiYmJmZWU3NTlkN2MzMjE5Zjk2Njk3MzdmYWEyODYxZjU1YTg4MjQzOGJkMDJkOWVkMjY5ODE1NTI4MCIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6InNyYy9wYWdlcy9hcGkvcHJvbXB0cy9pbmRleC5qc29uLnRzIn19LHsiY2hhcl9zdGFydCI6IjkwMyIsImNoYXJfZW5kIjoiMTgwOSIsImJsb2JfbmFtZSI6ImJjNTM3YmJiZmVlNzU5ZDdjMzIxOWY5NjY5NzM3ZmFhMjg2MWY1NWE4ODI0MzhiZDAyZDllZDI2OTgxNTUyODAiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJzcmMvcGFnZXMvYXBpL3Byb21wdHMvaW5kZXguanNvbi50cyJ9fSx7ImNoYXJfc3RhcnQiOiIxODA5IiwiY2hhcl9lbmQiOiIyNTQ3IiwiYmxvYl9uYW1lIjoiYmM1MzdiYmJmZWU3NTlkN2MzMjE5Zjk2Njk3MzdmYWEyODYxZjU1YTg4MjQzOGJkMDJkOWVkMjY5ODE1NTI4MCIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6InNyYy9wYWdlcy9hcGkvcHJvbXB0cy9pbmRleC5qc29uLnRzIn19XX0seyJzdGF0dXMiOiJzdWNjZXNzIiwicmVxdWVzdF9pZCI6ImEzMmY5NjRlLTkwOTctNDY2Ny04N2U2LTBjN2E0YzUyYWYxOSIsInJlcXVlc3RfbWVzc2FnZSI6InNldCBwbGFjZWhvbGRlciBhdHRyaWJ1dGVzIHRvIGVtcHR5IHN0cm9uZ3MuIGV4Y2VwdCBmb3IgdGVtcGxhdGUgYW5kIHZhcmFpYmFsZXMiLCJyaWNoX3RleHRfanNvbl9yZXByIjp7InR5cGUiOiJkb2MiLCJjb250ZW50IjpbeyJ0eXBlIjoicGFyYWdyYXBoIiwiY29udGVudCI6W3sidHlwZSI6InRleHQiLCJ0ZXh0Ijoic2V0IHBsYWNlaG9sZGVyIGF0dHJpYnV0ZXMgdG8gZW1wdHkgc3Ryb25ncy4gZXhjZXB0IGZvciB0ZW1wbGF0ZSBhbmQgdmFyYWliYWxlcyJ9XX1dfSwibWVudGlvbmVkX2l0ZW1zIjpbXSwic3RydWN0dXJlZF9vdXRwdXRfbm9kZXMiOlt7ImlkIjowLCJ0eXBlIjowLCJjb250ZW50IjoiSSdsbCB1cGRhdGUgdGhlIGBQcm9tcHRUZW1wbGF0ZUVkaXRvci50c3hgIGNvbXBvbmVudCB0byBzZXQgZW1wdHkgc3RyaW5nIHBsYWNlaG9sZGVycyBmb3IgYWxsIGZpZWxkcyBleGNlcHQgZm9yIHRlbXBsYXRlIGFuZCB2YXJpYWJsZXM6XG5cbmBgYGB0c3ggcGF0aD1zcmMvY29tcG9uZW50cy9wcm9tcHQtdGVtcGxhdGVzL1Byb21wdFRlbXBsYXRlRWRpdG9yLnRzeCBtb2RlPUVESVRcbmltcG9ydCBSZWFjdCwgeyB1c2VTdGF0ZSwgdXNlRWZmZWN0IH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyB1c2VGb3JtIH0gZnJvbSBcInJlYWN0LWhvb2stZm9ybVwiO1xuaW1wb3J0IHsgem9kUmVzb2x2ZXIgfSBmcm9tIFwiQGhvb2tmb3JtL3Jlc29sdmVycy96b2RcIjtcbmltcG9ydCAqIGFzIHogZnJvbSBcInpvZFwiO1xuaW1wb3J0IHsgVHJhc2gyLCBTYXZlLCBQbHVzLCBBbGVydENpcmNsZSB9IGZyb20gXCJsdWNpZGUtcmVhY3RcIjtcbmltcG9ydCB0eXBlIHsgSVByb21wdFRlbXBsYXRlIH0gZnJvbSBcIkB0eXBlcy50c1wiO1xuXG5pbXBvcnQge1xuICBGb3JtLFxuICBGb3JtQ29udHJvbCxcbiAgRm9ybURlc2NyaXB0aW9uLFxuICBGb3JtRmllbGQsXG4gIEZvcm1JdGVtLFxuICBGb3JtTGFiZWwsXG4gIEZvcm1NZXNzYWdlLFxufSBmcm9tIFwiQGNvbXBvbmVudHMvdWkvZm9ybS50c3hcIjtcbmltcG9ydCB7IElucHV0IH0gZnJvbSBcIkBjb21wb25lbnRzL3VpL2lucHV0LnRzeFwiO1xuaW1wb3J0IHsgQnV0dG9uIH0gZnJvbSBcIkBjb21wb25lbnRzL3VpL2J1dHRvbi50c3hcIjtcbmltcG9ydCB7IFRleHRhcmVhIH0gZnJvbSBcIkBjb21wb25lbnRzL3VpL3RleHRhcmVhLnRzeFwiO1xuaW1wb3J0IHtcbiAgQ2FyZCxcbiAgQ2FyZENvbnRlbnQsXG4gIENhcmREZXNjcmlwdGlvbixcbiAgQ2FyZEZvb3RlcixcbiAgQ2FyZEhlYWRlcixcbiAgQ2FyZFRpdGxlLFxufSBmcm9tIFwiQGNvbXBvbmVudHMvdWkvY2FyZC50c3hcIjtcbmltcG9ydCB7IEFsZXJ0LCBBbGVydERlc2NyaXB0aW9uLCBBbGVydFRpdGxlIH0gZnJvbSBcIkBjb21wb25lbnRzL3VpL2FsZXJ0LnRzeFwiO1xuaW1wb3J0IHsgQmFkZ2UgfSBmcm9tIFwiQGNvbXBvbmVudHMvdWkvYmFkZ2UudHN4XCI7XG5pbXBvcnQgeyBTZXBhcmF0b3IgfSBmcm9tIFwiQGNvbXBvbmVudHMvdWkvc2VwYXJhdG9yLnRzeFwiO1xuXG4vLyBEZWZpbmUgdGhlIGZvcm0gc2NoZW1hIHVzaW5nIHpvZFxuY29uc3QgZm9ybVNjaGVtYSA9IHoub2JqZWN0KHtcbiAgaWQ6IHouc3RyaW5nKCkub3B0aW9uYWwoKSxcbiAgbmFtZTogei5zdHJpbmcoKS5taW4oMSwgXCJOYW1lIGlzIHJlcXVpcmVkXCIpLFxuICBkZXNjcmlwdGlvbjogei5zdHJpbmcoKS5taW4oMSwgXCJEZXNjcmlwdGlvbiBpcyByZXF1aXJlZFwiKSxcbiAgc3lzdGVtUHJvbXB0OiB6LnN0cmluZygpLm1pbigxLCBcIlN5c3RlbSBwcm9tcHQgaXMgcmVxdWlyZWRcIiksXG4gIHRlbXBsYXRlOiB6LnN0cmluZygpLm9wdGlvbmFsKCksXG4gIHZhcmlhYmxlczogei5hcnJheSh6LnN0cmluZygpKS5taW4oMSwgXCJBdCBsZWFzdCBvbmUgdmFyaWFibGUgaXMgcmVxdWlyZWRcIiksXG4gIGNyZWF0ZWRfYXQ6IHouc3RyaW5nKCkub3B0aW9uYWwoKSxcbiAgdXBkYXRlZF9hdDogei5zdHJpbmcoKS5vcHRpb25hbCgpLFxufSk7XG5cbmludGVyZmFjZSBQcm9tcHRUZW1wbGF0ZUVkaXRvclByb3BzIHtcbiAgcHJvbXB0VGVtcGxhdGU/OiBJUHJvbXB0VGVtcGxhdGU7XG4gIG9uU2F2ZT86ICh0ZW1wbGF0ZTogSVByb21wdFRlbXBsYXRlKSA9PiB2b2lkO1xuICBvbkRlbGV0ZT86IChpZDogc3RyaW5nKSA9PiB2b2lkO1xuICBvbkNhbmNlbD86ICgpID0+IHZvaWQ7XG59XG5cbmNvbnN0IFByb21wdFRlbXBsYXRlRWRpdG9yOiBSZWFjdC5GQzxQcm9tcHRUZW1wbGF0ZUVkaXRvclByb3BzPiA9ICh7XG4gIHByb21wdFRlbXBsYXRlLFxuICBvblNhdmUsXG4gIG9uRGVsZXRlLFxuICBvbkNhbmNlbCxcbn0pID0+IHtcbiAgY29uc3QgW2lzTmV3LCBzZXRJc05ld10gPSB1c2VTdGF0ZSghcHJvbXB0VGVtcGxhdGU/LmlkKTtcbiAgY29uc3QgW2Vycm9yLCBzZXRFcnJvcl0gPSB1c2VTdGF0ZTxzdHJpbmcgfCBudWxsPihudWxsKTtcbiAgY29uc3QgW3N1Y2Nlc3MsIHNldFN1Y2Nlc3NdID0gdXNlU3RhdGU8c3RyaW5nIHwgbnVsbD4obnVsbCk7XG4gIGNvbnN0IFtsb2FkaW5nLCBzZXRMb2FkaW5nXSA9IHVzZVN0YXRlKGZhbHNlKTtcbiAgY29uc3QgW3ZhcmlhYmxlSW5wdXQsIHNldFZhcmlhYmxlSW5wdXRdID0gdXNlU3RhdGUoXCJcIik7XG5cbiAgLy8gSW5pdGlhbGl6ZSBmb3JtIHdpdGggZGVmYXVsdCB2YWx1ZXMgb3IgcHJvdmlkZWQgcHJvbXB0VGVtcGxhdGVcbiAgY29uc3QgZm9ybSA9IHVzZUZvcm08ei5pbmZlcjx0eXBlb2YgZm9ybVNjaGVtYT4+KHtcbiAgICByZXNvbHZlcjogem9kUmVzb2x2ZXIoZm9ybVNjaGVtYSksXG4gICAgZGVmYXVsdFZhbHVlczogcHJvbXB0VGVtcGxhdGUgfHwge1xuICAgICAgbmFtZTogXCJcIixcbiAgICAgIGRlc2NyaXB0aW9uOiBcIlwiLFxuICAgICAgc3lzdGVtUHJvbXB0OiBcIlwiLFxuICAgICAgdGVtcGxhdGU6IFwiXCIsXG4gICAgICB2YXJpYWJsZXM6IFtdLFxuICAgIH0sXG4gIH0pO1xuXG4gIC8vIFJlc2V0IGZvcm0gd2hlbiBwcm9tcHRUZW1wbGF0ZSBjaGFuZ2VzXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgaWYgKHByb21wdFRlbXBsYXRlKSB7XG4gICAgICBmb3JtLnJlc2V0KHByb21wdFRlbXBsYXRlKTtcbiAgICAgIHNldElzTmV3KCFwcm9tcHRUZW1wbGF0ZS5pZCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGZvcm0ucmVzZXQoe1xuICAgICAgICBuYW1lOiBcIlwiLFxuICAgICAgICBkZXNjcmlwdGlvbjogXCJcIixcbiAgICAgICAgc3lzdGVtUHJvbXB0OiBcIlwiLFxuICAgICAgICB0ZW1wbGF0ZTogXCJcIixcbiAgICAgICAgdmFyaWFibGVzOiBbXSxcbiAgICAgIH0pO1xuICAgICAgc2V0SXNOZXcodHJ1ZSk7XG4gICAgfVxuICB9LCBbcHJvbXB0VGVtcGxhdGUsIGZvcm1dKTtcblxuICAvLyBIYW5kbGUgZm9ybSBzdWJtaXNzaW9uXG4gIGNvbnN0IG9uU3VibWl0ID0gYXN5bmMgKHZhbHVlczogei5pbmZlcjx0eXBlb2YgZm9ybVNjaGVtYT4pID0+IHtcbiAgICBzZXRMb2FkaW5nKHRydWUpO1xuICAgIHNldEVycm9yKG51bGwpO1xuICAgIHNldFN1Y2Nlc3MobnVsbCk7XG5cbiAgICB0cnkge1xuICAgICAgbGV0IHJlc3BvbnNlO1xuICAgICAgbGV0IGRhdGE7XG5cbiAgICAgIGlmIChpc05ldykge1xuICAgICAgICAvLyBDcmVhdGUgbmV3IHByb21wdCB0ZW1wbGF0ZVxuICAgICAgICByZXNwb25zZSA9IGF3YWl0IGZldGNoKFwiL2FwaS9wcm9tcHRzL2luZGV4Lmpzb25cIiwge1xuICAgICAgICAgIG1ldGhvZDogXCJQT1NUXCIsXG4gICAgICAgICAgaGVhZGVyczoge1xuICAgICAgICAgICAgXCJDb250ZW50LVR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCIsXG4gICAgICAgICAgfSxcbiAgICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh2YWx1ZXMpLFxuICAgICAgICB9KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIC8vIFVwZGF0ZSBleGlzdGluZyBwcm9tcHQgdGVtcGxhdGVcbiAgICAgICAgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChgL2FwaS9wcm9tcHRzLyR7dmFsdWVzLmlkfS5qc29uYCwge1xuICAgICAgICAgIG1ldGhvZDogXCJQVVRcIixcbiAgICAgICAgICBoZWFkZXJzOiB7XG4gICAgICAgICAgICBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIixcbiAgICAgICAgICB9LFxuICAgICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHZhbHVlcyksXG4gICAgICAgIH0pO1xuICAgICAgfVxuXG4gICAgICBpZiAoIXJlc3BvbnNlLm9rKSB7XG4gICAgICAgIGNvbnN0IGVycm9yRGF0YSA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKTtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGVycm9yRGF0YS5tZXNzYWdlIHx8IFwiRmFpbGVkIHRvIHNhdmUgcHJvbXB0IHRlbXBsYXRlXCIpO1xuICAgICAgfVxuXG4gICAgICBkYXRhID0gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xuICAgICAgc2V0U3VjY2VzcyhcbiAgICAgICAgaXNOZXdcbiAgICAgICAgICA/IFwiUHJvbXB0IHRlbXBsYXRlIGNyZWF0ZWQgc3VjY2Vzc2Z1bGx5IVwiXG4gICAgICAgICAgOiBcIlByb21wdCB0ZW1wbGF0ZSB1cGRhdGVkIHN1Y2Nlc3NmdWxseSFcIixcbiAgICAgICk7XG5cbiAgICAgIGlmIChvblNhdmUpIHtcbiAgICAgICAgb25TYXZlKGRhdGEpO1xuICAgICAgfVxuXG4gICAgICBpZiAoaXNOZXcpIHtcbiAgICAgICAgZm9ybS5yZXNldChkYXRhKTtcbiAgICAgICAgc2V0SXNOZXcoZmFsc2UpO1xuICAgICAgfVxuICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgc2V0RXJyb3IoXG4gICAgICAgIGVyciBpbnN0YW5jZW9mIEVycm9yID8gZXJyLm1lc3NhZ2UgOiBcIkFuIHVua25vd24gZXJyb3Igb2NjdXJyZWRcIixcbiAgICAgICk7XG4gICAgfSBmaW5hbGx5IHtcbiAgICAgIHNldExvYWRpbmcoZmFsc2UpO1xuICAgIH1cbiAgfTtcblxuICAvLyBIYW5kbGUgdGVtcGxhdGUgZGVsZXRpb25cbiAgY29uc3QgaGFuZGxlRGVsZXRlID0gYXN5bmMgKCkgPT4ge1xuICAgIGlmICghcHJvbXB0VGVtcGxhdGU/LmlkKSByZXR1cm47XG5cbiAgICBzZXRMb2FkaW5nKHRydWUpO1xuICAgIHNldEVycm9yKG51bGwpO1xuXG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goYC9hcGkvcHJvbXB0cy8ke3Byb21wdFRlbXBsYXRlLmlkfS5qc29uYCwge1xuICAgICAgICBtZXRob2Q6IFwiREVMRVRFXCIsXG4gICAgICB9KTtcblxuICAgICAgaWYgKCFyZXNwb25zZS5vaykge1xuICAgICAgICBjb25zdCBlcnJvckRhdGEgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgICBlcnJvckRhdGEubWVzc2FnZSB8fCBcIkZhaWxlZCB0byBkZWxldGUgcHJvbXB0IHRlbXBsYXRlXCIsXG4gICAgICAgICk7XG4gICAgICB9XG5cbiAgICAgIHNldFN1Y2Nlc3MoXCJQcm9tcHQgdGVtcGxhdGUgZGVsZXRlZCBzdWNjZXNzZnVsbHkhXCIpO1xuXG4gICAgICBpZiAob25EZWxldGUpIHtcbiAgICAgICAgb25EZWxldGUocHJvbXB0VGVtcGxhdGUuaWQpO1xuICAgICAgfVxuXG4gICAgICBmb3JtLnJlc2V0KHtcbiAgICAgICAgbmFtZTogXCJcIixcbiAgICAgICAgZGVzY3JpcHRpb246IFwiXCIsXG4gICAgICAgIHN5c3RlbVByb21wdDogXCJcIixcbiAgICAgICAgdGVtcGxhdGU6IFwiXCIsXG4gICAgICAgIHZhcmlhYmxlczogW10sXG4gICAgICB9KTtcbiAgICAgIHNldElzTmV3KHRydWUpO1xuICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgc2V0RXJyb3IoXG4gICAgICAgIGVyciBpbnN0YW5jZW9mIEVycm9yID8gZXJyLm1lc3NhZ2UgOiBcIkFuIHVua25vd24gZXJyb3Igb2NjdXJyZWRcIixcbiAgICAgICk7XG4gICAgfSBmaW5hbGx5IHtcbiAgICAgIHNldExvYWRpbmcoZmFsc2UpO1xuICAgIH1cbiAgfTtcblxuICAvLyBIYW5kbGUgYWRkaW5nIGEgbmV3IHZhcmlhYmxlXG4gIGNvbnN0IGFkZFZhcmlhYmxlID0gKCkgPT4ge1xuICAgIGlmICghdmFyaWFibGVJbnB1dC50cmltKCkpIHJldHVybjtcblxuICAgIGNvbnN0IGN1cnJlbnRWYXJpYWJsZXMgPSBmb3JtLmdldFZhbHVlcyhcInZhcmlhYmxlc1wiKSB8fCBbXTtcbiAgICBpZiAoIWN1cnJlbnRWYXJpYWJsZXMuaW5jbHVkZXModmFyaWFibGVJbnB1dC50cmltKCkpKSB7XG4gICAgICBmb3JtLnNldFZhbHVlKFwidmFyaWFibGVzXCIsIFsuLi5jdXJyZW50VmFyaWFibGVzLCB2YXJpYWJsZUlucHV0LnRyaW0oKV0pO1xuICAgIH1cbiAgICBzZXRWYXJpYWJsZUlucHV0KFwiXCIpO1xuICB9O1xuXG4gIC8vIEhhbmRsZSByZW1vdmluZyBhIHZhcmlhYmxlXG4gIGNvbnN0IHJlbW92ZVZhcmlhYmxlID0gKHZhcmlhYmxlOiBzdHJpbmcpID0+IHtcbiAgICBjb25zdCBjdXJyZW50VmFyaWFibGVzID0gZm9ybS5nZXRWYWx1ZXMoXCJ2YXJpYWJsZXNcIikgfHwgW107XG4gICAgZm9ybS5zZXRWYWx1ZShcbiAgICAgIFwidmFyaWFibGVzXCIsXG4gICAgICBjdXJyZW50VmFyaWFibGVzLmZpbHRlcigodikgPT4gdiAhPT0gdmFyaWFibGUpLFxuICAgICk7XG4gIH07XG5cbiAgcmV0dXJuIChcbiAgICA8Q2FyZCBjbGFzc05hbWU9XCJ3LWZ1bGxcIj5cbiAgICAgIDxDYXJkSGVhZGVyPlxuICAgICAgICA8Q2FyZFRpdGxlPlxuICAgICAgICAgIHtpc05ldyA/IFwiQ3JlYXRlIE5ldyBQcm9tcHQgVGVtcGxhdGVcIiA6IFwiRWRpdCBQcm9tcHQgVGVtcGxhdGVcIn1cbiAgICAgICAgPC9DYXJkVGl0bGU+XG4gICAgICAgIDxDYXJkRGVzY3JpcHRpb24+XG4gICAgICAgICAge2lzTmV3XG4gICAgICAgICAgICA/IFwiQ3JlYXRlIGEgbmV3IHByb21wdCB0ZW1wbGF0ZSBmb3IgQUkgZ2VuZXJhdGlvblwiXG4gICAgICAgICAgICA6IFwiRWRpdCB0aGUgc2VsZWN0ZWQgcHJvbXB0IHRlbXBsYXRlXCJ9XG4gICAgICAgIDwvQ2FyZERlc2NyaXB0aW9uPlxuICAgICAgPC9DYXJkSGVhZGVyPlxuICAgICAgPENhcmRDb250ZW50PlxuICAgICAgICB7ZXJyb3IgJiYgKFxuICAgICAgICAgIDxBbGVydCB2YXJpYW50PVwiZGVzdHJ1Y3RpdmVcIiBjbGFzc05hbWU9XCJtYi00XCI+XG4gICAgICAgICAgICA8QWxlcnRDaXJjbGUgY2xhc3NOYW1lPVwiaC00IHctNFwiIC8+XG4gICAgICAgICAgICA8QWxlcnRUaXRsZT5FcnJvcjwvQWxlcnRUaXRsZT5cbiAgICAgICAgICAgIDxBbGVydERlc2NyaXB0aW9uPntlcnJvcn08L0FsZXJ0RGVzY3JpcHRpb24+XG4gICAgICAgICAgPC9BbGVydD5cbiAgICAgICAgKX1cblxuICAgICAgICB7c3VjY2VzcyAmJiAoXG4gICAgICAgICAgPEFsZXJ0IGNsYXNzTmFtZT1cIm1iLTQgYm9yZGVyLWdyZWVuLTIwMCBiZy1ncmVlbi01MCB0ZXh0LWdyZWVuLTgwMFwiPlxuICAgICAgICAgICAgPEFsZXJ0VGl0bGU+U3VjY2VzczwvQWxlcnRUaXRsZT5cbiAgICAgICAgICAgIDxBbGVydERlc2NyaXB0aW9uPntzdWNjZXNzfTwvQWxlcnREZXNjcmlwdGlvbj5cbiAgICAgICAgICA8L0FsZXJ0PlxuICAgICAgICApfVxuXG4gICAgICAgIDxGb3JtIHsuLi5mb3JtfT5cbiAgICAgICAgICA8Zm9ybSBvblN1Ym1pdD17Zm9ybS5oYW5kbGVTdWJtaXQob25TdWJtaXQpfSBjbGFzc05hbWU9XCJzcGFjZS15LTZcIj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZ3JpZCBncmlkLWNvbHMtMSBnYXAtNCBtZDpncmlkLWNvbHMtMlwiPlxuICAgICAgICAgICAgICA8Rm9ybUZpZWxkXG4gICAgICAgICAgICAgICAgY29udHJvbD17Zm9ybS5jb250cm9sfVxuICAgICAgICAgICAgICAgIG5hbWU9XCJuYW1lXCJcbiAgICAgICAgICAgICAgICByZW5kZXI9eyh7IGZpZWxkIH0pID0+IChcbiAgICAgICAgICAgICAgICAgIDxGb3JtSXRlbT5cbiAgICAgICAgICAgICAgICAgICAgPEZvcm1MYWJlbD5OYW1lPC9Gb3JtTGFiZWw+XG4gICAgICAgICAgICAgICAgICAgIDxGb3JtQ29udHJvbD5cbiAgICAgICAgICAgICAgICAgICAgICA8SW5wdXRcbiAgICAgICAgICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyPVwiXCJcbiAgICAgICAgICAgICAgICAgICAgICAgIHsuLi5maWVsZH1cbiAgICAgICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgICAgICA8L0Zvcm1Db250cm9sPlxuICAgICAgICAgICAgICAgICAgICA8Rm9ybURlc2NyaXB0aW9uPlxuICAgICAgICAgICAgICAgICAgICAgIEEgZGVzY3JpcHRpdmUgbmFtZSBmb3IgdGhpcyBwcm9tcHQgdGVtcGxhdGVcbiAgICAgICAgICAgICAgICAgICAgPC9Gb3JtRGVzY3JpcHRpb24+XG4gICAgICAgICAgICAgICAgICAgIDxGb3JtTWVzc2FnZSAvPlxuICAgICAgICAgICAgICAgICAgPC9Gb3JtSXRlbT5cbiAgICAgICAgICAgICAgICApfVxuICAgICAgICAgICAgICAvPlxuXG4gICAgICAgICAgICAgIHshaXNOZXcgJiYgKFxuICAgICAgICAgICAgICAgIDxGb3JtRmllbGRcbiAgICAgICAgICAgICAgICAgIGNvbnRyb2w9e2Zvcm0uY29udHJvbH1cbiAgICAgICAgICAgICAgICAgIG5hbWU9XCJpZFwiXG4gICAgICAgICAgICAgICAgICByZW5kZXI9eyh7IGZpZWxkIH0pID0+IChcbiAgICAgICAgICAgICAgICAgICAgPEZvcm1JdGVtPlxuICAgICAgICAgICAgICAgICAgICAgIDxGb3JtTGFiZWw+SUQ8L0Zvcm1MYWJlbD5cbiAgICAgICAgICAgICAgICAgICAgICA8Rm9ybUNvbnRyb2w+XG4gICAgICAgICAgICAgICAgICAgICAgICA8SW5wdXQgZGlzYWJsZWQgey4uLmZpZWxkfSAvPlxuICAgICAgICAgICAgICAgICAgICAgIDwvRm9ybUNvbnRyb2w+XG4gICAgICAgICAgICAgICAgICAgICAgPEZvcm1EZXNjcmlwdGlvbj5cbiAgICAgICAgICAgICAgICAgICAgICAgIFVuaXF1ZSBpZGVudGlmaWVyIChhdXRvLWdlbmVyYXRlZClcbiAgICAgICAgICAgICAgICAgICAgICA8L0Zvcm1EZXNjcmlwdGlvbj5cbiAgICAgICAgICAgICAgICAgICAgICA8Rm9ybU1lc3NhZ2UgLz5cbiAgICAgICAgICAgICAgICAgICAgPC9Gb3JtSXRlbT5cbiAgICAgICAgICAgICAgICAgICl9XG4gICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgICA8Rm9ybUZpZWxkXG4gICAgICAgICAgICAgIGNvbnRyb2w9e2Zvcm0uY29udHJvbH1cbiAgICAgICAgICAgICAgbmFtZT1cImRlc2NyaXB0aW9uXCJcbiAgICAgICAgICAgICAgcmVuZGVyPXsoeyBmaWVsZCB9KSA9PiAoXG4gICAgICAgICAgICAgICAgPEZvcm1JdGVtPlxuICAgICAgICAgICAgICAgICAgPEZvcm1MYWJlbD5EZXNjcmlwdGlvbjwvRm9ybUxhYmVsPlxuICAgICAgICAgICAgICAgICAgPEZvcm1Db250cm9sPlxuICAgICAgICAgICAgICAgICAgICA8VGV4dGFyZWFcbiAgICAgICAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcj1cIlwiXG4gICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwicmVzaXplLW5vbmVcIlxuICAgICAgICAgICAgICAgICAgICAgIHsuLi5maWVsZH1cbiAgICAgICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICAgIDwvRm9ybUNvbnRyb2w+XG4gICAgICAgICAgICAgICAgICA8Rm9ybURlc2NyaXB0aW9uPlxuICAgICAgICAgICAgICAgICAgICBBIGJyaWVmIGV4cGxhbmF0aW9uIG9mIHdoYXQgdGhpcyB0ZW1wbGF0ZSBkb2VzXG4gICAgICAgICAgICAgICAgICA8L0Zvcm1EZXNjcmlwdGlvbj5cbiAgICAgICAgICAgICAgICAgIDxGb3JtTWVzc2FnZSAvPlxuICAgICAgICAgICAgICAgIDwvRm9ybUl0ZW0+XG4gICAgICAgICAgICAgICl9XG4gICAgICAgICAgICAvPlxuXG4gICAgICAgICAgICA8Rm9ybUZpZWxkXG4gICAgICAgICAgICAgIGNvbnRyb2w9e2Zvcm0uY29udHJvbH1cbiAgICAgICAgICAgICAgbmFtZT1cInN5c3RlbVByb21wdFwiXG4gICAgICAgICAgICAgIHJlbmRlcj17KHsgZmllbGQgfSkgPT4gKFxuICAgICAgICAgICAgICAgIDxGb3JtSXRlbT5cbiAgICAgICAgICAgICAgICAgIDxGb3JtTGFiZWw+U3lzdGVtIFByb21wdDwvRm9ybUxhYmVsPlxuICAgICAgICAgICAgICAgICAgPEZvcm1Db250cm9sPlxuICAgICAgICAgICAgICAgICAgICA8VGV4dGFyZWFcbiAgICAgICAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcj1cIlwiXG4gICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwibWluLWgtWzEwMHB4XSByZXNpemUtbm9uZVwiXG4gICAgICAgICAgICAgICAgICAgICAgey4uLmZpZWxkfVxuICAgICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgICAgPC9Gb3JtQ29udHJvbD5cbiAgICAgICAgICAgICAgICAgIDxGb3JtRGVzY3JpcHRpb24+XG4gICAgICAgICAgICAgICAgICAgIFRoZSBzeXN0ZW0gaW5zdHJ1Y3Rpb25zIGZvciB0aGUgQUkgbW9kZWxcbiAgICAgICAgICAgICAgICAgIDwvRm9ybURlc2NyaXB0aW9uPlxuICAgICAgICAgICAgICAgICAgPEZvcm1NZXNzYWdlIC8+XG4gICAgICAgICAgICAgICAgPC9Gb3JtSXRlbT5cbiAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgIC8+XG5cbiAgICAgICAgICAgIDxGb3JtRmllbGRcbiAgICAgICAgICAgICAgY29udHJvbD17Zm9ybS5jb250cm9sfVxuICAgICAgICAgICAgICBuYW1lPVwidGVtcGxhdGVcIlxuICAgICAgICAgICAgICByZW5kZXI9eyh7IGZpZWxkIH0pID0+IChcbiAgICAgICAgICAgICAgICA8Rm9ybUl0ZW0+XG4gICAgICAgICAgICAgICAgICA8Rm9ybUxhYmVsPlRlbXBsYXRlPC9Gb3JtTGFiZWw+XG4gICAgICAgICAgICAgICAgICA8Rm9ybUNvbnRyb2w+XG4gICAgICAgICAgICAgICAgICAgIDxUZXh0YXJlYVxuICAgICAgICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyPVwiV3JpdGUgYSBzaG9ydCBzdG9yeSBhYm91dCB7e2NoYXJhY3Rlcn19IGluIGEge3tzZXR0aW5nfX0uXCJcbiAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJtaW4taC1bMTAwcHhdIHJlc2l6ZS1ub25lXCJcbiAgICAgICAgICAgICAgICAgICAgICB7Li4uZmllbGR9XG4gICAgICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgICA8L0Zvcm1Db250cm9sPlxuICAgICAgICAgICAgICAgICAgPEZvcm1EZXNjcmlwdGlvbj5cbiAgICAgICAgICAgICAgICAgICAgVGhlIHRlbXBsYXRlIHdpdGggdmFyaWFibGVzIGluIGRvdWJsZSBjdXJseSBicmFjZXM6e1wiIFwifVxuICAgICAgICAgICAgICAgICAgICB7Lyoge3sgdmFyaWFibGUgfX0gKi99XG4gICAgICAgICAgICAgICAgICA8L0Zvcm1EZXNjcmlwdGlvbj5cbiAgICAgICAgICAgICAgICAgIDxGb3JtTWVzc2FnZSAvPlxuICAgICAgICAgICAgICAgIDwvRm9ybUl0ZW0+XG4gICAgICAgICAgICAgICl9XG4gICAgICAgICAgICAvPlxuXG4gICAgICAgICAgICA8ZGl2PlxuICAgICAgICAgICAgICA8Rm9ybUxhYmVsPlZhcmlhYmxlczwvRm9ybUxhYmVsPlxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIm10LTIgbWItNCBmbGV4IGZsZXgtd3JhcCBnYXAtMlwiPlxuICAgICAgICAgICAgICAgIHtmb3JtLndhdGNoKFwidmFyaWFibGVzXCIpPy5tYXAoKHZhcmlhYmxlKSA9PiAoXG4gICAgICAgICAgICAgICAgICA8QmFkZ2Uga2V5PXt2YXJpYWJsZX0gdmFyaWFudD1cInNlY29uZGFyeVwiPlxuICAgICAgICAgICAgICAgICAgICB7dmFyaWFibGV9XG4gICAgICAgICAgICAgICAgICAgIDxidXR0b25cbiAgICAgICAgICAgICAgICAgICAgICB0eXBlPVwiYnV0dG9uXCJcbiAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJtbC0xIHRleHQtbXV0ZWQtZm9yZWdyb3VuZCBob3Zlcjp0ZXh0LWZvcmVncm91bmRcIlxuICAgICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9eygpID0+IHJlbW92ZVZhcmlhYmxlKHZhcmlhYmxlKX1cbiAgICAgICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICAgIMOXXG4gICAgICAgICAgICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICAgICAgICAgICAgPC9CYWRnZT5cbiAgICAgICAgICAgICAgICApKX1cbiAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZmxleCBnYXAtMlwiPlxuICAgICAgICAgICAgICAgIDxJbnB1dFxuICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9XCJ2YXJpYWJsZV9uYW1lXCJcbiAgICAgICAgICAgICAgICAgIHZhbHVlPXt2YXJpYWJsZUlucHV0fVxuICAgICAgICAgICAgICAgICAgb25DaGFuZ2U9eyhlKSA9PiBzZXRWYXJpYWJsZUlucHV0KGUudGFyZ2V0LnZhbHVlKX1cbiAgICAgICAgICAgICAgICAgIG9uS2V5RG93bj17KGUpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGUua2V5ID09PSBcIkVudGVyXCIpIHtcbiAgICAgICAgICAgICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICAgICAgICAgICAgYWRkVmFyaWFibGUoKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgIDxCdXR0b25cbiAgICAgICAgICAgICAgICAgIHR5cGU9XCJidXR0b25cIlxuICAgICAgICAgICAgICAgICAgdmFyaWFudD1cIm91dGxpbmVcIlxuICAgICAgICAgICAgICAgICAgb25DbGljaz17YWRkVmFyaWFibGV9XG4gICAgICAgICAgICAgICAgICBkaXNhYmxlZD17IXZhcmlhYmxlSW5wdXQudHJpbSgpfVxuICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgIDxQbHVzIGNsYXNzTmFtZT1cImgtNCB3LTQgbXItMlwiIC8+XG4gICAgICAgICAgICAgICAgICBBZGRcbiAgICAgICAgICAgICAgICA8L0J1dHRvbj5cbiAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgIHtmb3JtLmZvcm1TdGF0ZS5lcnJvcnMudmFyaWFibGVzICYmIChcbiAgICAgICAgICAgICAgICA8cCBjbGFzc05hbWU9XCJ0ZXh0LXNtIGZvbnQtbWVkaXVtIHRleHQtZGVzdHJ1Y3RpdmUgbXQtMlwiPlxuICAgICAgICAgICAgICAgICAge2Zvcm0uZm9ybVN0YXRlLmVycm9ycy52YXJpYWJsZXMubWVzc2FnZX1cbiAgICAgICAgICAgICAgICA8L3A+XG4gICAgICAgICAgICAgICl9XG4gICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgICAgPFNlcGFyYXRvciAvPlxuXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZsZXgganVzdGlmeS1iZXR3ZWVuXCI+XG4gICAgICAgICAgICAgIHshaXNOZXcgJiYgb25EZWxldGUgJiYgKFxuICAgICAgICAgICAgICAgIDxCdXR0b25cbiAgICAgICAgICAgICAgICAgIHR5cGU9XCJidXR0b25cIlxuICAgICAgICAgICAgICAgICAgdmFyaWFudD1cImRlc3RydWN0aXZlXCJcbiAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9e2hhbmRsZURlbGV0ZX1cbiAgICAgICAgICAgICAgICAgIGRpc2FibGVkPXtsb2FkaW5nfVxuICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgIDxUcmFzaDIgY2xhc3NOYW1lPVwiaC00IHctNCBtci0yXCIgLz5cbiAgICAgICAgICAgICAgICAgIERlbGV0ZVxuICAgICAgICAgICAgICAgIDwvQnV0dG9uPlxuICAgICAgICAgICAgICApfVxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZsZXggZ2FwLTIgbWwtYXV0b1wiPlxuICAgICAgICAgICAgICAgIHtvbkNhbmNlbCAmJiAoXG4gICAgICAgICAgICAgICAgICA8QnV0dG9uXG4gICAgICAgICAgICAgICAgICAgIHR5cGU9XCJidXR0b25cIlxuICAgICAgICAgICAgICAgICAgICB2YXJpYW50PVwib3V0bGluZVwiXG4gICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9e29uQ2FuY2VsfVxuICAgICAgICAgICAgICAgICAgICBkaXNhYmxlZD17bG9hZGluZ31cbiAgICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAgQ2FuY2VsXG4gICAgICAgICAgICAgICAgICA8L0J1dHRvbj5cbiAgICAgICAgICAgICAgICApfVxuICAgICAgICAgICAgICAgIDxCdXR0b24gdHlwZT1cInN1Ym1pdFwiIGRpc2FibGVkPXtsb2FkaW5nfT5cbiAgICAgICAgICAgICAgICAgIDxTYXZlIGNsYXNzTmFtZT1cImgtNCB3LTQgbXItMlwiIC8+XG4gICAgICAgICAgICAgICAgICB7aXNOZXcgPyBcIkNyZWF0ZVwiIDogXCJVcGRhdGVcIn1cbiAgICAgICAgICAgICAgICA8L0J1dHRvbj5cbiAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8L2Zvcm0+XG4gICAgICAgIDwvRm9ybT5cbiAgICAgIDwvQ2FyZENvbnRlbnQ+XG4gICAgPC9DYXJkPlxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgUHJvbXB0VGVtcGxhdGVFZGl0b3I7XG5gYGBgXG5cbkkndmUgbWFkZSB0aGUgZm9sbG93aW5nIGNoYW5nZXM6XG5cbjEuIENoYW5nZWQgdGhlIHBsYWNlaG9sZGVyIGZvciB0aGUgYG5hbWVgIGZpZWxkIGZyb20gXCJDcmVhdGl2ZSBXcml0aW5nIEFzc2lzdGFudFwiIHRvIGFuIGVtcHR5IHN0cmluZ1xuMi4gQ2hhbmdlZCB0aGUgcGxhY2Vob2xkZXIgZm9yIHRoZSBgZGVzY3JpcHRpb25gIGZpZWxkIGZyb20gXCJIZWxwcyBnZW5lcmF0ZSBjcmVhdGl2ZSB3cml0aW5nIHBpZWNlcy5cIiB0byBhbiBlbXB0eSBzdHJpbmdcbjMuIENoYW5nZWQgdGhlIHBsYWNlaG9sZGVyIGZvciB0aGUgYHN5c3RlbVByb21wdGAgZmllbGQgZnJvbSBhbnkgcHJldmlvdXMgdmFsdWUgdG8gYW4gZW1wdHkgc3RyaW5nXG40LiBLZXB0IHRoZSBwbGFjZWhvbGRlciBmb3IgdGhlIGB0ZW1wbGF0ZWAgZmllbGQgYXMgXCJXcml0ZSBhIHNob3J0IHN0b3J5IGFib3V0IHt7Y2hhcmFjdGVyfX0gaW4gYSB7e3NldHRpbmd9fS5cIlxuNS4gS2VwdCB0aGUgcGxhY2Vob2xkZXIgZm9yIHRoZSBgdmFyaWFibGVzYCBpbnB1dCBmaWVsZCBhcyBcInZhcmlhYmxlX25hbWVcIlxuXG5UaGVzZSBjaGFuZ2VzIHdpbGwgbWFrZSB0aGUgZm9ybSBmaWVsZHMgYXBwZWFyIGVtcHR5IHVudGlsIHRoZSB1c2VyIHN0YXJ0cyB0eXBpbmcsIGV4Y2VwdCBmb3IgdGhlIHRlbXBsYXRlIGFuZCB2YXJpYWJsZXMgZmllbGRzIHdoaWNoIHdpbGwgc3RpbGwgc2hvdyBoZWxwZnVsIGV4YW1wbGVzLlxuIn0seyJpZCI6MiwidHlwZSI6MiwiY29udGVudCI6IiJ9LHsiaWQiOjMsInR5cGUiOjMsImNvbnRlbnQiOiJkYi9zZWVkLnRzOjAtOTkzXG5zcmMvY29tcG9uZW50cy9wcm9tcHQtdGVtcGxhdGVzL1Byb21wdFRlbXBsYXRlRWRpdG9yLnRzeDo5NTM2LTEwNTAyXG5jb21wb25lbnRzLmpzb246MC00NTBcbnNyYy9saWIvcHJvbXB0LXRlbXBsYXRlL3Byb21wdFRlbXBsYXRlLXNjaGVtYS5qc29uOjAtODE0XG5zcmMvY29tcG9uZW50cy9IZWFkZXIuYXN0cm86MC0xMDE4XG5hc3Ryby5jb25maWcubWpzOjAtNzc4XG5hc3Ryby5jb25maWcubWpzOjc3OC05ODNcbmRiL2NvbmZpZy50czowLTg4MFxuc3JjL2NvbXBvbmVudHMvdWkvaW5wdXQudHN4OjAtNzc3XG50YWlsd2luZC5jb25maWcubWpzOjAtOTY3XG5zcmMvY29tcG9uZW50cy9CYXNlSGVhZC5hc3RybzowLTY2OVxuc3JjL2NvbXBvbmVudHMvU2VhcmNoLnRzeDo4MjYtMTgzOVxuc3JjL2xpYi91dGlscy50czowLTg2Nlxuc3JjL2NvbXBvbmVudHMvdWkvbGFiZWwudHN4OjAtNTkzXG5zcmMvY29tcG9uZW50cy91aS90ZXh0YXJlYS50c3g6MC03NDYifV0sInNlZW5fc3RhdGUiOiJzZWVuIiwicmVzcG9uc2VfdGV4dCI6IkknbGwgdXBkYXRlIHRoZSBgUHJvbXB0VGVtcGxhdGVFZGl0b3IudHN4YCBjb21wb25lbnQgdG8gc2V0IGVtcHR5IHN0cmluZyBwbGFjZWhvbGRlcnMgZm9yIGFsbCBmaWVsZHMgZXhjZXB0IGZvciB0ZW1wbGF0ZSBhbmQgdmFyaWFibGVzOlxuXG5gYGBgdHN4IHBhdGg9c3JjL2NvbXBvbmVudHMvcHJvbXB0LXRlbXBsYXRlcy9Qcm9tcHRUZW1wbGF0ZUVkaXRvci50c3ggbW9kZT1FRElUXG5pbXBvcnQgUmVhY3QsIHsgdXNlU3RhdGUsIHVzZUVmZmVjdCB9IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgdXNlRm9ybSB9IGZyb20gXCJyZWFjdC1ob29rLWZvcm1cIjtcbmltcG9ydCB7IHpvZFJlc29sdmVyIH0gZnJvbSBcIkBob29rZm9ybS9yZXNvbHZlcnMvem9kXCI7XG5pbXBvcnQgKiBhcyB6IGZyb20gXCJ6b2RcIjtcbmltcG9ydCB7IFRyYXNoMiwgU2F2ZSwgUGx1cywgQWxlcnRDaXJjbGUgfSBmcm9tIFwibHVjaWRlLXJlYWN0XCI7XG5pbXBvcnQgdHlwZSB7IElQcm9tcHRUZW1wbGF0ZSB9IGZyb20gXCJAdHlwZXMudHNcIjtcblxuaW1wb3J0IHtcbiAgRm9ybSxcbiAgRm9ybUNvbnRyb2wsXG4gIEZvcm1EZXNjcmlwdGlvbixcbiAgRm9ybUZpZWxkLFxuICBGb3JtSXRlbSxcbiAgRm9ybUxhYmVsLFxuICBGb3JtTWVzc2FnZSxcbn0gZnJvbSBcIkBjb21wb25lbnRzL3VpL2Zvcm0udHN4XCI7XG5pbXBvcnQgeyBJbnB1dCB9IGZyb20gXCJAY29tcG9uZW50cy91aS9pbnB1dC50c3hcIjtcbmltcG9ydCB7IEJ1dHRvbiB9IGZyb20gXCJAY29tcG9uZW50cy91aS9idXR0b24udHN4XCI7XG5pbXBvcnQgeyBUZXh0YXJlYSB9IGZyb20gXCJAY29tcG9uZW50cy91aS90ZXh0YXJlYS50c3hcIjtcbmltcG9ydCB7XG4gIENhcmQsXG4gIENhcmRDb250ZW50LFxuICBDYXJkRGVzY3JpcHRpb24sXG4gIENhcmRGb290ZXIsXG4gIENhcmRIZWFkZXIsXG4gIENhcmRUaXRsZSxcbn0gZnJvbSBcIkBjb21wb25lbnRzL3VpL2NhcmQudHN4XCI7XG5pbXBvcnQgeyBBbGVydCwgQWxlcnREZXNjcmlwdGlvbiwgQWxlcnRUaXRsZSB9IGZyb20gXCJAY29tcG9uZW50cy91aS9hbGVydC50c3hcIjtcbmltcG9ydCB7IEJhZGdlIH0gZnJvbSBcIkBjb21wb25lbnRzL3VpL2JhZGdlLnRzeFwiO1xuaW1wb3J0IHsgU2VwYXJhdG9yIH0gZnJvbSBcIkBjb21wb25lbnRzL3VpL3NlcGFyYXRvci50c3hcIjtcblxuLy8gRGVmaW5lIHRoZSBmb3JtIHNjaGVtYSB1c2luZyB6b2RcbmNvbnN0IGZvcm1TY2hlbWEgPSB6Lm9iamVjdCh7XG4gIGlkOiB6LnN0cmluZygpLm9wdGlvbmFsKCksXG4gIG5hbWU6IHouc3RyaW5nKCkubWluKDEsIFwiTmFtZSBpcyByZXF1aXJlZFwiKSxcbiAgZGVzY3JpcHRpb246IHouc3RyaW5nKCkubWluKDEsIFwiRGVzY3JpcHRpb24gaXMgcmVxdWlyZWRcIiksXG4gIHN5c3RlbVByb21wdDogei5zdHJpbmcoKS5taW4oMSwgXCJTeXN0ZW0gcHJvbXB0IGlzIHJlcXVpcmVkXCIpLFxuICB0ZW1wbGF0ZTogei5zdHJpbmcoKS5vcHRpb25hbCgpLFxuICB2YXJpYWJsZXM6IHouYXJyYXkoei5zdHJpbmcoKSkubWluKDEsIFwiQXQgbGVhc3Qgb25lIHZhcmlhYmxlIGlzIHJlcXVpcmVkXCIpLFxuICBjcmVhdGVkX2F0OiB6LnN0cmluZygpLm9wdGlvbmFsKCksXG4gIHVwZGF0ZWRfYXQ6IHouc3RyaW5nKCkub3B0aW9uYWwoKSxcbn0pO1xuXG5pbnRlcmZhY2UgUHJvbXB0VGVtcGxhdGVFZGl0b3JQcm9wcyB7XG4gIHByb21wdFRlbXBsYXRlPzogSVByb21wdFRlbXBsYXRlO1xuICBvblNhdmU/OiAodGVtcGxhdGU6IElQcm9tcHRUZW1wbGF0ZSkgPT4gdm9pZDtcbiAgb25EZWxldGU/OiAoaWQ6IHN0cmluZykgPT4gdm9pZDtcbiAgb25DYW5jZWw/OiAoKSA9PiB2b2lkO1xufVxuXG5jb25zdCBQcm9tcHRUZW1wbGF0ZUVkaXRvcjogUmVhY3QuRkM8UHJvbXB0VGVtcGxhdGVFZGl0b3JQcm9wcz4gPSAoe1xuICBwcm9tcHRUZW1wbGF0ZSxcbiAgb25TYXZlLFxuICBvbkRlbGV0ZSxcbiAgb25DYW5jZWwsXG59KSA9PiB7XG4gIGNvbnN0IFtpc05ldywgc2V0SXNOZXddID0gdXNlU3RhdGUoIXByb21wdFRlbXBsYXRlPy5pZCk7XG4gIGNvbnN0IFtlcnJvciwgc2V0RXJyb3JdID0gdXNlU3RhdGU8c3RyaW5nIHwgbnVsbD4obnVsbCk7XG4gIGNvbnN0IFtzdWNjZXNzLCBzZXRTdWNjZXNzXSA9IHVzZVN0YXRlPHN0cmluZyB8IG51bGw+KG51bGwpO1xuICBjb25zdCBbbG9hZGluZywgc2V0TG9hZGluZ10gPSB1c2VTdGF0ZShmYWxzZSk7XG4gIGNvbnN0IFt2YXJpYWJsZUlucHV0LCBzZXRWYXJpYWJsZUlucHV0XSA9IHVzZVN0YXRlKFwiXCIpO1xuXG4gIC8vIEluaXRpYWxpemUgZm9ybSB3aXRoIGRlZmF1bHQgdmFsdWVzIG9yIHByb3ZpZGVkIHByb21wdFRlbXBsYXRlXG4gIGNvbnN0IGZvcm0gPSB1c2VGb3JtPHouaW5mZXI8dHlwZW9mIGZvcm1TY2hlbWE+Pih7XG4gICAgcmVzb2x2ZXI6IHpvZFJlc29sdmVyKGZvcm1TY2hlbWEpLFxuICAgIGRlZmF1bHRWYWx1ZXM6IHByb21wdFRlbXBsYXRlIHx8IHtcbiAgICAgIG5hbWU6IFwiXCIsXG4gICAgICBkZXNjcmlwdGlvbjogXCJcIixcbiAgICAgIHN5c3RlbVByb21wdDogXCJcIixcbiAgICAgIHRlbXBsYXRlOiBcIlwiLFxuICAgICAgdmFyaWFibGVzOiBbXSxcbiAgICB9LFxuICB9KTtcblxuICAvLyBSZXNldCBmb3JtIHdoZW4gcHJvbXB0VGVtcGxhdGUgY2hhbmdlc1xuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGlmIChwcm9tcHRUZW1wbGF0ZSkge1xuICAgICAgZm9ybS5yZXNldChwcm9tcHRUZW1wbGF0ZSk7XG4gICAgICBzZXRJc05ldyghcHJvbXB0VGVtcGxhdGUuaWQpO1xuICAgIH0gZWxzZSB7XG4gICAgICBmb3JtLnJlc2V0KHtcbiAgICAgICAgbmFtZTogXCJcIixcbiAgICAgICAgZGVzY3JpcHRpb246IFwiXCIsXG4gICAgICAgIHN5c3RlbVByb21wdDogXCJcIixcbiAgICAgICAgdGVtcGxhdGU6IFwiXCIsXG4gICAgICAgIHZhcmlhYmxlczogW10sXG4gICAgICB9KTtcbiAgICAgIHNldElzTmV3KHRydWUpO1xuICAgIH1cbiAgfSwgW3Byb21wdFRlbXBsYXRlLCBmb3JtXSk7XG5cbiAgLy8gSGFuZGxlIGZvcm0gc3VibWlzc2lvblxuICBjb25zdCBvblN1Ym1pdCA9IGFzeW5jICh2YWx1ZXM6IHouaW5mZXI8dHlwZW9mIGZvcm1TY2hlbWE+KSA9PiB7XG4gICAgc2V0TG9hZGluZyh0cnVlKTtcbiAgICBzZXRFcnJvcihudWxsKTtcbiAgICBzZXRTdWNjZXNzKG51bGwpO1xuXG4gICAgdHJ5IHtcbiAgICAgIGxldCByZXNwb25zZTtcbiAgICAgIGxldCBkYXRhO1xuXG4gICAgICBpZiAoaXNOZXcpIHtcbiAgICAgICAgLy8gQ3JlYXRlIG5ldyBwcm9tcHQgdGVtcGxhdGVcbiAgICAgICAgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChcIi9hcGkvcHJvbXB0cy9pbmRleC5qc29uXCIsIHtcbiAgICAgICAgICBtZXRob2Q6IFwiUE9TVFwiLFxuICAgICAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgICAgIFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiLFxuICAgICAgICAgIH0sXG4gICAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkodmFsdWVzKSxcbiAgICAgICAgfSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICAvLyBVcGRhdGUgZXhpc3RpbmcgcHJvbXB0IHRlbXBsYXRlXG4gICAgICAgIHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goYC9hcGkvcHJvbXB0cy8ke3ZhbHVlcy5pZH0uanNvbmAsIHtcbiAgICAgICAgICBtZXRob2Q6IFwiUFVUXCIsXG4gICAgICAgICAgaGVhZGVyczoge1xuICAgICAgICAgICAgXCJDb250ZW50LVR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCIsXG4gICAgICAgICAgfSxcbiAgICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh2YWx1ZXMpLFxuICAgICAgICB9KTtcbiAgICAgIH1cblxuICAgICAgaWYgKCFyZXNwb25zZS5vaykge1xuICAgICAgICBjb25zdCBlcnJvckRhdGEgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihlcnJvckRhdGEubWVzc2FnZSB8fCBcIkZhaWxlZCB0byBzYXZlIHByb21wdCB0ZW1wbGF0ZVwiKTtcbiAgICAgIH1cblxuICAgICAgZGF0YSA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKTtcbiAgICAgIHNldFN1Y2Nlc3MoXG4gICAgICAgIGlzTmV3XG4gICAgICAgICAgPyBcIlByb21wdCB0ZW1wbGF0ZSBjcmVhdGVkIHN1Y2Nlc3NmdWxseSFcIlxuICAgICAgICAgIDogXCJQcm9tcHQgdGVtcGxhdGUgdXBkYXRlZCBzdWNjZXNzZnVsbHkhXCIsXG4gICAgICApO1xuXG4gICAgICBpZiAob25TYXZlKSB7XG4gICAgICAgIG9uU2F2ZShkYXRhKTtcbiAgICAgIH1cblxuICAgICAgaWYgKGlzTmV3KSB7XG4gICAgICAgIGZvcm0ucmVzZXQoZGF0YSk7XG4gICAgICAgIHNldElzTmV3KGZhbHNlKTtcbiAgICAgIH1cbiAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgIHNldEVycm9yKFxuICAgICAgICBlcnIgaW5zdGFuY2VvZiBFcnJvciA/IGVyci5tZXNzYWdlIDogXCJBbiB1bmtub3duIGVycm9yIG9jY3VycmVkXCIsXG4gICAgICApO1xuICAgIH0gZmluYWxseSB7XG4gICAgICBzZXRMb2FkaW5nKGZhbHNlKTtcbiAgICB9XG4gIH07XG5cbiAgLy8gSGFuZGxlIHRlbXBsYXRlIGRlbGV0aW9uXG4gIGNvbnN0IGhhbmRsZURlbGV0ZSA9IGFzeW5jICgpID0+IHtcbiAgICBpZiAoIXByb21wdFRlbXBsYXRlPy5pZCkgcmV0dXJuO1xuXG4gICAgc2V0TG9hZGluZyh0cnVlKTtcbiAgICBzZXRFcnJvcihudWxsKTtcblxuICAgIHRyeSB7XG4gICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKGAvYXBpL3Byb21wdHMvJHtwcm9tcHRUZW1wbGF0ZS5pZH0uanNvbmAsIHtcbiAgICAgICAgbWV0aG9kOiBcIkRFTEVURVwiLFxuICAgICAgfSk7XG5cbiAgICAgIGlmICghcmVzcG9uc2Uub2spIHtcbiAgICAgICAgY29uc3QgZXJyb3JEYXRhID0gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgICAgZXJyb3JEYXRhLm1lc3NhZ2UgfHwgXCJGYWlsZWQgdG8gZGVsZXRlIHByb21wdCB0ZW1wbGF0ZVwiLFxuICAgICAgICApO1xuICAgICAgfVxuXG4gICAgICBzZXRTdWNjZXNzKFwiUHJvbXB0IHRlbXBsYXRlIGRlbGV0ZWQgc3VjY2Vzc2Z1bGx5IVwiKTtcblxuICAgICAgaWYgKG9uRGVsZXRlKSB7XG4gICAgICAgIG9uRGVsZXRlKHByb21wdFRlbXBsYXRlLmlkKTtcbiAgICAgIH1cblxuICAgICAgZm9ybS5yZXNldCh7XG4gICAgICAgIG5hbWU6IFwiXCIsXG4gICAgICAgIGRlc2NyaXB0aW9uOiBcIlwiLFxuICAgICAgICBzeXN0ZW1Qcm9tcHQ6IFwiXCIsXG4gICAgICAgIHRlbXBsYXRlOiBcIlwiLFxuICAgICAgICB2YXJpYWJsZXM6IFtdLFxuICAgICAgfSk7XG4gICAgICBzZXRJc05ldyh0cnVlKTtcbiAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgIHNldEVycm9yKFxuICAgICAgICBlcnIgaW5zdGFuY2VvZiBFcnJvciA/IGVyci5tZXNzYWdlIDogXCJBbiB1bmtub3duIGVycm9yIG9jY3VycmVkXCIsXG4gICAgICApO1xuICAgIH0gZmluYWxseSB7XG4gICAgICBzZXRMb2FkaW5nKGZhbHNlKTtcbiAgICB9XG4gIH07XG5cbiAgLy8gSGFuZGxlIGFkZGluZyBhIG5ldyB2YXJpYWJsZVxuICBjb25zdCBhZGRWYXJpYWJsZSA9ICgpID0+IHtcbiAgICBpZiAoIXZhcmlhYmxlSW5wdXQudHJpbSgpKSByZXR1cm47XG5cbiAgICBjb25zdCBjdXJyZW50VmFyaWFibGVzID0gZm9ybS5nZXRWYWx1ZXMoXCJ2YXJpYWJsZXNcIikgfHwgW107XG4gICAgaWYgKCFjdXJyZW50VmFyaWFibGVzLmluY2x1ZGVzKHZhcmlhYmxlSW5wdXQudHJpbSgpKSkge1xuICAgICAgZm9ybS5zZXRWYWx1ZShcInZhcmlhYmxlc1wiLCBbLi4uY3VycmVudFZhcmlhYmxlcywgdmFyaWFibGVJbnB1dC50cmltKCldKTtcbiAgICB9XG4gICAgc2V0VmFyaWFibGVJbnB1dChcIlwiKTtcbiAgfTtcblxuICAvLyBIYW5kbGUgcmVtb3ZpbmcgYSB2YXJpYWJsZVxuICBjb25zdCByZW1vdmVWYXJpYWJsZSA9ICh2YXJpYWJsZTogc3RyaW5nKSA9PiB7XG4gICAgY29uc3QgY3VycmVudFZhcmlhYmxlcyA9IGZvcm0uZ2V0VmFsdWVzKFwidmFyaWFibGVzXCIpIHx8IFtdO1xuICAgIGZvcm0uc2V0VmFsdWUoXG4gICAgICBcInZhcmlhYmxlc1wiLFxuICAgICAgY3VycmVudFZhcmlhYmxlcy5maWx0ZXIoKHYpID0+IHYgIT09IHZhcmlhYmxlKSxcbiAgICApO1xuICB9O1xuXG4gIHJldHVybiAoXG4gICAgPENhcmQgY2xhc3NOYW1lPVwidy1mdWxsXCI+XG4gICAgICA8Q2FyZEhlYWRlcj5cbiAgICAgICAgPENhcmRUaXRsZT5cbiAgICAgICAgICB7aXNOZXcgPyBcIkNyZWF0ZSBOZXcgUHJvbXB0IFRlbXBsYXRlXCIgOiBcIkVkaXQgUHJvbXB0IFRlbXBsYXRlXCJ9XG4gICAgICAgIDwvQ2FyZFRpdGxlPlxuICAgICAgICA8Q2FyZERlc2NyaXB0aW9uPlxuICAgICAgICAgIHtpc05ld1xuICAgICAgICAgICAgPyBcIkNyZWF0ZSBhIG5ldyBwcm9tcHQgdGVtcGxhdGUgZm9yIEFJIGdlbmVyYXRpb25cIlxuICAgICAgICAgICAgOiBcIkVkaXQgdGhlIHNlbGVjdGVkIHByb21wdCB0ZW1wbGF0ZVwifVxuICAgICAgICA8L0NhcmREZXNjcmlwdGlvbj5cbiAgICAgIDwvQ2FyZEhlYWRlcj5cbiAgICAgIDxDYXJkQ29udGVudD5cbiAgICAgICAge2Vycm9yICYmIChcbiAgICAgICAgICA8QWxlcnQgdmFyaWFudD1cImRlc3RydWN0aXZlXCIgY2xhc3NOYW1lPVwibWItNFwiPlxuICAgICAgICAgICAgPEFsZXJ0Q2lyY2xlIGNsYXNzTmFtZT1cImgtNCB3LTRcIiAvPlxuICAgICAgICAgICAgPEFsZXJ0VGl0bGU+RXJyb3I8L0FsZXJ0VGl0bGU+XG4gICAgICAgICAgICA8QWxlcnREZXNjcmlwdGlvbj57ZXJyb3J9PC9BbGVydERlc2NyaXB0aW9uPlxuICAgICAgICAgIDwvQWxlcnQ+XG4gICAgICAgICl9XG5cbiAgICAgICAge3N1Y2Nlc3MgJiYgKFxuICAgICAgICAgIDxBbGVydCBjbGFzc05hbWU9XCJtYi00IGJvcmRlci1ncmVlbi0yMDAgYmctZ3JlZW4tNTAgdGV4dC1ncmVlbi04MDBcIj5cbiAgICAgICAgICAgIDxBbGVydFRpdGxlPlN1Y2Nlc3M8L0FsZXJ0VGl0bGU+XG4gICAgICAgICAgICA8QWxlcnREZXNjcmlwdGlvbj57c3VjY2Vzc308L0FsZXJ0RGVzY3JpcHRpb24+XG4gICAgICAgICAgPC9BbGVydD5cbiAgICAgICAgKX1cblxuICAgICAgICA8Rm9ybSB7Li4uZm9ybX0+XG4gICAgICAgICAgPGZvcm0gb25TdWJtaXQ9e2Zvcm0uaGFuZGxlU3VibWl0KG9uU3VibWl0KX0gY2xhc3NOYW1lPVwic3BhY2UteS02XCI+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImdyaWQgZ3JpZC1jb2xzLTEgZ2FwLTQgbWQ6Z3JpZC1jb2xzLTJcIj5cbiAgICAgICAgICAgICAgPEZvcm1GaWVsZFxuICAgICAgICAgICAgICAgIGNvbnRyb2w9e2Zvcm0uY29udHJvbH1cbiAgICAgICAgICAgICAgICBuYW1lPVwibmFtZVwiXG4gICAgICAgICAgICAgICAgcmVuZGVyPXsoeyBmaWVsZCB9KSA9PiAoXG4gICAgICAgICAgICAgICAgICA8Rm9ybUl0ZW0+XG4gICAgICAgICAgICAgICAgICAgIDxGb3JtTGFiZWw+TmFtZTwvRm9ybUxhYmVsPlxuICAgICAgICAgICAgICAgICAgICA8Rm9ybUNvbnRyb2w+XG4gICAgICAgICAgICAgICAgICAgICAgPElucHV0XG4gICAgICAgICAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcj1cIlwiXG4gICAgICAgICAgICAgICAgICAgICAgICB7Li4uZmllbGR9XG4gICAgICAgICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICAgICAgPC9Gb3JtQ29udHJvbD5cbiAgICAgICAgICAgICAgICAgICAgPEZvcm1EZXNjcmlwdGlvbj5cbiAgICAgICAgICAgICAgICAgICAgICBBIGRlc2NyaXB0aXZlIG5hbWUgZm9yIHRoaXMgcHJvbXB0IHRlbXBsYXRlXG4gICAgICAgICAgICAgICAgICAgIDwvRm9ybURlc2NyaXB0aW9uPlxuICAgICAgICAgICAgICAgICAgICA8Rm9ybU1lc3NhZ2UgLz5cbiAgICAgICAgICAgICAgICAgIDwvRm9ybUl0ZW0+XG4gICAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgICAgLz5cblxuICAgICAgICAgICAgICB7IWlzTmV3ICYmIChcbiAgICAgICAgICAgICAgICA8Rm9ybUZpZWxkXG4gICAgICAgICAgICAgICAgICBjb250cm9sPXtmb3JtLmNvbnRyb2x9XG4gICAgICAgICAgICAgICAgICBuYW1lPVwiaWRcIlxuICAgICAgICAgICAgICAgICAgcmVuZGVyPXsoeyBmaWVsZCB9KSA9PiAoXG4gICAgICAgICAgICAgICAgICAgIDxGb3JtSXRlbT5cbiAgICAgICAgICAgICAgICAgICAgICA8Rm9ybUxhYmVsPklEPC9Gb3JtTGFiZWw+XG4gICAgICAgICAgICAgICAgICAgICAgPEZvcm1Db250cm9sPlxuICAgICAgICAgICAgICAgICAgICAgICAgPElucHV0IGRpc2FibGVkIHsuLi5maWVsZH0gLz5cbiAgICAgICAgICAgICAgICAgICAgICA8L0Zvcm1Db250cm9sPlxuICAgICAgICAgICAgICAgICAgICAgIDxGb3JtRGVzY3JpcHRpb24+XG4gICAgICAgICAgICAgICAgICAgICAgICBVbmlxdWUgaWRlbnRpZmllciAoYXV0by1nZW5lcmF0ZWQpXG4gICAgICAgICAgICAgICAgICAgICAgPC9Gb3JtRGVzY3JpcHRpb24+XG4gICAgICAgICAgICAgICAgICAgICAgPEZvcm1NZXNzYWdlIC8+XG4gICAgICAgICAgICAgICAgICAgIDwvRm9ybUl0ZW0+XG4gICAgICAgICAgICAgICAgICApfVxuICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICl9XG4gICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgICAgPEZvcm1GaWVsZFxuICAgICAgICAgICAgICBjb250cm9sPXtmb3JtLmNvbnRyb2x9XG4gICAgICAgICAgICAgIG5hbWU9XCJkZXNjcmlwdGlvblwiXG4gICAgICAgICAgICAgIHJlbmRlcj17KHsgZmllbGQgfSkgPT4gKFxuICAgICAgICAgICAgICAgIDxGb3JtSXRlbT5cbiAgICAgICAgICAgICAgICAgIDxGb3JtTGFiZWw+RGVzY3JpcHRpb248L0Zvcm1MYWJlbD5cbiAgICAgICAgICAgICAgICAgIDxGb3JtQ29udHJvbD5cbiAgICAgICAgICAgICAgICAgICAgPFRleHRhcmVhXG4gICAgICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9XCJcIlxuICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cInJlc2l6ZS1ub25lXCJcbiAgICAgICAgICAgICAgICAgICAgICB7Li4uZmllbGR9XG4gICAgICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgICA8L0Zvcm1Db250cm9sPlxuICAgICAgICAgICAgICAgICAgPEZvcm1EZXNjcmlwdGlvbj5cbiAgICAgICAgICAgICAgICAgICAgQSBicmllZiBleHBsYW5hdGlvbiBvZiB3aGF0IHRoaXMgdGVtcGxhdGUgZG9lc1xuICAgICAgICAgICAgICAgICAgPC9Gb3JtRGVzY3JpcHRpb24+XG4gICAgICAgICAgICAgICAgICA8Rm9ybU1lc3NhZ2UgLz5cbiAgICAgICAgICAgICAgICA8L0Zvcm1JdGVtPlxuICAgICAgICAgICAgICApfVxuICAgICAgICAgICAgLz5cblxuICAgICAgICAgICAgPEZvcm1GaWVsZFxuICAgICAgICAgICAgICBjb250cm9sPXtmb3JtLmNvbnRyb2x9XG4gICAgICAgICAgICAgIG5hbWU9XCJzeXN0ZW1Qcm9tcHRcIlxuICAgICAgICAgICAgICByZW5kZXI9eyh7IGZpZWxkIH0pID0+IChcbiAgICAgICAgICAgICAgICA8Rm9ybUl0ZW0+XG4gICAgICAgICAgICAgICAgICA8Rm9ybUxhYmVsPlN5c3RlbSBQcm9tcHQ8L0Zvcm1MYWJlbD5cbiAgICAgICAgICAgICAgICAgIDxGb3JtQ29udHJvbD5cbiAgICAgICAgICAgICAgICAgICAgPFRleHRhcmVhXG4gICAgICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9XCJcIlxuICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cIm1pbi1oLVsxMDBweF0gcmVzaXplLW5vbmVcIlxuICAgICAgICAgICAgICAgICAgICAgIHsuLi5maWVsZH1cbiAgICAgICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICAgIDwvRm9ybUNvbnRyb2w+XG4gICAgICAgICAgICAgICAgICA8Rm9ybURlc2NyaXB0aW9uPlxuICAgICAgICAgICAgICAgICAgICBUaGUgc3lzdGVtIGluc3RydWN0aW9ucyBmb3IgdGhlIEFJIG1vZGVsXG4gICAgICAgICAgICAgICAgICA8L0Zvcm1EZXNjcmlwdGlvbj5cbiAgICAgICAgICAgICAgICAgIDxGb3JtTWVzc2FnZSAvPlxuICAgICAgICAgICAgICAgIDwvRm9ybUl0ZW0+XG4gICAgICAgICAgICAgICl9XG4gICAgICAgICAgICAvPlxuXG4gICAgICAgICAgICA8Rm9ybUZpZWxkXG4gICAgICAgICAgICAgIGNvbnRyb2w9e2Zvcm0uY29udHJvbH1cbiAgICAgICAgICAgICAgbmFtZT1cInRlbXBsYXRlXCJcbiAgICAgICAgICAgICAgcmVuZGVyPXsoeyBmaWVsZCB9KSA9PiAoXG4gICAgICAgICAgICAgICAgPEZvcm1JdGVtPlxuICAgICAgICAgICAgICAgICAgPEZvcm1MYWJlbD5UZW1wbGF0ZTwvRm9ybUxhYmVsPlxuICAgICAgICAgICAgICAgICAgPEZvcm1Db250cm9sPlxuICAgICAgICAgICAgICAgICAgICA8VGV4dGFyZWFcbiAgICAgICAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcj1cIldyaXRlIGEgc2hvcnQgc3RvcnkgYWJvdXQge3tjaGFyYWN0ZXJ9fSBpbiBhIHt7c2V0dGluZ319LlwiXG4gICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwibWluLWgtWzEwMHB4XSByZXNpemUtbm9uZVwiXG4gICAgICAgICAgICAgICAgICAgICAgey4uLmZpZWxkfVxuICAgICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgICAgPC9Gb3JtQ29udHJvbD5cbiAgICAgICAgICAgICAgICAgIDxGb3JtRGVzY3JpcHRpb24+XG4gICAgICAgICAgICAgICAgICAgIFRoZSB0ZW1wbGF0ZSB3aXRoIHZhcmlhYmxlcyBpbiBkb3VibGUgY3VybHkgYnJhY2VzOntcIiBcIn1cbiAgICAgICAgICAgICAgICAgICAgey8qIHt7IHZhcmlhYmxlIH19ICovfVxuICAgICAgICAgICAgICAgICAgPC9Gb3JtRGVzY3JpcHRpb24+XG4gICAgICAgICAgICAgICAgICA8Rm9ybU1lc3NhZ2UgLz5cbiAgICAgICAgICAgICAgICA8L0Zvcm1JdGVtPlxuICAgICAgICAgICAgICApfVxuICAgICAgICAgICAgLz5cblxuICAgICAgICAgICAgPGRpdj5cbiAgICAgICAgICAgICAgPEZvcm1MYWJlbD5WYXJpYWJsZXM8L0Zvcm1MYWJlbD5cbiAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJtdC0yIG1iLTQgZmxleCBmbGV4LXdyYXAgZ2FwLTJcIj5cbiAgICAgICAgICAgICAgICB7Zm9ybS53YXRjaChcInZhcmlhYmxlc1wiKT8ubWFwKCh2YXJpYWJsZSkgPT4gKFxuICAgICAgICAgICAgICAgICAgPEJhZGdlIGtleT17dmFyaWFibGV9IHZhcmlhbnQ9XCJzZWNvbmRhcnlcIj5cbiAgICAgICAgICAgICAgICAgICAge3ZhcmlhYmxlfVxuICAgICAgICAgICAgICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgICAgICAgICAgICAgdHlwZT1cImJ1dHRvblwiXG4gICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwibWwtMSB0ZXh0LW11dGVkLWZvcmVncm91bmQgaG92ZXI6dGV4dC1mb3JlZ3JvdW5kXCJcbiAgICAgICAgICAgICAgICAgICAgICBvbkNsaWNrPXsoKSA9PiByZW1vdmVWYXJpYWJsZSh2YXJpYWJsZSl9XG4gICAgICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAgICDDl1xuICAgICAgICAgICAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgICAgICAgICAgIDwvQmFkZ2U+XG4gICAgICAgICAgICAgICAgKSl9XG4gICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZsZXggZ2FwLTJcIj5cbiAgICAgICAgICAgICAgICA8SW5wdXRcbiAgICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyPVwidmFyaWFibGVfbmFtZVwiXG4gICAgICAgICAgICAgICAgICB2YWx1ZT17dmFyaWFibGVJbnB1dH1cbiAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXsoZSkgPT4gc2V0VmFyaWFibGVJbnB1dChlLnRhcmdldC52YWx1ZSl9XG4gICAgICAgICAgICAgICAgICBvbktleURvd249eyhlKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChlLmtleSA9PT0gXCJFbnRlclwiKSB7XG4gICAgICAgICAgICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgICAgICAgICAgIGFkZFZhcmlhYmxlKCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgIH19XG4gICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICA8QnV0dG9uXG4gICAgICAgICAgICAgICAgICB0eXBlPVwiYnV0dG9uXCJcbiAgICAgICAgICAgICAgICAgIHZhcmlhbnQ9XCJvdXRsaW5lXCJcbiAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9e2FkZFZhcmlhYmxlfVxuICAgICAgICAgICAgICAgICAgZGlzYWJsZWQ9eyF2YXJpYWJsZUlucHV0LnRyaW0oKX1cbiAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICA8UGx1cyBjbGFzc05hbWU9XCJoLTQgdy00IG1yLTJcIiAvPlxuICAgICAgICAgICAgICAgICAgQWRkXG4gICAgICAgICAgICAgICAgPC9CdXR0b24+XG4gICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICB7Zm9ybS5mb3JtU3RhdGUuZXJyb3JzLnZhcmlhYmxlcyAmJiAoXG4gICAgICAgICAgICAgICAgPHAgY2xhc3NOYW1lPVwidGV4dC1zbSBmb250LW1lZGl1bSB0ZXh0LWRlc3RydWN0aXZlIG10LTJcIj5cbiAgICAgICAgICAgICAgICAgIHtmb3JtLmZvcm1TdGF0ZS5lcnJvcnMudmFyaWFibGVzLm1lc3NhZ2V9XG4gICAgICAgICAgICAgICAgPC9wPlxuICAgICAgICAgICAgICApfVxuICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgIDxTZXBhcmF0b3IgLz5cblxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJmbGV4IGp1c3RpZnktYmV0d2VlblwiPlxuICAgICAgICAgICAgICB7IWlzTmV3ICYmIG9uRGVsZXRlICYmIChcbiAgICAgICAgICAgICAgICA8QnV0dG9uXG4gICAgICAgICAgICAgICAgICB0eXBlPVwiYnV0dG9uXCJcbiAgICAgICAgICAgICAgICAgIHZhcmlhbnQ9XCJkZXN0cnVjdGl2ZVwiXG4gICAgICAgICAgICAgICAgICBvbkNsaWNrPXtoYW5kbGVEZWxldGV9XG4gICAgICAgICAgICAgICAgICBkaXNhYmxlZD17bG9hZGluZ31cbiAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICA8VHJhc2gyIGNsYXNzTmFtZT1cImgtNCB3LTQgbXItMlwiIC8+XG4gICAgICAgICAgICAgICAgICBEZWxldGVcbiAgICAgICAgICAgICAgICA8L0J1dHRvbj5cbiAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJmbGV4IGdhcC0yIG1sLWF1dG9cIj5cbiAgICAgICAgICAgICAgICB7b25DYW5jZWwgJiYgKFxuICAgICAgICAgICAgICAgICAgPEJ1dHRvblxuICAgICAgICAgICAgICAgICAgICB0eXBlPVwiYnV0dG9uXCJcbiAgICAgICAgICAgICAgICAgICAgdmFyaWFudD1cIm91dGxpbmVcIlxuICAgICAgICAgICAgICAgICAgICBvbkNsaWNrPXtvbkNhbmNlbH1cbiAgICAgICAgICAgICAgICAgICAgZGlzYWJsZWQ9e2xvYWRpbmd9XG4gICAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgIENhbmNlbFxuICAgICAgICAgICAgICAgICAgPC9CdXR0b24+XG4gICAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgICAgICA8QnV0dG9uIHR5cGU9XCJzdWJtaXRcIiBkaXNhYmxlZD17bG9hZGluZ30+XG4gICAgICAgICAgICAgICAgICA8U2F2ZSBjbGFzc05hbWU9XCJoLTQgdy00IG1yLTJcIiAvPlxuICAgICAgICAgICAgICAgICAge2lzTmV3ID8gXCJDcmVhdGVcIiA6IFwiVXBkYXRlXCJ9XG4gICAgICAgICAgICAgICAgPC9CdXR0b24+XG4gICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPC9mb3JtPlxuICAgICAgICA8L0Zvcm0+XG4gICAgICA8L0NhcmRDb250ZW50PlxuICAgIDwvQ2FyZD5cbiAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IFByb21wdFRlbXBsYXRlRWRpdG9yO1xuYGBgYFxuXG5JJ3ZlIG1hZGUgdGhlIGZvbGxvd2luZyBjaGFuZ2VzOlxuXG4xLiBDaGFuZ2VkIHRoZSBwbGFjZWhvbGRlciBmb3IgdGhlIGBuYW1lYCBmaWVsZCBmcm9tIFwiQ3JlYXRpdmUgV3JpdGluZyBBc3Npc3RhbnRcIiB0byBhbiBlbXB0eSBzdHJpbmdcbjIuIENoYW5nZWQgdGhlIHBsYWNlaG9sZGVyIGZvciB0aGUgYGRlc2NyaXB0aW9uYCBmaWVsZCBmcm9tIFwiSGVscHMgZ2VuZXJhdGUgY3JlYXRpdmUgd3JpdGluZyBwaWVjZXMuXCIgdG8gYW4gZW1wdHkgc3RyaW5nXG4zLiBDaGFuZ2VkIHRoZSBwbGFjZWhvbGRlciBmb3IgdGhlIGBzeXN0ZW1Qcm9tcHRgIGZpZWxkIGZyb20gYW55IHByZXZpb3VzIHZhbHVlIHRvIGFuIGVtcHR5IHN0cmluZ1xuNC4gS2VwdCB0aGUgcGxhY2Vob2xkZXIgZm9yIHRoZSBgdGVtcGxhdGVgIGZpZWxkIGFzIFwiV3JpdGUgYSBzaG9ydCBzdG9yeSBhYm91dCB7e2NoYXJhY3Rlcn19IGluIGEge3tzZXR0aW5nfX0uXCJcbjUuIEtlcHQgdGhlIHBsYWNlaG9sZGVyIGZvciB0aGUgYHZhcmlhYmxlc2AgaW5wdXQgZmllbGQgYXMgXCJ2YXJpYWJsZV9uYW1lXCJcblxuVGhlc2UgY2hhbmdlcyB3aWxsIG1ha2UgdGhlIGZvcm0gZmllbGRzIGFwcGVhciBlbXB0eSB1bnRpbCB0aGUgdXNlciBzdGFydHMgdHlwaW5nLCBleGNlcHQgZm9yIHRoZSB0ZW1wbGF0ZSBhbmQgdmFyaWFibGVzIGZpZWxkcyB3aGljaCB3aWxsIHN0aWxsIHNob3cgaGVscGZ1bCBleGFtcGxlcy5cbiIsIndvcmtzcGFjZV9maWxlX2NodW5rcyI6W3siY2hhcl9zdGFydCI6IjAiLCJjaGFyX2VuZCI6Ijk5MyIsImJsb2JfbmFtZSI6IjdiZTM2ZTAyNzc5OGZkMWJkZTAxNTEyYTNjYmQ2YmU0ZDhkYTAzNDg1ZmZmZjEyMDA1ZDYzYmE5ODVhNmU1NmUiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJkYi9zZWVkLnRzIn19LHsiY2hhcl9zdGFydCI6Ijk1MzYiLCJjaGFyX2VuZCI6IjEwNTAyIiwiYmxvYl9uYW1lIjoiYWY4ZDJjNzZlNzYxNjNjMjcwN2I3ZmQ3YjAxZDY0ODM1ZTAzYzcxMDc3ZGRkNzRhMmJhYmMwOGRmYmI4NDlhZiIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6InNyYy9jb21wb25lbnRzL3Byb21wdC10ZW1wbGF0ZXMvUHJvbXB0VGVtcGxhdGVFZGl0b3IudHN4In19LHsiY2hhcl9zdGFydCI6IjAiLCJjaGFyX2VuZCI6IjQ1MCIsImJsb2JfbmFtZSI6IjNkYWZmZjFkMDhjODFkNzdiOTE4OTg1ZDI4MDU0MjE2ODFhNWU1OWIyODkzYmMzZjhjZDgwN2M1Yzk5ZTQ4YmEiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJjb21wb25lbnRzLmpzb24ifX0seyJjaGFyX3N0YXJ0IjoiMCIsImNoYXJfZW5kIjoiODE0IiwiYmxvYl9uYW1lIjoiYmRmZGE5NjYwZWRlNGNmNTdmNTg1ZWJlZGU4MjZkMTYyYjc2MTY3M2EwZTgwZTEzODZhYzlhMWE0MjA1YjgyNyIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6InNyYy9saWIvcHJvbXB0LXRlbXBsYXRlL3Byb21wdFRlbXBsYXRlLXNjaGVtYS5qc29uIn19LHsiY2hhcl9zdGFydCI6IjAiLCJjaGFyX2VuZCI6IjEwMTgiLCJibG9iX25hbWUiOiJiYTJjY2FmMmNhOTQ5YzUwMjI3ZWU5MDQyOTQ1ZTdmMjc3NmMzYWU2YjYyOTMwNTFmZjQ2NjlkMGY0NzFkZWVjIiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoic3JjL2NvbXBvbmVudHMvSGVhZGVyLmFzdHJvIn19LHsiY2hhcl9zdGFydCI6IjAiLCJjaGFyX2VuZCI6Ijc3OCIsImJsb2JfbmFtZSI6IjBiNDI4MjgzY2IzMjFkZGQ0MDZiMjE0NzgxNzA3MDIwODU2ODJjN2Q5OTY5MzFiZmY2YWU4ODY4N2ZiZmQxYzAiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJhc3Ryby5jb25maWcubWpzIn19LHsiY2hhcl9zdGFydCI6Ijc3OCIsImNoYXJfZW5kIjoiOTgzIiwiYmxvYl9uYW1lIjoiMGI0MjgyODNjYjMyMWRkZDQwNmIyMTQ3ODE3MDcwMjA4NTY4MmM3ZDk5NjkzMWJmZjZhZTg4Njg3ZmJmZDFjMCIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6ImFzdHJvLmNvbmZpZy5tanMifX0seyJjaGFyX3N0YXJ0IjoiMCIsImNoYXJfZW5kIjoiODgwIiwiYmxvYl9uYW1lIjoiMjdmNzA2ZWI0OTI5NTE1ZGMyNjFhMWE1NzU1MGY5ZmJhNDMwNzAwMTk2NmZjMmVkZmNjYzVjYzEzOTcwMDcwYiIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6ImRiL2NvbmZpZy50cyJ9fSx7ImNoYXJfc3RhcnQiOiIwIiwiY2hhcl9lbmQiOiI3NzciLCJibG9iX25hbWUiOiI2ZTg5MDIxYTNmMzI1YmRiZjBjYTk0NTM0MDdhNjExY2UyOWMxYjUzMjUxNWJjY2ZiNzUwMTM5ODUwNDZlODhmIiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoic3JjL2NvbXBvbmVudHMvdWkvaW5wdXQudHN4In19LHsiY2hhcl9zdGFydCI6IjAiLCJjaGFyX2VuZCI6Ijk2NyIsImJsb2JfbmFtZSI6ImI1NmRhNmY4ZTQ4MGM3OGRlZmI0NDU5ODQ4MmU1NmU0Y2UxMDE4YjRhZWZhODBiZDNmZTVjOGRkNTJlOGExMzAiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJ0YWlsd2luZC5jb25maWcubWpzIn19LHsiY2hhcl9zdGFydCI6IjAiLCJjaGFyX2VuZCI6IjY2OSIsImJsb2JfbmFtZSI6IjA1YWMxMGY2Y2Q5YmJkMDlkNzIzNTNjYmJiMjNjZjAyNGJhY2JhMmI2NTQwMzMyNDNlMDY0MmMzNWZhY2Q2ZTUiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJzcmMvY29tcG9uZW50cy9CYXNlSGVhZC5hc3RybyJ9fSx7ImNoYXJfc3RhcnQiOiI4MjYiLCJjaGFyX2VuZCI6IjE4MzkiLCJibG9iX25hbWUiOiJlZjMwNDU1YTNjNGQxNDc1MTdiMmE0YmEyZmUyNDYwZmUxNDNkOWJjYjdmNTc3YTZjZmU5N2Y3YzcwZDM2MTlmIiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoic3JjL2NvbXBvbmVudHMvU2VhcmNoLnRzeCJ9fSx7ImNoYXJfc3RhcnQiOiIwIiwiY2hhcl9lbmQiOiI4NjYiLCJibG9iX25hbWUiOiJhYWFmNDdkMTMxYzYyYzlhYjYwZGU2ODkxM2RhZWUxMWFhMjk2MGY4Y2M5MWQyZTk3N2JhZjNhNzE3ZGZmOWJjIiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoic3JjL2xpYi91dGlscy50cyJ9fSx7ImNoYXJfc3RhcnQiOiIwIiwiY2hhcl9lbmQiOiI1OTMiLCJibG9iX25hbWUiOiI2MTZjYTI2YTIwYjZhYzFiNjI5ZmNmYWEwMjYxMTc5MzMzOWRiNTE5NjI3MzNjMGVhNjMwNzk2M2U1MDYxMTVhIiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoic3JjL2NvbXBvbmVudHMvdWkvbGFiZWwudHN4In19LHsiY2hhcl9zdGFydCI6IjAiLCJjaGFyX2VuZCI6Ijc0NiIsImJsb2JfbmFtZSI6IjlkMjM3NDEyM2YzYzE4NWY1N2IxMDM0ZDVkNDQ1NmQxODliYTEwZmE2NGFhMjBlNDk1MjhjYmIyYjhmYWM0NDMiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJzcmMvY29tcG9uZW50cy91aS90ZXh0YXJlYS50c3gifX1dfV0sImZlZWRiYWNrU3RhdGVzIjp7InRlbXAtZmUtOTBjZjJmMzUtMmIwMi00MjEwLTk0NzYtNGU2YjA2MjQ1YWRkIjp7InNlbGVjdGVkUmF0aW5nIjowLCJmZWVkYmFja05vdGUiOiIifSwidGVtcC1mZS03NGY3M2YyZi1lNjUwLTQ3YjMtOWExMS1lNjgwODAyNDQ4NTUiOnsic2VsZWN0ZWRSYXRpbmciOjAsImZlZWRiYWNrTm90ZSI6IiJ9LCJ0ZW1wLWZlLWE5ZjdiZGZhLWMyZWQtNDlhNy05ZWVkLWU2MmUwODk2ZjYzNCI6eyJzZWxlY3RlZFJhdGluZyI6MCwiZmVlZGJhY2tOb3RlIjoiIn0sInRlbXAtZmUtZGNhMGUxZjYtYWZhZi00ZWUwLTkxODctZjY1NmUwMWUyMjJkIjp7InNlbGVjdGVkUmF0aW5nIjowLCJmZWVkYmFja05vdGUiOiIifSwidGVtcC1mZS01ODliOGMzOS1lNjc2LTQ2NjEtYjhiNi0yMDI5OTU2Nzk3NmIiOnsic2VsZWN0ZWRSYXRpbmciOjAsImZlZWRiYWNrTm90ZSI6IiJ9LCJ0ZW1wLWZlLWZmNTU2NWU4LWU0ZWQtNDNlYy1hNWE3LTcwYmQ0ZmVlMTc0MiI6eyJzZWxlY3RlZFJhdGluZyI6MCwiZmVlZGJhY2tOb3RlIjoiIn0sInRlbXAtZmUtMWFhNzIwYzEtMjkyNi00MTk0LTlhZmEtMzE4MmJlMmZhNDQ3Ijp7InNlbGVjdGVkUmF0aW5nIjowLCJmZWVkYmFja05vdGUiOiIifSwidGVtcC1mZS0zYjA4ZTQyMS1iMDZlLTQzNGMtYTRhOS0xZDE4YjU2YTQyOTUiOnsic2VsZWN0ZWRSYXRpbmciOjAsImZlZWRiYWNrTm90ZSI6IiJ9LCJ0ZW1wLWZlLWFjMjc0OWVjLTNiODYtNDMyMi05Y2U5LTRjMzQ5NDM4Y2U5MyI6eyJzZWxlY3RlZFJhdGluZyI6MCwiZmVlZGJhY2tOb3RlIjoiIn19LCJ0b29sVXNlU3RhdGVzIjp7fSwiZHJhZnRFeGNoYW5nZSI6eyJyZXF1ZXN0X21lc3NhZ2UiOiIiLCJyaWNoX3RleHRfanNvbl9yZXByIjpbXSwibWVudGlvbmVkX2l0ZW1zIjpbXSwic3RhdHVzIjoiZHJhZnQifSwicmVxdWVzdElkcyI6W10sImlzUGlubmVkIjpmYWxzZSwibGFzdFVybCI6Imh0dHBzOi8vYXBwLmF1Z21lbnRjb2RlLmNvbS9zaGFyZS9HU0NHTHZSN202dyIsImlzU2hhcmVhYmxlIjp0cnVlLCJleHRyYURhdGEiOnt9LCJsYXN0SW50ZXJhY3RlZEF0SXNvIjoiMjAyNS0wMy0wNlQxNjozNjoxMC40MTlaIiwiZHJhZnRBY3RpdmVDb250ZXh0SWRzIjpbIi9Vc2Vycy9ib2JzdG91dGUvR2l0L0Bic21wL2JzbXAtd2Vic2l0ZWZhbHNlZmFsc2UiXX0sIjgxZDE3N2U3LTgzNGQtNDljNi04NjBhLWMzNTI4NjJmMDViNCI6eyJpZCI6IjgxZDE3N2U3LTgzNGQtNDljNi04NjBhLWMzNTI4NjJmMDViNCIsImNyZWF0ZWRBdElzbyI6IjIwMjUtMDMtMDZUMTY6MzY6MTYuNTU5WiIsImxhc3RJbnRlcmFjdGVkQXRJc28iOiIyMDI1LTAzLTA2VDE2OjM2OjI1LjE5N1oiLCJjaGF0SGlzdG9yeSI6W3sic3RhdHVzIjoic3VjY2VzcyIsInJlcXVlc3RfaWQiOiJmNTljN2VjMC1hMTRiLTQzODktOGE5Ny00NTA2ODllYzY3OTkiLCJyZXF1ZXN0X21lc3NhZ2UiOiJHaXZlIG1lIGEgZGV0YWlsZWQgdGVjaG5pY2FsIGRlc2NyaXB0aW9uIG9mIHRoaXMgYXBwbGljYXRpb24gdGhhdCBpIGNhbiB1c2UgYXMgdGhlIFJFQURNRS5tZCBmb3IgdGhpcyByZXBvc2l0b3J5IiwicmljaF90ZXh0X2pzb25fcmVwciI6eyJ0eXBlIjoiZG9jIiwiY29udGVudCI6W3sidHlwZSI6InBhcmFncmFwaCIsImNvbnRlbnQiOlt7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IkdpdmUgbWUgYSBkZXRhaWxlZCB0ZWNobmljYWwgZGVzY3JpcHRpb24gb2YgdGhpcyBhcHBsaWNhdGlvbiB0aGF0IGkgY2FuIHVzZSBhcyB0aGUgUkVBRE1FLm1kIGZvciB0aGlzIHJlcG9zaXRvcnkifV19XX0sIm1lbnRpb25lZF9pdGVtcyI6W10sInN0cnVjdHVyZWRfb3V0cHV0X25vZGVzIjpbeyJpZCI6MCwidHlwZSI6MCwiY29udGVudCI6IkJhc2VkIG9uIHRoZSBwcm9qZWN0IGZpbGVzLCBJJ2xsIGNyZWF0ZSBhIGNvbXByZWhlbnNpdmUgUkVBRE1FLm1kIGZvciB5b3VyIGFwcGxpY2F0aW9uOlxuXG48YXVnbWVudF9jb2RlX3NuaXBwZXQgcGF0aD1cIlJFQURNRS5tZFwiIG1vZGU9XCJFRElUXCI+XG5gYGBtYXJrZG93blxuIyBCb2IgU3RvdXRlIC0gUGVyc29uYWwgV2Vic2l0ZVxuXG5BIG1vZGVybiwgcGVyZm9ybWFudCBwZXJzb25hbCB3ZWJzaXRlIGFuZCBwb3J0Zm9saW8gYnVpbHQgd2l0aCBBc3RybywgZmVhdHVyaW5nIGEgYmxvZywgcHJvamVjdCBzaG93Y2FzZSwgYW5kIHdvcmsgaGlzdG9yeS4gVGhlIHNpdGUgYWNoaWV2ZXMgcGVyZmVjdCBMaWdodGhvdXNlIHNjb3JlcyB3aGlsZSBtYWludGFpbmluZyBhIGxpZ2h0d2VpZ2h0IGZvb3RwcmludCAodW5kZXIgMTAwa2IgcGVyIHBhZ2UgaW5jbHVkaW5nIGZvbnRzKS5cblxuIyMg8J+agCBUZWNoIFN0YWNrXG5cbi0gKipGcmFtZXdvcmsqKjogW0FzdHJvXShodHRwczovL2FzdHJvLmJ1aWxkKVxuLSAqKlN0eWxpbmcqKjogVGFpbHdpbmQgQ1NTXG4tICoqTGFuZ3VhZ2VzKio6IFR5cGVTY3JpcHQsIEphdmFTY3JpcHRcbi0gKipDb21wb25lbnRzKio6IFNvbGlkSlMgKGZvciBpbnRlcmFjdGl2ZSBlbGVtZW50cylcbi0gKipDb250ZW50Kio6IE1EWC9NYXJrZG93blxuLSAqKkRlcGxveW1lbnQqKjogRmlyZWJhc2UvVmVyY2VsIHN1cHBvcnRlZFxuXG4jIyDinKggRmVhdHVyZXNcblxuLSAqKlBlcmZvcm1hbmNlKipcbiAgLSAxMDAvMTAwIExpZ2h0aG91c2Ugc2NvcmVzXG4gIC0gUGFnZXMgdW5kZXIgMTAwa2IgKGluY2x1ZGluZyBmb250cylcbiAgLSB+NDBtcyByZW5kZXIgdGltZSBvbiBsb2NhbGhvc3RcbiAgLSBTdGF0aWMgU2l0ZSBHZW5lcmF0aW9uIChTU0cpXG5cbi0gKipDb250ZW50IE1hbmFnZW1lbnQqKlxuICAtIEJsb2cgcG9zdHMgd2l0aCBNRFggc3VwcG9ydFxuICAtIFByb2plY3QgcG9ydGZvbGlvXG4gIC0gV29yayBoaXN0b3J5XG4gIC0gTGVnYWwgZG9jdW1lbnRzXG4gIC0gVHlwZS1zYWZlIGNvbnRlbnQgc2NoZW1hcyB1c2luZyBab2RcblxuLSAqKkRldmVsb3BlciBFeHBlcmllbmNlKipcbiAgLSBUeXBlU2NyaXB0IHN1cHBvcnRcbiAgLSBFU0xpbnQgaW50ZWdyYXRpb25cbiAgLSBOZXR3b3JrIGRldmVsb3BtZW50IG1vZGVcbiAgLSBIb3QgbW9kdWxlIHJlbG9hZGluZ1xuXG4tICoqVXNlciBFeHBlcmllbmNlKipcbiAgLSBSZXNwb25zaXZlIGRlc2lnblxuICAtIExpZ2h0L0RhcmsgdGhlbWVcbiAgLSBBbmltYXRlZCBVSSBlbGVtZW50c1xuICAtIEFjY2Vzc2libGVcbiAgLSBTRU8gb3B0aW1pemVkXG4gIC0gQXV0by1nZW5lcmF0ZWQgc2l0ZW1hcFxuICAtIFJTUyBmZWVkXG4gIC0gU2VhcmNoIGZ1bmN0aW9uYWxpdHlcbiAgLSBDb2RlIGJsb2NrIGNvcHlpbmdcblxuIyMg8J+boO+4jyBHZXR0aW5nIFN0YXJ0ZWRcblxuMS4gQ2xvbmUgdGhlIHJlcG9zaXRvcnlcbjIuIEluc3RhbGwgZGVwZW5kZW5jaWVzOlxuICAgYGBgYmFzaFxuICAgbnBtIGluc3RhbGxcbiAgIGBgYFxuMy4gU3RhcnQgdGhlIGRldmVsb3BtZW50IHNlcnZlcjpcbiAgIGBgYGJhc2hcbiAgIG5wbSBydW4gZGV2XG4gICBgYGBcbiAgIEZvciBuZXR3b3JrIGFjY2VzczpcbiAgIGBgYGJhc2hcbiAgIG5wbSBydW4gZGV2Om5ldHdvcmtcbiAgIGBgYFxuXG4jIyDwn5OdIEF2YWlsYWJsZSBTY3JpcHRzXG5cbi0gYG5wbSBydW4gZGV2YCAtIFN0YXJ0IGRldmVsb3BtZW50IHNlcnZlclxuLSBgbnBtIHJ1biBkZXY6bmV0d29ya2AgLSBTdGFydCBkZXZlbG9wbWVudCBzZXJ2ZXIgd2l0aCBuZXR3b3JrIGFjY2Vzc1xuLSBgbnBtIHJ1biBidWlsZGAgLSBCdWlsZCBwcm9kdWN0aW9uIHNpdGVcbi0gYG5wbSBydW4gcHJldmlld2AgLSBQcmV2aWV3IHByb2R1Y3Rpb24gYnVpbGRcbi0gYG5wbSBydW4gcHJldmlldzpuZXR3b3JrYCAtIFByZXZpZXcgd2l0aCBuZXR3b3JrIGFjY2Vzc1xuLSBgbnBtIHJ1biBkZXBsb3ktZmlyZWJhc2VgIC0gRGVwbG95IHRvIEZpcmViYXNlXG4tIGBucG0gcnVuIGRlcGxveS12ZXJjZWxgIC0gRGVwbG95IHRvIFZlcmNlbFxuLSBgbnBtIHJ1biBsaW50YCAtIFJ1biBFU0xpbnRcbi0gYG5wbSBydW4gbGludDpmaXhgIC0gQXV0by1maXggRVNMaW50IGlzc3Vlc1xuXG4jIyDwn5OBIFByb2plY3QgU3RydWN0dXJlXG5cbmBgYFxuL1xu4pSc4pSA4pSAIHB1YmxpYy8gICAgICAgICAgICMgU3RhdGljIGFzc2V0c1xu4pSc4pSA4pSAIHNyYy9cbuKUgiAgIOKUnOKUgOKUgCBjb21wb25lbnRzLyAgICMgQXN0cm8vU29saWRKUyBjb21wb25lbnRzXG7ilIIgICDilJzilIDilIAgY29udGVudC8gICAgICAjIENvbnRlbnQgY29sbGVjdGlvbnNcbuKUgiAgIOKUgiAgIOKUnOKUgOKUgCBibG9nLyAgICAjIEJsb2cgcG9zdHNcbuKUgiAgIOKUgiAgIOKUnOKUgOKUgCBwcm9qZWN0cy8jIFByb2plY3Qgc2hvd2Nhc2VzXG7ilIIgICDilIIgICDilJzilIDilIAgd29yay8gICAgIyBXb3JrIGhpc3RvcnlcbuKUgiAgIOKUgiAgIOKUlOKUgOKUgCBsZWdhbC8gICAjIExlZ2FsIGRvY3VtZW50c1xu4pSCICAg4pSc4pSA4pSAIGxheW91dHMvICAgICAjIFBhZ2UgbGF5b3V0c1xu4pSCICAg4pSc4pSA4pSAIHBhZ2VzLyAgICAgICAjIFJvdXRlIGNvbXBvbmVudHNcbuKUgiAgIOKUnOKUgOKUgCBzdHlsZXMvICAgICAgIyBHbG9iYWwgc3R5bGVzXG7ilIIgICDilJTilIDilIAgbGliLyAgICAgICAgICMgVXRpbGl0eSBmdW5jdGlvbnNcbmBgYFxuXG4jIyDwn5OaIENvbnRlbnQgTWFuYWdlbWVudFxuXG5Db250ZW50IGlzIG1hbmFnZWQgdGhyb3VnaCBBc3RybydzIGNvbnRlbnQgY29sbGVjdGlvbnMsIHdpdGggc3RyaWN0IHR5cGluZyB2aWEgWm9kIHNjaGVtYXM6XG5cbi0gKipCbG9nIFBvc3RzKio6IEFydGljbGVzIHdpdGggdGl0bGUsIHN1bW1hcnksIGRhdGUsIGFuZCB0YWdzXG4tICoqUHJvamVjdHMqKjogUG9ydGZvbGlvIGl0ZW1zIHdpdGggb3B0aW9uYWwgZGVtby9yZXBvIGxpbmtzXG4tICoqV29yayBIaXN0b3J5Kio6IFByb2Zlc3Npb25hbCBleHBlcmllbmNlIGVudHJpZXNcbi0gKipMZWdhbCoqOiBUZXJtcywgcHJpdmFjeSBwb2xpY3ksIGV0Yy5cblxuIyMg8J+agCBEZXBsb3ltZW50XG5cblRoZSBzaXRlIHN1cHBvcnRzIG11bHRpcGxlIGRlcGxveW1lbnQgcGxhdGZvcm1zOlxuXG4tICoqRmlyZWJhc2UqKjogYG5wbSBydW4gZGVwbG95LWZpcmViYXNlYFxuLSAqKlZlcmNlbCoqOiBgbnBtIHJ1biBkZXBsb3ktdmVyY2VsYFxuXG4jIyDwn5OEIExpY2Vuc2VcblxuTUlUIExpY2Vuc2VcblxuIyMg8J+UlyBMaW5rc1xuXG4tIExpdmUgU2l0ZTogW2JvYi1zdG91dGUuZmlyZWJhc2VhcHAuY29tXShodHRwczovL2JvYi1zdG91dGUuZmlyZWJhc2VhcHAuY29tKVxuLSBHaXRIdWI6IFtnaXRodWIuY29tL3N0b3V0ZS93ZWJjb21wb25lbnRzXShodHRwczovL2dpdGh1Yi5jb20vc3RvdXRlL3dlYmNvbXBvbmVudHMpXG5gYGBcbjwvYXVnbWVudF9jb2RlX3NuaXBwZXQ+XG5cblRoaXMgUkVBRE1FIHByb3ZpZGVzIGEgY29tcHJlaGVuc2l2ZSBvdmVydmlldyBvZiB5b3VyIGFwcGxpY2F0aW9uLCBoaWdobGlnaHRpbmcgaXRzIGtleSBmZWF0dXJlcywgdGVjaG5pY2FsIHN0YWNrLCBhbmQgdXNhZ2UgaW5zdHJ1Y3Rpb25zLiBJdCdzIHN0cnVjdHVyZWQgdG8gYmUgYm90aCBpbmZvcm1hdGl2ZSBmb3IgdXNlcnMgYW5kIGhlbHBmdWwgZm9yIGRldmVsb3BlcnMgd2hvIG1pZ2h0IHdvcmsgd2l0aCB0aGUgY29kZWJhc2UuXG4ifSx7ImlkIjoyLCJ0eXBlIjoyLCJjb250ZW50IjoiIn0seyJpZCI6MywidHlwZSI6MywiY29udGVudCI6IlJFQURNRS5tZDowLTk4M1xuUkVBRE1FLm1kOjk4My0xOTY1XG5SRUFETUUubWQ6MTk2NS0yOTYyXG5SRUFETUUubWQ6Mjk2Mi0zMDM4XG5zcmMtZGVzaWduL2N2LW91ZC5tZHg6MC04MTNcbnNyYy1kZXNpZ24vY3Ytb3VkLm1keDo4MTMtMTgyN1xuc3JjLWRlc2lnbi9jdi1vdWQubWR4OjE4MjctMjgzNVxuc3JjLWRlc2lnbi9jdi1vdWQubWR4OjI4MzUtMzgxOVxuc3JjLWRlc2lnbi9jdi5tZHg6MC05MzhcbnNyYy1kZXNpZ24vY3YubWR4OjkzOC0xNzY5XG5zcmMtZGVzaWduL2N2Lm1keDoxNzY5LTI3NzNcbnNyYy1kZXNpZ24vY3YubWR4OjI3NzMtMzc1N1xuc3JjLWRlc2lnbi9jdi5tZHg6Mzc1Ny00MjkyXG5wYWNrYWdlLmpzb246MC05NDJcbnNyYy9jb250ZW50L3Byb2plY3RzL3dlYi1jb21wb25lbnRzL2luZGV4Lm1kOjAtNTc2XG5zcmMvY29udGVudC9wcm9qZWN0cy93ZWItY29tcG9uZW50cy9pbmRleC5tZDoxNzc0LTI0OTJcbnNyYy9jb250ZW50L3Byb2plY3RzL3dlYi1jb21wb25lbnRzL2luZGV4Lm1kOjI0OTItMjY5NFxuYXN0cm8uY29uZmlnLm1qczowLTc3OFxuc3JjL2NvbnRlbnQvYmxvZy8wMy1hc3Ryby1zcGhlcmUtYWRkLW5ldy1wb3N0LW9yLXByb2plY3RzL2luZGV4Lm1kOjAtNzc5XG5zcmMvY29udGVudC9ibG9nLzAzLWFzdHJvLXNwaGVyZS1hZGQtbmV3LXBvc3Qtb3ItcHJvamVjdHMvaW5kZXgubWQ6Nzc5LTE3MzJcbnNyYy9jb250ZW50L2Jsb2cvMDMtYXN0cm8tc3BoZXJlLWFkZC1uZXctcG9zdC1vci1wcm9qZWN0cy9pbmRleC5tZDoxNzMyLTI3NTZcbnNyYy9jb250ZW50L2Jsb2cvMDMtYXN0cm8tc3BoZXJlLWFkZC1uZXctcG9zdC1vci1wcm9qZWN0cy9pbmRleC5tZDoyNzU2LTMwNzhcbnNyYy9jb250ZW50L3dvcmsvYmlsbGluZ2hvdXNlLm1kOjAtMzI5XG5zcmMvY29udGVudC9ibG9nLzA1LWFzdHJvLXNwaGVyZS13cml0aW5nLW1keC9pbmRleC5tZHg6MC04MjZcbnNyYy9jb250ZW50L2Jsb2cvMDUtYXN0cm8tc3BoZXJlLXdyaXRpbmctbWR4L2luZGV4Lm1keDo4MjYtMTE5M1xuc3JjL2NvbnRlbnQvYmxvZy8wMi1hc3Ryby1zcGhlcmUtZ2V0dGluZy1zdGFydGVkL2luZGV4Lm1kOjAtNjM4XG5zcmMvY29udGVudC9ibG9nLzAyLWFzdHJvLXNwaGVyZS1nZXR0aW5nLXN0YXJ0ZWQvaW5kZXgubWQ6NjM4LTE2MjRcbnNyYy9jb250ZW50L2Jsb2cvMDEtYXN0cm8tc3BoZXJlLWZpbGUtc3RydWN0dXJlL2luZGV4Lm1kOjAtOTkwXG5zcmMvY29udGVudC9ibG9nLzAxLWFzdHJvLXNwaGVyZS1maWxlLXN0cnVjdHVyZS9pbmRleC5tZDo5OTAtMTk5MVxuc3JjL2NvbnRlbnQvYmxvZy8wMS1hc3Ryby1zcGhlcmUtZmlsZS1zdHJ1Y3R1cmUvaW5kZXgubWQ6MTk5MS0yMjg5XG5zcmMvY29udGVudC9sZWdhbC90ZXJtcy5tZDowLTkzNFxuc3JjL2NvbnRlbnQvd29yay9hcHB5dGhpbmdzLm1kOjAtMjY0XG5zcmMvY29udGVudC9ibG9nLzA2LWFzdHJvLXNwaGVyZS1zb2NpYWwtbGlua3MvaW5kZXgubWQ6MC02MzlcbnNyYy9jb250ZW50L3Byb2plY3RzL3Byb2plY3QtMi9pbmRleC5tZDowLTgwNFxuc3JjL2Fzc2V0cy9hYm91dC5zdmc6OTQ5LTE5MjdcbnNyYy9taWRkbGV3YXJlLmpzOjAtMTAxMlxuLmZpcmViYXNlcmM6MC04MyJ9XSwic2Vlbl9zdGF0ZSI6InVuc2VlbiIsInJlc3BvbnNlX3RleHQiOiJCYXNlZCBvbiB0aGUgcHJvamVjdCBmaWxlcywgSSdsbCBjcmVhdGUgYSBjb21wcmVoZW5zaXZlIFJFQURNRS5tZCBmb3IgeW91ciBhcHBsaWNhdGlvbjpcblxuYGBgYG1hcmtkb3duIHBhdGg9UkVBRE1FLm1kIG1vZGU9RURJVFxuIyBCb2IgU3RvdXRlIC0gUGVyc29uYWwgV2Vic2l0ZVxuXG5BIG1vZGVybiwgcGVyZm9ybWFudCBwZXJzb25hbCB3ZWJzaXRlIGFuZCBwb3J0Zm9saW8gYnVpbHQgd2l0aCBBc3RybywgZmVhdHVyaW5nIGEgYmxvZywgcHJvamVjdCBzaG93Y2FzZSwgYW5kIHdvcmsgaGlzdG9yeS4gVGhlIHNpdGUgYWNoaWV2ZXMgcGVyZmVjdCBMaWdodGhvdXNlIHNjb3JlcyB3aGlsZSBtYWludGFpbmluZyBhIGxpZ2h0d2VpZ2h0IGZvb3RwcmludCAodW5kZXIgMTAwa2IgcGVyIHBhZ2UgaW5jbHVkaW5nIGZvbnRzKS5cblxuIyMg8J+agCBUZWNoIFN0YWNrXG5cbi0gKipGcmFtZXdvcmsqKjogW0FzdHJvXShodHRwczovL2FzdHJvLmJ1aWxkKVxuLSAqKlN0eWxpbmcqKjogVGFpbHdpbmQgQ1NTXG4tICoqTGFuZ3VhZ2VzKio6IFR5cGVTY3JpcHQsIEphdmFTY3JpcHRcbi0gKipDb21wb25lbnRzKio6IFNvbGlkSlMgKGZvciBpbnRlcmFjdGl2ZSBlbGVtZW50cylcbi0gKipDb250ZW50Kio6IE1EWC9NYXJrZG93blxuLSAqKkRlcGxveW1lbnQqKjogRmlyZWJhc2UvVmVyY2VsIHN1cHBvcnRlZFxuXG4jIyDinKggRmVhdHVyZXNcblxuLSAqKlBlcmZvcm1hbmNlKipcbiAgLSAxMDAvMTAwIExpZ2h0aG91c2Ugc2NvcmVzXG4gIC0gUGFnZXMgdW5kZXIgMTAwa2IgKGluY2x1ZGluZyBmb250cylcbiAgLSB+NDBtcyByZW5kZXIgdGltZSBvbiBsb2NhbGhvc3RcbiAgLSBTdGF0aWMgU2l0ZSBHZW5lcmF0aW9uIChTU0cpXG5cbi0gKipDb250ZW50IE1hbmFnZW1lbnQqKlxuICAtIEJsb2cgcG9zdHMgd2l0aCBNRFggc3VwcG9ydFxuICAtIFByb2plY3QgcG9ydGZvbGlvXG4gIC0gV29yayBoaXN0b3J5XG4gIC0gTGVnYWwgZG9jdW1lbnRzXG4gIC0gVHlwZS1zYWZlIGNvbnRlbnQgc2NoZW1hcyB1c2luZyBab2RcblxuLSAqKkRldmVsb3BlciBFeHBlcmllbmNlKipcbiAgLSBUeXBlU2NyaXB0IHN1cHBvcnRcbiAgLSBFU0xpbnQgaW50ZWdyYXRpb25cbiAgLSBOZXR3b3JrIGRldmVsb3BtZW50IG1vZGVcbiAgLSBIb3QgbW9kdWxlIHJlbG9hZGluZ1xuXG4tICoqVXNlciBFeHBlcmllbmNlKipcbiAgLSBSZXNwb25zaXZlIGRlc2lnblxuICAtIExpZ2h0L0RhcmsgdGhlbWVcbiAgLSBBbmltYXRlZCBVSSBlbGVtZW50c1xuICAtIEFjY2Vzc2libGVcbiAgLSBTRU8gb3B0aW1pemVkXG4gIC0gQXV0by1nZW5lcmF0ZWQgc2l0ZW1hcFxuICAtIFJTUyBmZWVkXG4gIC0gU2VhcmNoIGZ1bmN0aW9uYWxpdHlcbiAgLSBDb2RlIGJsb2NrIGNvcHlpbmdcblxuIyMg8J+boO+4jyBHZXR0aW5nIFN0YXJ0ZWRcblxuMS4gQ2xvbmUgdGhlIHJlcG9zaXRvcnlcbjIuIEluc3RhbGwgZGVwZW5kZW5jaWVzOlxuICAgYGBgYmFzaFxuICAgbnBtIGluc3RhbGxcbiAgIGBgYFxuMy4gU3RhcnQgdGhlIGRldmVsb3BtZW50IHNlcnZlcjpcbiAgIGBgYGJhc2hcbiAgIG5wbSBydW4gZGV2XG4gICBgYGBcbiAgIEZvciBuZXR3b3JrIGFjY2VzczpcbiAgIGBgYGJhc2hcbiAgIG5wbSBydW4gZGV2Om5ldHdvcmtcbiAgIGBgYFxuXG4jIyDwn5OdIEF2YWlsYWJsZSBTY3JpcHRzXG5cbi0gYG5wbSBydW4gZGV2YCAtIFN0YXJ0IGRldmVsb3BtZW50IHNlcnZlclxuLSBgbnBtIHJ1biBkZXY6bmV0d29ya2AgLSBTdGFydCBkZXZlbG9wbWVudCBzZXJ2ZXIgd2l0aCBuZXR3b3JrIGFjY2Vzc1xuLSBgbnBtIHJ1biBidWlsZGAgLSBCdWlsZCBwcm9kdWN0aW9uIHNpdGVcbi0gYG5wbSBydW4gcHJldmlld2AgLSBQcmV2aWV3IHByb2R1Y3Rpb24gYnVpbGRcbi0gYG5wbSBydW4gcHJldmlldzpuZXR3b3JrYCAtIFByZXZpZXcgd2l0aCBuZXR3b3JrIGFjY2Vzc1xuLSBgbnBtIHJ1biBkZXBsb3ktZmlyZWJhc2VgIC0gRGVwbG95IHRvIEZpcmViYXNlXG4tIGBucG0gcnVuIGRlcGxveS12ZXJjZWxgIC0gRGVwbG95IHRvIFZlcmNlbFxuLSBgbnBtIHJ1biBsaW50YCAtIFJ1biBFU0xpbnRcbi0gYG5wbSBydW4gbGludDpmaXhgIC0gQXV0by1maXggRVNMaW50IGlzc3Vlc1xuXG4jIyDwn5OBIFByb2plY3QgU3RydWN0dXJlXG5cbmBgYFxuL1xu4pSc4pSA4pSAIHB1YmxpYy8gICAgICAgICAgICMgU3RhdGljIGFzc2V0c1xu4pSc4pSA4pSAIHNyYy9cbuKUgiAgIOKUnOKUgOKUgCBjb21wb25lbnRzLyAgICMgQXN0cm8vU29saWRKUyBjb21wb25lbnRzXG7ilIIgICDilJzilIDilIAgY29udGVudC8gICAgICAjIENvbnRlbnQgY29sbGVjdGlvbnNcbuKUgiAgIOKUgiAgIOKUnOKUgOKUgCBibG9nLyAgICAjIEJsb2cgcG9zdHNcbuKUgiAgIOKUgiAgIOKUnOKUgOKUgCBwcm9qZWN0cy8jIFByb2plY3Qgc2hvd2Nhc2VzXG7ilIIgICDilIIgICDilJzilIDilIAgd29yay8gICAgIyBXb3JrIGhpc3RvcnlcbuKUgiAgIOKUgiAgIOKUlOKUgOKUgCBsZWdhbC8gICAjIExlZ2FsIGRvY3VtZW50c1xu4pSCICAg4pSc4pSA4pSAIGxheW91dHMvICAgICAjIFBhZ2UgbGF5b3V0c1xu4pSCICAg4pSc4pSA4pSAIHBhZ2VzLyAgICAgICAjIFJvdXRlIGNvbXBvbmVudHNcbuKUgiAgIOKUnOKUgOKUgCBzdHlsZXMvICAgICAgIyBHbG9iYWwgc3R5bGVzXG7ilIIgICDilJTilIDilIAgbGliLyAgICAgICAgICMgVXRpbGl0eSBmdW5jdGlvbnNcbmBgYFxuXG4jIyDwn5OaIENvbnRlbnQgTWFuYWdlbWVudFxuXG5Db250ZW50IGlzIG1hbmFnZWQgdGhyb3VnaCBBc3RybydzIGNvbnRlbnQgY29sbGVjdGlvbnMsIHdpdGggc3RyaWN0IHR5cGluZyB2aWEgWm9kIHNjaGVtYXM6XG5cbi0gKipCbG9nIFBvc3RzKio6IEFydGljbGVzIHdpdGggdGl0bGUsIHN1bW1hcnksIGRhdGUsIGFuZCB0YWdzXG4tICoqUHJvamVjdHMqKjogUG9ydGZvbGlvIGl0ZW1zIHdpdGggb3B0aW9uYWwgZGVtby9yZXBvIGxpbmtzXG4tICoqV29yayBIaXN0b3J5Kio6IFByb2Zlc3Npb25hbCBleHBlcmllbmNlIGVudHJpZXNcbi0gKipMZWdhbCoqOiBUZXJtcywgcHJpdmFjeSBwb2xpY3ksIGV0Yy5cblxuIyMg8J+agCBEZXBsb3ltZW50XG5cblRoZSBzaXRlIHN1cHBvcnRzIG11bHRpcGxlIGRlcGxveW1lbnQgcGxhdGZvcm1zOlxuXG4tICoqRmlyZWJhc2UqKjogYG5wbSBydW4gZGVwbG95LWZpcmViYXNlYFxuLSAqKlZlcmNlbCoqOiBgbnBtIHJ1biBkZXBsb3ktdmVyY2VsYFxuXG4jIyDwn5OEIExpY2Vuc2VcblxuTUlUIExpY2Vuc2VcblxuIyMg8J+UlyBMaW5rc1xuXG4tIExpdmUgU2l0ZTogW2JvYi1zdG91dGUuZmlyZWJhc2VhcHAuY29tXShodHRwczovL2JvYi1zdG91dGUuZmlyZWJhc2VhcHAuY29tKVxuLSBHaXRIdWI6IFtnaXRodWIuY29tL3N0b3V0ZS93ZWJjb21wb25lbnRzXShodHRwczovL2dpdGh1Yi5jb20vc3RvdXRlL3dlYmNvbXBvbmVudHMpXG5gYGBgXG5cblRoaXMgUkVBRE1FIHByb3ZpZGVzIGEgY29tcHJlaGVuc2l2ZSBvdmVydmlldyBvZiB5b3VyIGFwcGxpY2F0aW9uLCBoaWdobGlnaHRpbmcgaXRzIGtleSBmZWF0dXJlcywgdGVjaG5pY2FsIHN0YWNrLCBhbmQgdXNhZ2UgaW5zdHJ1Y3Rpb25zLiBJdCdzIHN0cnVjdHVyZWQgdG8gYmUgYm90aCBpbmZvcm1hdGl2ZSBmb3IgdXNlcnMgYW5kIGhlbHBmdWwgZm9yIGRldmVsb3BlcnMgd2hvIG1pZ2h0IHdvcmsgd2l0aCB0aGUgY29kZWJhc2UuXG4iLCJ3b3Jrc3BhY2VfZmlsZV9jaHVua3MiOlt7ImNoYXJfc3RhcnQiOiIwIiwiY2hhcl9lbmQiOiI5ODMiLCJibG9iX25hbWUiOiJhMTNjM2M2MTc3ZTM2OWJiYjAyMGVlNTY0YWRhYmQzZDVkOTg3M2U1YWY5MmJmZWY2MzZkYzk5YjNlOTE5YmE5IiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoiUkVBRE1FLm1kIn19LHsiY2hhcl9zdGFydCI6Ijk4MyIsImNoYXJfZW5kIjoiMTk2NSIsImJsb2JfbmFtZSI6ImExM2MzYzYxNzdlMzY5YmJiMDIwZWU1NjRhZGFiZDNkNWQ5ODczZTVhZjkyYmZlZjYzNmRjOTliM2U5MTliYTkiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJSRUFETUUubWQifX0seyJjaGFyX3N0YXJ0IjoiMTk2NSIsImNoYXJfZW5kIjoiMjk2MiIsImJsb2JfbmFtZSI6ImExM2MzYzYxNzdlMzY5YmJiMDIwZWU1NjRhZGFiZDNkNWQ5ODczZTVhZjkyYmZlZjYzNmRjOTliM2U5MTliYTkiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJSRUFETUUubWQifX0seyJjaGFyX3N0YXJ0IjoiMjk2MiIsImNoYXJfZW5kIjoiMzAzOCIsImJsb2JfbmFtZSI6ImExM2MzYzYxNzdlMzY5YmJiMDIwZWU1NjRhZGFiZDNkNWQ5ODczZTVhZjkyYmZlZjYzNmRjOTliM2U5MTliYTkiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJSRUFETUUubWQifX0seyJjaGFyX3N0YXJ0IjoiMCIsImNoYXJfZW5kIjoiODEzIiwiYmxvYl9uYW1lIjoiZTNiNWZiNjQ4NGM0MTgzNzk2Njk1YzEzZTdmNGVmNmJlODY3YjUyMTE5ZDkwZDQzM2IzOTRkODMzY2FiMmJkNSIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6InNyYy1kZXNpZ24vY3Ytb3VkLm1keCJ9fSx7ImNoYXJfc3RhcnQiOiI4MTMiLCJjaGFyX2VuZCI6IjE4MjciLCJibG9iX25hbWUiOiJlM2I1ZmI2NDg0YzQxODM3OTY2OTVjMTNlN2Y0ZWY2YmU4NjdiNTIxMTlkOTBkNDMzYjM5NGQ4MzNjYWIyYmQ1IiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoic3JjLWRlc2lnbi9jdi1vdWQubWR4In19LHsiY2hhcl9zdGFydCI6IjE4MjciLCJjaGFyX2VuZCI6IjI4MzUiLCJibG9iX25hbWUiOiJlM2I1ZmI2NDg0YzQxODM3OTY2OTVjMTNlN2Y0ZWY2YmU4NjdiNTIxMTlkOTBkNDMzYjM5NGQ4MzNjYWIyYmQ1IiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoic3JjLWRlc2lnbi9jdi1vdWQubWR4In19LHsiY2hhcl9zdGFydCI6IjI4MzUiLCJjaGFyX2VuZCI6IjM4MTkiLCJibG9iX25hbWUiOiJlM2I1ZmI2NDg0YzQxODM3OTY2OTVjMTNlN2Y0ZWY2YmU4NjdiNTIxMTlkOTBkNDMzYjM5NGQ4MzNjYWIyYmQ1IiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoic3JjLWRlc2lnbi9jdi1vdWQubWR4In19LHsiY2hhcl9zdGFydCI6IjAiLCJjaGFyX2VuZCI6IjkzOCIsImJsb2JfbmFtZSI6IjEyZDFkZWVhNWU3MWRhYWNiOWZhNzk2ZmViMmE4NjE3NzdjNzIwMjUxY2FiOTc3ZTllYjc0NWU3MDJkYzQxZmMiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJzcmMtZGVzaWduL2N2Lm1keCJ9fSx7ImNoYXJfc3RhcnQiOiI5MzgiLCJjaGFyX2VuZCI6IjE3NjkiLCJibG9iX25hbWUiOiIxMmQxZGVlYTVlNzFkYWFjYjlmYTc5NmZlYjJhODYxNzc3YzcyMDI1MWNhYjk3N2U5ZWI3NDVlNzAyZGM0MWZjIiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoic3JjLWRlc2lnbi9jdi5tZHgifX0seyJjaGFyX3N0YXJ0IjoiMTc2OSIsImNoYXJfZW5kIjoiMjc3MyIsImJsb2JfbmFtZSI6IjEyZDFkZWVhNWU3MWRhYWNiOWZhNzk2ZmViMmE4NjE3NzdjNzIwMjUxY2FiOTc3ZTllYjc0NWU3MDJkYzQxZmMiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJzcmMtZGVzaWduL2N2Lm1keCJ9fSx7ImNoYXJfc3RhcnQiOiIyNzczIiwiY2hhcl9lbmQiOiIzNzU3IiwiYmxvYl9uYW1lIjoiMTJkMWRlZWE1ZTcxZGFhY2I5ZmE3OTZmZWIyYTg2MTc3N2M3MjAyNTFjYWI5NzdlOWViNzQ1ZTcwMmRjNDFmYyIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6InNyYy1kZXNpZ24vY3YubWR4In19LHsiY2hhcl9zdGFydCI6IjM3NTciLCJjaGFyX2VuZCI6IjQyOTIiLCJibG9iX25hbWUiOiIxMmQxZGVlYTVlNzFkYWFjYjlmYTc5NmZlYjJhODYxNzc3YzcyMDI1MWNhYjk3N2U5ZWI3NDVlNzAyZGM0MWZjIiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoic3JjLWRlc2lnbi9jdi5tZHgifX0seyJjaGFyX3N0YXJ0IjoiMCIsImNoYXJfZW5kIjoiOTQyIiwiYmxvYl9uYW1lIjoiZjA5ZGE4NzVmMWFjNGVlYTgyYzYwNzA5ODZmMzE0N2Q5MmM2YzQwMTgxMzAyZTRhNGUyMjA3YzI0MzFkOGY5NSIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6InBhY2thZ2UuanNvbiJ9fSx7ImNoYXJfc3RhcnQiOiIwIiwiY2hhcl9lbmQiOiI1NzYiLCJibG9iX25hbWUiOiI4YzU3MDVlYWI1NzZhMTIxODU3MjlmNGRkYTZkZDM0Mjg3ZjFjYzRhN2IxODlmZmYwZDdiYWY3NTUxNjFhZGQyIiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoic3JjL2NvbnRlbnQvcHJvamVjdHMvd2ViLWNvbXBvbmVudHMvaW5kZXgubWQifX0seyJjaGFyX3N0YXJ0IjoiMTc3NCIsImNoYXJfZW5kIjoiMjQ5MiIsImJsb2JfbmFtZSI6IjhjNTcwNWVhYjU3NmExMjE4NTcyOWY0ZGRhNmRkMzQyODdmMWNjNGE3YjE4OWZmZjBkN2JhZjc1NTE2MWFkZDIiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJzcmMvY29udGVudC9wcm9qZWN0cy93ZWItY29tcG9uZW50cy9pbmRleC5tZCJ9fSx7ImNoYXJfc3RhcnQiOiIyNDkyIiwiY2hhcl9lbmQiOiIyNjk0IiwiYmxvYl9uYW1lIjoiOGM1NzA1ZWFiNTc2YTEyMTg1NzI5ZjRkZGE2ZGQzNDI4N2YxY2M0YTdiMTg5ZmZmMGQ3YmFmNzU1MTYxYWRkMiIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6InNyYy9jb250ZW50L3Byb2plY3RzL3dlYi1jb21wb25lbnRzL2luZGV4Lm1kIn19LHsiY2hhcl9zdGFydCI6IjAiLCJjaGFyX2VuZCI6Ijc3OCIsImJsb2JfbmFtZSI6IjBiNDI4MjgzY2IzMjFkZGQ0MDZiMjE0NzgxNzA3MDIwODU2ODJjN2Q5OTY5MzFiZmY2YWU4ODY4N2ZiZmQxYzAiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJhc3Ryby5jb25maWcubWpzIn19LHsiY2hhcl9zdGFydCI6IjAiLCJjaGFyX2VuZCI6Ijc3OSIsImJsb2JfbmFtZSI6IjYwN2NiYmJhZTZhNzg4Mjg4MDIwOWFmMDM4NDUzMjc1ZGQwMmFhNTI4ZWMwZjNkMDY2Mzc0YTNjMDdlOWMwZjEiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJzcmMvY29udGVudC9ibG9nLzAzLWFzdHJvLXNwaGVyZS1hZGQtbmV3LXBvc3Qtb3ItcHJvamVjdHMvaW5kZXgubWQifX0seyJjaGFyX3N0YXJ0IjoiNzc5IiwiY2hhcl9lbmQiOiIxNzMyIiwiYmxvYl9uYW1lIjoiNjA3Y2JiYmFlNmE3ODgyODgwMjA5YWYwMzg0NTMyNzVkZDAyYWE1MjhlYzBmM2QwNjYzNzRhM2MwN2U5YzBmMSIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6InNyYy9jb250ZW50L2Jsb2cvMDMtYXN0cm8tc3BoZXJlLWFkZC1uZXctcG9zdC1vci1wcm9qZWN0cy9pbmRleC5tZCJ9fSx7ImNoYXJfc3RhcnQiOiIxNzMyIiwiY2hhcl9lbmQiOiIyNzU2IiwiYmxvYl9uYW1lIjoiNjA3Y2JiYmFlNmE3ODgyODgwMjA5YWYwMzg0NTMyNzVkZDAyYWE1MjhlYzBmM2QwNjYzNzRhM2MwN2U5YzBmMSIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6InNyYy9jb250ZW50L2Jsb2cvMDMtYXN0cm8tc3BoZXJlLWFkZC1uZXctcG9zdC1vci1wcm9qZWN0cy9pbmRleC5tZCJ9fSx7ImNoYXJfc3RhcnQiOiIyNzU2IiwiY2hhcl9lbmQiOiIzMDc4IiwiYmxvYl9uYW1lIjoiNjA3Y2JiYmFlNmE3ODgyODgwMjA5YWYwMzg0NTMyNzVkZDAyYWE1MjhlYzBmM2QwNjYzNzRhM2MwN2U5YzBmMSIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6InNyYy9jb250ZW50L2Jsb2cvMDMtYXN0cm8tc3BoZXJlLWFkZC1uZXctcG9zdC1vci1wcm9qZWN0cy9pbmRleC5tZCJ9fSx7ImNoYXJfc3RhcnQiOiIwIiwiY2hhcl9lbmQiOiIzMjkiLCJibG9iX25hbWUiOiI0MTI4YTA3ODc1Nzg5MGQ4OWZiMjZkMGEwY2Q4MGE2MGNmNWU4M2VmODIyNjg1NDM0ODExMDEwYjZhODUyZjYxIiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoic3JjL2NvbnRlbnQvd29yay9iaWxsaW5naG91c2UubWQifX0seyJjaGFyX3N0YXJ0IjoiMCIsImNoYXJfZW5kIjoiODI2IiwiYmxvYl9uYW1lIjoiYzcyMzdjYmMzYTMzNTllMzA5NGNhY2ZkMzc2ODY0NDliN2Y4MWRjOGJjZGZiZjIwNDE4ZTA0Yjc1NDkzOTk3YyIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6InNyYy9jb250ZW50L2Jsb2cvMDUtYXN0cm8tc3BoZXJlLXdyaXRpbmctbWR4L2luZGV4Lm1keCJ9fSx7ImNoYXJfc3RhcnQiOiI4MjYiLCJjaGFyX2VuZCI6IjExOTMiLCJibG9iX25hbWUiOiJjNzIzN2NiYzNhMzM1OWUzMDk0Y2FjZmQzNzY4NjQ0OWI3ZjgxZGM4YmNkZmJmMjA0MThlMDRiNzU0OTM5OTdjIiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoic3JjL2NvbnRlbnQvYmxvZy8wNS1hc3Ryby1zcGhlcmUtd3JpdGluZy1tZHgvaW5kZXgubWR4In19LHsiY2hhcl9zdGFydCI6IjAiLCJjaGFyX2VuZCI6IjYzOCIsImJsb2JfbmFtZSI6IjE4MTE1NGM1Yzk3YzY4NzY3NDlkMTBmMTEyYzhlOTM0M2Q2ZTQyNzY3YmRlOTE5NjQyMjcyNDgzMzA0YjJhOWEiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJzcmMvY29udGVudC9ibG9nLzAyLWFzdHJvLXNwaGVyZS1nZXR0aW5nLXN0YXJ0ZWQvaW5kZXgubWQifX0seyJjaGFyX3N0YXJ0IjoiNjM4IiwiY2hhcl9lbmQiOiIxNjI0IiwiYmxvYl9uYW1lIjoiMTgxMTU0YzVjOTdjNjg3Njc0OWQxMGYxMTJjOGU5MzQzZDZlNDI3NjdiZGU5MTk2NDIyNzI0ODMzMDRiMmE5YSIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6InNyYy9jb250ZW50L2Jsb2cvMDItYXN0cm8tc3BoZXJlLWdldHRpbmctc3RhcnRlZC9pbmRleC5tZCJ9fSx7ImNoYXJfc3RhcnQiOiIwIiwiY2hhcl9lbmQiOiI5OTAiLCJibG9iX25hbWUiOiIxMjQ4OTZlMjZkZGI3YWZmMzhlYTMzNTQ4ODAwNmZmZDdiMTNkN2YwYjg3OTc1M2I3YTlmNDcxMGRmODg3MTk5IiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoic3JjL2NvbnRlbnQvYmxvZy8wMS1hc3Ryby1zcGhlcmUtZmlsZS1zdHJ1Y3R1cmUvaW5kZXgubWQifX0seyJjaGFyX3N0YXJ0IjoiOTkwIiwiY2hhcl9lbmQiOiIxOTkxIiwiYmxvYl9uYW1lIjoiMTI0ODk2ZTI2ZGRiN2FmZjM4ZWEzMzU0ODgwMDZmZmQ3YjEzZDdmMGI4Nzk3NTNiN2E5ZjQ3MTBkZjg4NzE5OSIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6InNyYy9jb250ZW50L2Jsb2cvMDEtYXN0cm8tc3BoZXJlLWZpbGUtc3RydWN0dXJlL2luZGV4Lm1kIn19LHsiY2hhcl9zdGFydCI6IjE5OTEiLCJjaGFyX2VuZCI6IjIyODkiLCJibG9iX25hbWUiOiIxMjQ4OTZlMjZkZGI3YWZmMzhlYTMzNTQ4ODAwNmZmZDdiMTNkN2YwYjg3OTc1M2I3YTlmNDcxMGRmODg3MTk5IiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoic3JjL2NvbnRlbnQvYmxvZy8wMS1hc3Ryby1zcGhlcmUtZmlsZS1zdHJ1Y3R1cmUvaW5kZXgubWQifX0seyJjaGFyX3N0YXJ0IjoiMCIsImNoYXJfZW5kIjoiOTM0IiwiYmxvYl9uYW1lIjoiMWI4NWU4OWVmMWVkMzM5ODU4NWEzMWMxZGMwNThiNjc1OTU2MGU1M2NhZGMzMDYzYzllN2RjOWNlYzFiNzFlZSIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6InNyYy9jb250ZW50L2xlZ2FsL3Rlcm1zLm1kIn19LHsiY2hhcl9zdGFydCI6IjAiLCJjaGFyX2VuZCI6IjI2NCIsImJsb2JfbmFtZSI6ImRjOTg4ODY5ODhmNTEyOTEwZTM4ZTBjMTEyNzMzMzUzZTNkZjQ5NTQ4MDA1OGE1ZjA1NzE3ZTY2MjBkMjQyODMiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJzcmMvY29udGVudC93b3JrL2FwcHl0aGluZ3MubWQifX0seyJjaGFyX3N0YXJ0IjoiMCIsImNoYXJfZW5kIjoiNjM5IiwiYmxvYl9uYW1lIjoiZDE0MzI1MDcyYWY0MGRlYzg3NmNlYWQxMmNiNjY4NmY1OWRkN2ZmZGJkMjQwOTkzODdkMzZhMTM3MGMxZDM1ZCIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6InNyYy9jb250ZW50L2Jsb2cvMDYtYXN0cm8tc3BoZXJlLXNvY2lhbC1saW5rcy9pbmRleC5tZCJ9fSx7ImNoYXJfc3RhcnQiOiIwIiwiY2hhcl9lbmQiOiI4MDQiLCJibG9iX25hbWUiOiI0M2Y0NDI0Y2NhNjRkM2EzMzA5M2ZmOWRjMWI3NTNiZWRkZjgwNzcxOTA3MThmYWYwMzMxMTljODM3NjZjZWM1IiwiZmlsZSI6eyJyZXBvUm9vdCI6IiIsInBhdGhOYW1lIjoic3JjL2NvbnRlbnQvcHJvamVjdHMvcHJvamVjdC0yL2luZGV4Lm1kIn19LHsiY2hhcl9zdGFydCI6Ijk0OSIsImNoYXJfZW5kIjoiMTkyNyIsImJsb2JfbmFtZSI6ImYyMDhiNTc1YWJlMmIzMTFiOGExNDYyYjMyYmQxMmVjZDk2MjlhYTY1NWI2OTJkNDNmNWE3ODhiYTgzZDE2MTgiLCJmaWxlIjp7InJlcG9Sb290IjoiIiwicGF0aE5hbWUiOiJzcmMvYXNzZXRzL2Fib3V0LnN2ZyJ9fSx7ImNoYXJfc3RhcnQiOiIwIiwiY2hhcl9lbmQiOiIxMDEyIiwiYmxvYl9uYW1lIjoiMzEzY2NmOWQzY2JjZGEzYjY5YzkxYTQwYjQ0NjZkNTgxMTc4MGVkMTRiNjgzNDZjNmM0YzIyZDBkNDY5MTg5MyIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6InNyYy9taWRkbGV3YXJlLmpzIn19LHsiY2hhcl9zdGFydCI6IjAiLCJjaGFyX2VuZCI6IjgzIiwiYmxvYl9uYW1lIjoiOWQ3OWQ5ZTc2ZGVjYzExMjYwMmJlNTViMDVjZTY1M2I4NmMxOGNhZThmNGVlN2RjZmMwMTkzNjVkMTEwNTUzZCIsImZpbGUiOnsicmVwb1Jvb3QiOiIiLCJwYXRoTmFtZSI6Ii5maXJlYmFzZXJjIn19XX1dLCJmZWVkYmFja1N0YXRlcyI6eyJ0ZW1wLWZlLWYyY2Y5YmNkLTgwOWMtNDNmNi05NzAzLWM3MjYyYzM5OTI4ZCI6eyJzZWxlY3RlZFJhdGluZyI6MCwiZmVlZGJhY2tOb3RlIjoiIn19LCJ0b29sVXNlU3RhdGVzIjp7fSwiZHJhZnRFeGNoYW5nZSI6eyJyZXF1ZXN0X21lc3NhZ2UiOiIiLCJyaWNoX3RleHRfanNvbl9yZXByIjp7InR5cGUiOiJkb2MiLCJjb250ZW50IjpbeyJ0eXBlIjoicGFyYWdyYXBoIn1dfSwic3RhdHVzIjoiZHJhZnQifSwicmVxdWVzdElkcyI6W10sImlzUGlubmVkIjpmYWxzZSwiaXNTaGFyZWFibGUiOnRydWUsImV4dHJhRGF0YSI6e319fSwiaXNDb250ZXh0UGFuZU9wZW4iOmZhbHNlLCJpc0FjdGlvbnNQYW5lT3BlbiI6ZmFsc2V9" />
      </map>
    </option>
  </component>
</project>